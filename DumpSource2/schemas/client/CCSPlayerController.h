class CCSPlayerController : public CBasePlayerController
{
	CCSPlayerController_InGameMoneyServices* m_pInGameMoneyServices;
	CCSPlayerController_InventoryServices* m_pInventoryServices;
	CCSPlayerController_ActionTrackingServices* m_pActionTrackingServices;
	CCSPlayerController_DamageServices* m_pDamageServices;
	uint32 m_iPing;
	bool m_bHasCommunicationAbuseMute;
	CUtlSymbolLarge m_szCrosshairCodes;
	uint8 m_iPendingTeamNum;
	GameTime_t m_flForceTeamTime;
	int32 m_iCompTeammateColor;
	bool m_bEverPlayedOnTeam;
	GameTime_t m_flPreviousForceJoinTeamTime;
	CUtlSymbolLarge m_szClan;
	CUtlString m_sSanitizedPlayerName;
	int32 m_iCoachingTeam;
	uint64 m_nPlayerDominated;
	uint64 m_nPlayerDominatingMe;
	int32 m_iCompetitiveRanking;
	int32 m_iCompetitiveWins;
	int8 m_iCompetitiveRankType;
	int32 m_iCompetitiveRankingPredicted_Win;
	int32 m_iCompetitiveRankingPredicted_Loss;
	int32 m_iCompetitiveRankingPredicted_Tie;
	int32 m_nEndMatchNextMapVote;
	uint16 m_unActiveQuestId;
	QuestProgress::Reason m_nQuestProgressReason;
	uint32 m_unPlayerTvControlFlags;
	int32 m_iDraftIndex;
	uint32 m_msQueuedModeDisconnectionTimestamp;
	uint32 m_uiAbandonRecordedReason;
	bool m_bCannotBeKicked;
	bool m_bEverFullyConnected;
	bool m_bAbandonAllowsSurrender;
	bool m_bAbandonOffersInstantSurrender;
	bool m_bDisconnection1MinWarningPrinted;
	bool m_bScoreReported;
	int32 m_nDisconnectionTick;
	bool m_bControllingBot;
	bool m_bHasControlledBotThisRound;
	bool m_bHasBeenControlledByPlayerThisRound;
	int32 m_nBotsControlledThisRound;
	bool m_bCanControlObservedBot;
	CHandle< C_CSPlayerPawn > m_hPlayerPawn;
	CHandle< C_CSObserverPawn > m_hObserverPawn;
	bool m_bPawnIsAlive;
	uint32 m_iPawnHealth;
	int32 m_iPawnArmor;
	bool m_bPawnHasDefuser;
	bool m_bPawnHasHelmet;
	uint16 m_nPawnCharacterDefIndex;
	int32 m_iPawnLifetimeStart;
	int32 m_iPawnLifetimeEnd;
	int32 m_iPawnBotDifficulty;
	CHandle< CCSPlayerController > m_hOriginalControllerOfCurrentPawn;
	int32 m_iScore;
	C_NetworkUtlVectorBase< EKillTypes_t > m_vecKills;
	bool m_bMvpNoMusic;
	int32 m_eMvpReason;
	int32 m_iMusicKitID;
	int32 m_iMusicKitMVPs;
	int32 m_iMVPs;
	bool m_bIsPlayerNameDirty;
};
