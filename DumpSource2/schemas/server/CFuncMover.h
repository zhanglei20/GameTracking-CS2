class CFuncMover : public CBaseModelEntity
{
	bool m_bCreateMovableNavMesh;
	CUtlSymbolLarge m_iszPathName;
	CHandle< CPathMover > m_hPathMover;
	CUtlSymbolLarge m_iszPathNodeStart;
	CFuncMover::Move_t m_eMoveType;
	bool m_bIsReversing;
	Vector m_vTarget;
	float32 m_flStartSpeed;
	float32 m_flPathLocation;
	float32 m_flT;
	int32 m_nCurrentNodeIndex;
	int32 m_nPreviousNodeIndex;
	bool m_bFixedOrientation;
	bool m_bFixedPitch;
	SolidType_t m_eSolidType;
	bool m_bIsMoving;
	float32 m_flTimeToReachMaxSpeed;
	float32 m_flDistanceToReachMaxSpeed;
	float32 m_flTimeToReachZeroSpeed;
	float32 m_flDistanceToReachZeroSpeed;
	GameTime_t m_flTimeMovementStart;
	GameTime_t m_flTimeMovementStop;
	CHandle< CMoverPathNode > m_hStopAtNode;
	float32 m_flPathLocationToBeginStop;
	CUtlSymbolLarge m_iszStartForwardSound;
	CUtlSymbolLarge m_iszLoopForwardSound;
	CUtlSymbolLarge m_iszStopForwardSound;
	CUtlSymbolLarge m_iszStartReverseSound;
	CUtlSymbolLarge m_iszLoopReverseSound;
	CUtlSymbolLarge m_iszStopReverseSound;
	CUtlSymbolLarge m_iszArriveAtDestinationSound;
	CEntityIOOutput m_OnMovementEnd;
	bool m_bStartAtEnd;
	CFuncMover::OrientationUpdate_t m_eOrientationUpdate;
	GameTime_t m_flTimeStartOrientationChange;
	float32 m_flTimeToBlendToNewOrientation;
	float32 m_flDurationBlendToNewOrientationRan;
	Quaternion m_qOriginalOrientation;
};
