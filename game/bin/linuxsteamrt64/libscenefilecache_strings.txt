    invalid!\n
    matcher:  !=%s\n
    matcher:  %s\n
    matcher:  ==%s\n
  %20s = '%s' (weight %f)\n
  %20s = '%s'\n
  criterion '%25s':'%15s' 
 and 
%d vcd names remaining (%d removed) after unload of '%s'\n
%llu
%s allocation count overflow
%s allocation count overflow( %llu > %llu )\n
%s allocation count overflow( add %llu + current %llu > max %llu )\n
%s | %s:  discarded rule because of invalid criterion %i:  %s\n
%s%20s : %40s %5.3f\n
%s(token %i) : %s
%s/%s:  discarded rule because of invalid criterion %i:  %s\n
'%20s' vs. '%20s' = 
*Z14ComputeMatcherP8CriteriaP15CResponseSystemEUlPKcRbE_
*ZN15CResponseSystem7CompareEPKcP8CriteriabEUlS1_RbE_
*ZN19CResponseFileParser14ComputeMatcherEP8CriteriaEUlPKcRbE_
, score %4.2f\n
../../public/tier0/utldict.h
../../public/tier0/utlrbtree.h
.vcd
13CBaseUndoable
14CBaseAppSystemI15ISceneFileCacheE
14CBaseAppSystemI23IResponseRulesFileCacheE
15CResponseSystem
15CSceneFileCache
15CTier0AppSystemI15ISceneFileCacheLx0EE
15CTier0AppSystemI23IResponseRulesFileCacheLx0EE
15CTier1AppSystemI15ISceneFileCacheLx0EE
15CTier1AppSystemI23IResponseRulesFileCacheLx0EE
15CTier2AppSystemI15ISceneFileCacheLx0EE
15IResponseSystem
15ISceneFileCache
17CChoreoStringPool
17CResponseDoc_Node
17CResponseDoc_Root
17CResponseDoc_Rule
17IChoreoStringPool
19CGameResponseSystem
20IResourceTypeManager
21CResponseDoc_Response
22IAddonListChangeNotify
23CResponseRulesFileCache
23IResponseRulesFileCache
24CResponseDoc_Requirement
25CResponseRulesTypeManager
26CResponseDoc_ResponseGroup
27CChoreoSceneDataTypeManager
34CSchemaRegistration_scenefilecache
9IUndoable
< WRITE DEFAULTS >
<map_key>
<map_value>
???CRR_Response bogus index
?basic_string::_S_create
@@regex_error
@No such enumeration '%s'\n
@RESPONSE_SCENE
AGCriteria_%s
AGFollowup_%d
AGResp_%s_%d
AGRule_%s
AI_ResponseSystem:  Unxpected TokenWaiting() with NULL buffer in %s
AddMultipleToTail
CResponseFileParser::LoadFromBuffer:  Unknown entry type '%s', expecting 'response', 'criterion', 'enumeration' or 'rules' in file %s(offset:%i)\n
CResponseRulesLegacyTextImporter: ignoring commented-out #include "%s"\n
CResponseRulesLegacyTextImporter::LoadFromBuffer:  Unknown entry type '%s', expecting 'response', 'criterion', 'enumeration' or 'rules' in file %s(offset:%i)\n
CResponseSystem:  %s (%i rules, %i criteria, and %i responses)\n
CResponseSystem:  failed to load %s\n
CResponseSystem::LoadFromFile took %f msec
CUtlSymbol
Call Pulse
Chance
ChoreoSceneDataStartup
ChoreoSceneDataStartup_Staging
ChoreoSceneFileDataManifest
ChoreoSceneFileDataManifest_Staging
Citadel
Concept
Discarded rule %s\n
Dota
Duplicate include: %s\n
Embedded criteria Generated: rule '%s' pointing to response '%s'.\n
Embedded response receiving name: '%s'.\n
Expecting '{' in enumeration '%s', got '%s'
Expecting '{' in enumeration '%s', got '%s'\n
Expecting '{' in rule '%s', got '%s'
Expecting '{' in rule '%s', got '%s'\n
Expecting more tokens in enumeration '%s'
Expecting more tokens in enumeration '%s'\n
Expecting more tokens in rule '%s'
Expecting more tokens in rule '%s'\n
FIRE token in response needs exactly three parameters.
Failed to allocate an instance of a class
Fire Entity I/O
Found %i matching rules, selecting slot %i\n
GetSceneDataFromImage( %s ) called with %u byte buffer, but compressed file is %u bytes\n
GetSceneDataFromImage( %s ) called with %u byte buffer, but file data is %u bytes\n
GetSceneDataFromImage( %s ) lzma decompression failed\n
Hammer/GameFeatureSet
KV3 save transfer failed: %s
LoadResponseSystem
LoadResponseSystem %s - Finish\n
LoadResponseSystem %s - Start\n
LoadResponseSystem: Failed to load response resource: %s\n
LoadResponseSystem: failed to load '%s'\n
Loaded %d .vcds from %d vcdlist files\n
Loaded %d .vcds from '%s'\n
Matched rule '%s', 
Multiple definitions for criteria '%s' [%u]\n
Multiple definitions for criteria '%s'\n
Multiple responses with same name '%s' - SKIPPING response!\n
Multiple responses with same name '%s'\n
No .vcds loaded or no scenes/scenes.vrman\n
No such response '%s' for rule '%s'\n
Print (for prototyping)
RESOURCE_TYPE_CHOREO_SCENE_FILE_DATA
RESOURCE_TYPE_RESPONSE_RULES_LIST
RESPONSEDOC_LIB
RESPONSE_ENTITYIO
RESPONSE_NONE
RESPONSE_PRINT
RESPONSE_PULSE
RESPONSE_RESPONSE
RESPONSE_RULES
RESPONSE_SPEAK
RULE MATCHED!\n
Reading: %s\n
Reloading .vcdlist due to addon change\n
Response group '%s' is trying to use embedded responses, but it has no embedded criteria, which is required for embedded responses.\n
Response group '%s' is trying to use embedded responses, but it has no embedded requirement, which is required for embedded responses.\n
ResponseGroup '%s' is NOT named uniquely!\n
ResponseGroup '%s' isn't referenced by any rule - adding a dummy embedded rule\n
ResponseGroup has no name, and no embedded rule - adding a dummy embedded rule\n
ResponseRulesCache001
Rule '%s' and ResponseGroup '%s' names don't match!\n
Rule '%s' and ResponseGroup '%s' notes don't match!\n
Rule '%s' is %s but ResponseGroup '%s' is %s!\n
Rule '%s' using inlined criteria, which are no longer supported
Rule '%s' using inlined criteria, which are no longer supported\n
Rule is disabled.\n
Scene (vcd)
SceneFileCache
SceneFileCache002
Scoring rule '%s' (%i)\n{\n
Search criteria:\n
ShutdownSceneCache: %d vcd names remaining (%d removed)\n
Speak (sound event)
Speaker contexts: '%s', 
THEN token in response had a target '%s', but lacked any further info
THEN token in response had a target '%s', but lacked any further info.\n
THEN token in response lacked any further info
THEN token in response lacked any further info.\n
THEN token in response lacked contexts
THEN token in response lacked contexts.\n
THENSIMPLE incorrectly specified. Format: thensimple <delay> <single response>
THENSIMPLE incorrectly specified. Format: thensimple <delay> <single response>\n
ThenSimple rule Generated: rule '%s' with criteria '%s' pointing to response '%s'.\n
ThenSimple rule generated in response '%s'.\n
Unable to load #included script %s\n
Unnamed_Response(1)
World contexts: '%s', 
\nFailed to save %s\n
\nFailed to upconvert %s\n
_%s(token %i) : %s\n
_Rule
_response
_rule
applycontext
applycontexttoworld
cancel_existing
color
conceptpriority
criteria
criterion
defaultdelay
displayfirst
displaylast
enumeration
failed (+exclude rule)
fire
free
fwrite
interrupt_and_cancel
interrupt_then_resume
libscenefilecache.so
m_ConceptPriorities
m_Enumerations
m_Includes
m_Requirements
m_ResponseGroups
m_Rules
m_SoundEventScripts
m_actorName
m_additionalTemplateResponseLines
m_bApplyContextToWorld
m_bCancelExisting
m_bDepleteBeforeRepeat
m_bFirst
m_bInterruptAndCancel
m_bInterruptThenResume
m_bIsTemplate
m_bLast
m_bMatchOnce
m_bNoRepeat
m_bNoScene
m_bSequential
m_bSpeakOnce
m_bStopOnNonIdle
m_concept
m_context
m_delay.range
m_delay.start
m_flFollowupDelay
m_freeVariableValues
m_hRoot
m_handle
m_iNode
m_input
m_matchExpr
m_matchKey
m_notes
m_odds
m_pConceptFollowup
m_pEmbeddedRule
m_pEntityIOFollowup
m_pResponseFollowup
m_predelay.range
m_predelay.start
m_respeakDelay.range
m_respeakDelay.start
m_respeakdelay.range
m_respeakdelay.start
m_responses
m_selectedResponses
m_selectedRules
m_soundEventActorOverride
m_speakerType
m_suppressedTemplateResponseLines
m_weapondelay.range
m_weapondelay.start
matched, weight %4.2f (s %4.2f x c %4.2f)
matchonce
newline
nodelay
nopriority
norepeat
noscene
not enough space for format expansion (Please submit full bug report at https://gcc.gnu.org/bugsSt15basic_streambufIcSt11char_traitsIcEE
null
permitrepeats
predelay
read
resourcesystem
respeakdelay
response %s = '%s'\n
response entry '%s' with unknown command '%s'
response entry '%s' with unknown command '%s'\n
response entry '%s' with unknown response type '%s'
response entry '%s' with unknown response type '%s'\n
response rule %s has no CONCEPT!\n
response rule %s has no speaker!\n
response_rules
response_rules_staging
rr_dumpresponses
scenefilecache
scenefilecache.cpp
scenes/scenes.vrman
scenes/scenes.vrman_c
scenes_staging/scenes.vrman
scenes_staging/scenes.vrman_c
scripts/%s
self
speakonce
std::back_insert_iterator<std::string> std::match_results<char const*, std::allocator<std::sub_match<char const*>>>::format<std::back_insert_iterator<std::string>>(std::back_insert_iterator<std::string>, char const*, char const*, std::regex_constants::match_flag_type) const
std::back_insert_iterator<std::string> std::regex_replace<std::back_insert_iterator<std::string>, char const*, std::regex_traits<char>, char>(std::back_insert_iterator<std::string>, char const*, char const*, std::basic_regex<char, std::regex_traits<char>> const&, char const*, std::regex_constants::match_flag_type)
stop_on_nonidle
strcmp
strrchr
table
targetclassname
then
thensimple
vrr1
vrr_c1
weapondelay
weight
