            
                       
                          
 !"#$%&'()*+,-./
 & 0 : D N X b l v 
 000000000000
 : : : : : : 
 \r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r,\r
!"!(!/!5!:!@!F!L!
#!V!W!"!&!r%!%#%%%'%)%c%e%g%C%<!"%$%&%(%*%+%-%/%1%3%5%7%9%;%=%?%A%D%F%H%J%K%L%M%N%O%R%U%X%[%^%_%`%a%b%d%f%h%i%j%k%l%m%o%s%+!,!
#'#7#G#R#\#k#{#
#\n#\n \n \n \n \n \n \n
$/$:$D$S$c$s$
$2*20262<2B2H2N2T2
%"%,%;%K%[%k%{%
%%ALIAS
%%Parent
%%ParentIsRoot
(anonymous namespace)::AvailableLocalesSink::put(char const*, icu_71::ResourceValue&, signed char, UErrorCode&)
(anonymous namespace)::AvailableLocalesSink::~AvailableLocalesSink()
(anonymous namespace)::AvailableLocalesStringEnumeration::count(UErrorCode&) const
(anonymous namespace)::AvailableLocalesStringEnumeration::next(int*, UErrorCode&)
(anonymous namespace)::AvailableLocalesStringEnumeration::reset(UErrorCode&)
(anonymous namespace)::AvailableLocalesStringEnumeration::~AvailableLocalesStringEnumeration()
(anonymous namespace)::GetAllChildrenSink::put(char const*, icu_71::ResourceValue&, signed char, UErrorCode&)
(anonymous namespace)::GetAllChildrenSink::~GetAllChildrenSink()
(anonymous namespace)::ParseDataSink::put(char const*, icu_71::ResourceValue&, signed char, UErrorCode&)
(anonymous namespace)::ParseDataSink::~ParseDataSink()
(anonymous namespace)::SCRIPT_PROPS
(anonymous namespace)::_ISO2022JPData
(anonymous namespace)::_load_installedLocales(UErrorCode&)
(anonymous namespace)::_set_add(USet*, int)
(anonymous namespace)::_set_addRange(USet*, int, int)
(anonymous namespace)::_set_addString(USet*, char16_t const*, int)
(anonymous namespace)::acceptLanguage(UEnumeration&, icu_71::Locale::Iterator&, char*, int, UAcceptResult*, UErrorCode&)
(anonymous namespace)::characterproperties_cleanup()
(anonymous namespace)::cleanupNumberParseUniSets()
(anonymous namespace)::computeUnion(icu_71::unisets::Key, icu_71::unisets::Key, icu_71::unisets::Key)
(anonymous namespace)::cpMutex
(anonymous namespace)::gAvailableLocaleCounts
(anonymous namespace)::gAvailableLocaleNames
(anonymous namespace)::gEmptyUnicodeSet
(anonymous namespace)::gEmptyUnicodeSetInitialized
(anonymous namespace)::gInclusions
(anonymous namespace)::gInpcTrie
(anonymous namespace)::gInscTrie
(anonymous namespace)::gLayoutInitOnce
(anonymous namespace)::gLayoutMemory
(anonymous namespace)::gMaxInpcValue
(anonymous namespace)::gMaxInscValue
(anonymous namespace)::gMaxVoValue
(anonymous namespace)::gNumberParseUniSetsInitOnce
(anonymous namespace)::gUnicodeSets
(anonymous namespace)::gVoTrie
(anonymous namespace)::getAliasTargetAsResourceBundle(ResourceData const&, unsigned int, char const*, int, UResourceDataEntry*, char const*, int, UResourceBundle*, UErrorCode*)
(anonymous namespace)::getAllItemsWithFallback(UResourceBundle const*, icu_71::ResourceDataValue&, icu_71::ResourceSink&, UErrorCode&)
(anonymous namespace)::getInclusionsForSource(UPropertySource, UErrorCode&)
(anonymous namespace)::getRange(void const*, int, unsigned int (*)(void const*, unsigned int), void const*, unsigned int*)
(anonymous namespace)::getStringArray(ResourceData const*, icu_71::ResourceArray const&, icu_71::UnicodeString*, int, UErrorCode&)
(anonymous namespace)::ginstalledLocalesInitOnce
(anonymous namespace)::init_resb_result(UResourceDataEntry*, unsigned int, char const*, int, UResourceDataEntry*, char const*, int, UResourceBundle*, UErrorCode*)
(anonymous namespace)::maps
(anonymous namespace)::saveSet(icu_71::unisets::Key, icu_71::UnicodeString const&, UErrorCode&)
(anonymous namespace)::sets
(anonymous namespace)::swapFormatVersion3(UDataSwapper const*, void const*, int, void*, UErrorCode*)
(anonymous namespace)::swapFormatVersion4(UDataSwapper const*, void const*, int, void*, UErrorCode&)
(anonymous namespace)::toLower(int, unsigned int, unsigned char const*, UCaseContext*, int, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
(anonymous namespace)::ulayout_ensureData(UErrorCode&)
(anonymous namespace)::ulayout_isAcceptable(void*, char const*, char const*, UDataInfo const*)
(anonymous namespace)::uloc_cleanup()
(anonymous namespace)::uprops_cleanup()
(anonymous namespace)::utf8_caseContextIterator(void*, signed char)
)\r)\r)\r)\r)\r)\r)\r)\r)\r)\r
)p\n#)))x\n/)5)
*NULL*
*NULL* 
*O1U1[1a1e1i1m1s1y1
+!+%+)+-+1+5+9+=+A+E+I+M+Q+U+Y+]+a+e+i+m+q+u+y+}+
+\t+\t+\t+\t+\t+\t+\t
+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t
+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\tG
+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t+\tS
+\t+\t+\t+\t+\t+\t+\t?
+\v+\v+\v+\v+\v+\v+\v+\v+\v+\vA\nA\n2\n2\n2\n2\n;\n;\n;\n;\n;\n;\n8\n8\n)\n)\n
,!,%,),-,1,5,9,=,!+A,E,I,M,Q,U,Y,],a,e,i,m,q,u,y,},
,,,,,,,,7/7,--..
,Q-U-Y-]-a-e-i-m-I,q-u-y-}-
,q9u9y9}9
-!-%-)---1-5-9-=-A-E-I-M-
-VXW
-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f-\f;\r
.!.%.).Q,-.1.5.9.=.A.E.I.M.Q.U.Y.].a.e.i.m.q.u.y.}.
.dat
.g0k0o0s0w0{0
.m4q4u4y4}4
.res
/76;6A6E6I6M6
/C1%0G1)0K1
/M8S8
/Q6U6Y6]6a6e6i6m6u+
/Y8]8
/\r/\r/\r/\r/\r/\r
/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r/\r
/\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r
/a8e8i8o8o8u8y8}8
/etc/localtime
/usr/share/zoneinfo/
0-/!0%0)0-01070
0/13171;1?1!0
0123456789
0123456789:;<=>?H
0123456789ABCDEF<>-
03777=7A7E7K7Q7U7
0BTT
0C8G8
0CUV
0Y7]7a7e7i7m7q7w7{7
0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f0\f
0\t0\r0
0\t0\t0\t0\t0\t0\t0\t0\t0\t0\t
0i1-8185898?8
0q6u6y6}6
1)/#1\r0A,'1
2'a)b+k-r
2\f9\fA\fs
2_3ae4lmy:
343L3
3S0Y/]/W0
3\t4{4
3c4e5g6i0]1_2a
4!4%4)4-4145494=4A4E4I4M4M4_0Q4U4Y4]4i/a4e4i4
4K4K4
4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v
4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\v4\vO
5#5'5+5/53575;5?5C5G5K5O5U5Y5]5a5q+e5k5o5o5u5y5y5}5
5/9/=/A/E/I/M/Q/U/Y/]/a/e/i/m/q/u/y/}/
5\n)\n)\n)\n)\n8\n)\n
5\v6K6
6#6'6+6/636
6\t6\r6
6\t6\t6\t6\t6\t6\t6\t6\t6\t6\t
7#7'7+7/7
71.1
7\t7\r7
8%8)8)8
8\r@\rF\rM\r+\rU\r]\r
8\rB\rS
8\v5\v9\v=\vAK5KE
9#9'9-93999u5?9C9G9K9O9S9W9[9_9c9g9k9
9\t9\t9\t9\t9\t9\t9\t9\t9\t9\t
:#:):-:1:5:9:=:C:I:M:Q:'1+1U:Y:_:c:g:k:o:u:{:
::::::::::::::::
:QZQzQ
:RZR
;%;);-;1;5;9;=;A;K1G;K;O;S;W;[;a;e;k;q;w;{;
;0?0C0G0K0O0S0W0e/[0_0c0
;G1G1
;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\n;\nP\nP\nP\nP\nP\nP\nP\n
;\t?\tG\tO\tS\t[\t
<\t<\t<\t<\t<\t<\t<\t<\t<\t<\t
=\tA\tI\tY\tQ\ts
=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v=\v
>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r
?\t?\t?\t?\t?\t?\t?\t?\t?\t?\t
@ABCDEFGHIJKLMNO0
@\fiRnXp
@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n
@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n
@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n
ACE_PREFIX
AHex
AKDT
ALetter
ANAST
ANAT
AOSCCCD>PEFL;;HHKIIIJ
ASCII_Hex_Digit
ASSIGNED
ATAR
ATBL
ATerm
AZOST
AZOT
AZST
A\fM\fR\fZ\fI\f|
AaHe
Above
Above_Left
Above_Right
Adlam
Adlm
Aegean_Numbers
Afak
Africa/Algiers
Africa/Casablanca
Africa/El_Aaiun
Africa/Tripoli
Africa/Windhoek
African_Feh
African_Noon
African_Qaf
Aghb
Ahom
Alaph
Alchemical
Alchemical_Symbols
Alef
AliasLocales
Alpha
Alphabetic
Alphabetic_PF
Alphabetic_Presentation_Forms
Ambiguous
America/Asuncion
America/Cuiaba
America/Godthab
America/Guatemala
America/Havana
America/Miquelon
America/Montevideo
America/Scoresbysund
America/St_Johns
Anatolian_Hieroglyphs
Ancient_Greek_Music
Ancient_Greek_Musical_Notation
Ancient_Greek_Numbers
Ancient_Symbols
Arab
Arabic_Ext_A
Arabic_Ext_B
Arabic_Extended_A
Arabic_Extended_B
Arabic_Letter
Arabic_Math
Arabic_Mathematical_Alphabetic_Symbols
Arabic_Number
Arabic_PF_A
Arabic_PF_B
Arabic_Presentation_Forms-A
Arabic_Presentation_Forms_A
Arabic_Presentation_Forms_B
Arabic_Sup
Arabic_Supplement
Armi
Armn
Arrows
Asia/Anadyr
Asia/Baghdad
Asia/Baku
Asia/Choibalsan
Asia/Hovd
Asia/Irkutsk
Asia/Jerusalem
Asia/Kamchatka
Asia/Krasnoyarsk
Asia/Magadan
Asia/Novosibirsk
Asia/Omsk
Asia/Sakhalin
Asia/Ulaanbaatar
Asia/Vladivostok
Asia/Yakutsk
Asia/Yekaterinburg
Asia/Yerevan
Assigned
Atlantic/Azores
Atlantic/Stanley
Attached_Above
Attached_Above_Right
Attached_Below
Attached_Below_Left
Australia/Eucla
Australia/Lord_Howe
Australia/South
Australia/Sydney
Australia/West
Avagraha
Avst
BOCU-1
BRST
Bali
Bamu
Bamum_Sup
Bamum_Supplement
Basic_Emoji
Basic_Latin
Bass
Bassa_Vah
Batk
Below
Below_Left
Below_Right
Beng
Beth
Bhaiksuki
Bhks
Bidi_C
Bidi_Class
Bidi_Control
Bidi_M
Bidi_Mirrored
Bidi_Mirroring_Glyph
Bidi_Paired_Bracket
Bidi_Paired_Bracket_Type
Bindu
Blis
Block
Block_Elements
Bopo
Bopomofo_Ext
Bopomofo_Extended
Bottom
Bottom_And_Left
Bottom_And_Right
Boundary_Neutral
Box_Drawing
Brah
Brahmi_Joining_Number
Brai
Braille_Patterns
Brazil/East
Break_After
Break_Before
Break_Both
Break_Symbols
Bugi
Buhd
Burushaski_Yeh_Barree
Byzantine_Music
Byzantine_Musical_Symbols
CANONICALIZE_MAP
CCC10
CCC103
CCC107
CCC11
CCC118
CCC12
CCC122
CCC129
CCC13
CCC130
CCC132
CCC133
CCC14
CCC15
CCC16
CCC17
CCC18
CCC19
CCC20
CCC21
CCC22
CCC23
CCC24
CCC25
CCC26
CCC27
CCC28
CCC29
CCC30
CCC31
CCC32
CCC33
CCC34
CCC35
CCC36
CCC84
CCC91
CEST
CHADT
CHAST
CHOST
CHOT
CJK_Compat
CJK_Compat_Forms
CJK_Compat_Ideographs
CJK_Compat_Ideographs_Sup
CJK_Compatibility
CJK_Compatibility_Forms
CJK_Compatibility_Ideographs
CJK_Compatibility_Ideographs_Supplement
CJK_Ext_A
CJK_Ext_B
CJK_Ext_C
CJK_Ext_D
CJK_Ext_E
CJK_Ext_F
CJK_Ext_G
CJK_Radicals_Sup
CJK_Radicals_Supplement
CJK_Strokes
CJK_Symbols
CJK_Symbols_And_Punctuation
CJK_Unified_Ideographs
CJK_Unified_Ideographs_Extension_A
CJK_Unified_Ideographs_Extension_B
CJK_Unified_Ideographs_Extension_C
CJK_Unified_Ideographs_Extension_D
CJK_Unified_Ideographs_Extension_E
CJK_Unified_Ideographs_Extension_F
CJK_Unified_Ideographs_Extension_G
CLST
CODEPOINTS
COUNTRIES
COUNTRIES_3
CReg::reg(char16_t const*, char const*, UErrorCode*)
CST6CDT
CURRENCIES
CURRENCIES_FORMAL
CURRENCIES_NARROW
CURRENCIES_VARIANT
CURRENCYPLURALS
CURRENCY_META
CWCF
CWCM
CWKCF
CWST
C\vC\vC\vC\vC\vC\v
Cakm
Canada/Atlantic
Canada/Saskatchewan
Canadian_Syllabics
Canonical
Canonical_Combining_Class
Cans
Cantillation_Mark
Cari
Carriage_Return
Case_Folding
Case_Ignorable
Case_Sensitive
Cased
Cased_Letter
Caucasian_Albanian
Changes_When_Casefolded
Changes_When_Casemapped
Changes_When_Lowercased
Changes_When_NFKC_Casefolded
Changes_When_Titlecased
Changes_When_Uppercased
Cher
Cherokee_Sup
Cherokee_Supplement
Chess_Symbols
Chile/Continental
Chile/EasterIsland
Chorasmian
Chrs
Circle
Cirt
Close
Close_Parenthesis
Close_Punctuation
CmnDFuncs
Combining_Diacritical_Marks
Combining_Diacritical_Marks_Extended
Combining_Diacritical_Marks_For_Symbols
Combining_Diacritical_Marks_Supplement
Combining_Half_Marks
Combining_Mark
Combining_Marks_For_Symbols
Common_Indic_Number_Forms
Common_Separator
Comp_Ex
Compat
Compat_Jamo
Complex_Context
Conditional_Japanese_Starter
Connector_Punctuation
Consonant
Consonant_Dead
Consonant_Final
Consonant_Head_Letter
Consonant_Initial_Postfixed
Consonant_Killer
Consonant_Medial
Consonant_Placeholder
Consonant_Preceding_Repha
Consonant_Prefixed
Consonant_Subjoined
Consonant_Succeeding_Repha
Consonant_With_Stacker
Contingent_Break
Control
Control_Pictures
Copt
Coptic_Epact_Numbers
Counting_Rod
Counting_Rod_Numerals
Countries
Countries%short
Cpmn
Cprt
CreateLSTMBreakEngine_71
CreateLSTMDataForScript_71
CreateLSTMData_71
Cuneiform_Numbers
Cuneiform_Numbers_And_Punctuation
Currencies
Currencies%formal
Currencies%narrow
Currencies%variant
CurrencyMap
CurrencyMeta
CurrencyPlurals
Currency_Symbol
Currency_Symbols
Cypriot_Syllabary
Cypro_Minoan
Cyrillic_Ext_A
Cyrillic_Ext_B
Cyrillic_Ext_C
Cyrillic_Extended_A
Cyrillic_Extended_B
Cyrillic_Extended_C
Cyrillic_Sup
Cyrillic_Supplement
Cyrillic_Supplementary
Cyrl
Cyrs
DATA_NAME
DATA_TYPE
DEFAULT
DEFAULT_META
DEPRECATEDLANGS
DEPRECATEDREGIONS
DEPRECATED_COUNTRIES
DEPRECATED_LANGUAGES
DIGITS
Da4bJdPf
DaJgvl
Dalath_Rish
Dash
Dash_Punctuation
DataCacheElement_deleter(void*)
DataVersion
Decimal
Decimal_Number
Decomposition_Type
Default_Ignorable_Code_Point
DeleteLSTMData_71
Deprecated
Deva
Devanagari_Ext
Devanagari_Extended
Diacritic
Diacriticals
Diacriticals_Ext
Diacriticals_For_Symbols
Diacriticals_Sup
Diak
Digit
Dingbats
Dives_Akuru
Dogr
Dogra
Domino
Domino_Tiles
Double_Above
Double_Below
Double_Quote
Dsrt
Dual_Joining
Dupl
Duployan
EASST
EBase
EComp
EEST
EGST
EMPTY
EMod
EPres
EST5EDT
EUC-JP
E\tE\tE\tE\tE\tE\tE\tE\tE\tB\tB\tB\te\r
E_Base
E_Base_GAZ
E_Modifier
Early_Dynastic_Cuneiform
East_Asian_Width
Egyd
Egyh
Egyp
Egyptian_Hieroglyph_Format_Controls
Elba
Elbasan
Elym
Elymaic
Emoji
Emoji_Component
Emoji_Keycap_Sequence
Emoji_Modifier
Emoji_Modifier_Base
Emoji_Presentation
Emoticons
Enclosed_Alphanum
Enclosed_Alphanum_Sup
Enclosed_Alphanumeric_Supplement
Enclosed_Alphanumerics
Enclosed_CJK
Enclosed_CJK_Letters_And_Months
Enclosed_Ideographic_Sup
Enclosed_Ideographic_Supplement
Enclosing_Mark
Ethi
Ethiopic_Ext
Ethiopic_Ext_A
Ethiopic_Ext_B
Ethiopic_Extended
Ethiopic_Extended_A
Ethiopic_Extended_B
Ethiopic_Sup
Ethiopic_Supplement
Europe/Athens
Europe/Dublin
Europe/London
Europe/Moscow
Europe/Samara
Europe/Volgograd
European_Number
European_Separator
European_Terminator
ExE\n
Exclamation
ExtPict
Extend
ExtendNumLet
Extended_Pictographic
Extender
FKST
F\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\v
Fallback
Farsi_Yeh
Final
Final_Punctuation
Final_Semkath
First_Strong_Isolate
Font
Format
Fraction
Full_Composition_Exclusion
Fullwidth
G?NQB
GB18030
GCC: (Debian 10.2.1-6) 10.2.1 20210110
G\rT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\f
Gamal
Gemination_Mark
General_Category
General_Category_Mask
General_Punctuation
Geok
Geometric_Shapes
Geometric_Shapes_Ext
Geometric_Shapes_Extended
Geor
Georgian_Ext
Georgian_Extended
Georgian_Sup
Georgian_Supplement
Glag
Glagolitic_Sup
Glagolitic_Supplement
Glue
Glue_After_Zwj
Gong
Gonm
Goth
Gr_Base
Gr_Ext
Gr_Link
Gran
Grantha
Grapheme_Base
Grapheme_Cluster_Break
Grapheme_Extend
Grapheme_Link
Greek_And_Coptic
Greek_Ext
Greek_Extended
Grek
Gujr
Gunjala_Gondi
Guru
HANR
HOVST
HOVT
H\tH\tH\tH\tH\tH\tH\tH\tH\tH\t*
Half_And_Full_Forms
Half_Marks
Halfwidth
Halfwidth_And_Fullwidth_Forms
Hamza_On_Heh_Goal
Han_Reading
Hanb
Hang
Hangul_Compatibility_Jamo
Hangul_Jamo
Hangul_Jamo_Extended_A
Hangul_Jamo_Extended_B
Hangul_Syllable_Type
Hangul_Syllables
Hani
Hanifi_Rohingya
Hanifi_Rohingya_Kinna_Ya
Hanifi_Rohingya_Pa
Hano
Hans
Hant
Hatr
Hatran
Hebr
Hebrew_Letter
Heh_Goal
Heth
Hex_Digit
High_PU_Surrogates
High_Private_Use_Surrogates
High_Surrogates
Hira
Hluw
Hmng
Hmnp
Hrkt
Hung
Hyphen
ICUDATA
ICUDATA-
ICU_DATA
ICU_TIMEZONE_FILES_DIR
IDSB
IDST
IDS_Binary_Operator
IDS_Trinary_Operator
ID_Continue
ID_Start
IPA_Ext
IPA_Extensions
IRKST
IRKT
ISO-8859-1
ISO_2022
ISO_2022,locale=ja,version=
ISO_2022,locale=ko,version=0
ISO_2022_JP
ISO_Comment
I\fY\fs
Ideo
Ideographic
Ideographic_Description_Characters
Ideographic_Symbols
Ideographic_Symbols_And_Punctuation
Ig3g8h@k^lfm
InPC
InSC
Indic_Number_Forms
Indic_Positional_Category
Indic_Siyaq_Numbers
Indic_Syllabic_Category
Inds
Infix_Numeric
Init
Initial
Initial_Punctuation
Inseparable
Inseperable
InstalledLocales
Invisible_Stacker
Iota_Subscript
IrrelevantPos
Isolated
Ital
JIPS
Jamo
Jamo_Ext_A
Jamo_Ext_B
Java
Join_C
Join_Causing
Join_Control
Joiner
Joining_Group
Joining_Type
Jpan
Jurc
JxJxJ
K4K4
K4K<KDKLKTK\KdKlKtK,
KEIS
KRAST
KRAT
Kali
Kana
Kana_Ext_A
Kana_Ext_B
Kana_Extended_A
Kana_Extended_B
Kana_Sup
Kana_Supplement
Kana_Voicing
Kanbun
Kangxi
Kangxi_Radicals
Kaph
Katakana_Ext
Katakana_Or_Hiragana
Katakana_Phonetic_Extensions
Keys
Khaph
Khar
Khitan_Small_Script
Khmer_Symbols
Khmr
Khoj
Khojki
Khudawadi
Kits
Knda
Knotted_Heh
Kore
Kpel
Kthi
KxK4
LANGUAGES
LANGUAGES_3
LANG_DIR_STRING
LANG_UND
LAST_RESORT_DATA
LEGACY
LHST
LOCALE
LOCALE_ATTRIBUTE_KEY
LSTMDataName_71
LVT_Syllable
LV_Syllable
Lamadh
Lana
Languages
Languages%short
Laoo
Latf
Latg
Latin_1
Latin_1_Sup
Latin_1_Supplement
Latin_Ext_A
Latin_Ext_Additional
Latin_Ext_B
Latin_Ext_C
Latin_Ext_D
Latin_Ext_E
Latin_Ext_F
Latin_Ext_G
Latin_Extended_A
Latin_Extended_Additional
Latin_Extended_B
Latin_Extended_C
Latin_Extended_D
Latin_Extended_E
Latin_Extended_F
Latin_Extended_G
Latn
Lead_Canonical_Combining_Class
Leading_Jamo
Left
Left_And_Right
Left_Joining
Left_To_Right
Left_To_Right_Embedding
Left_To_Right_Isolate
Left_To_Right_Override
Lepc
Letter
Letter_Number
Letterlike_Symbols
Limb
Lina
Linb
Line_Break
Line_Feed
Line_Separator
Linear_A
Linear_B_Ideograms
Linear_B_Syllabary
Linker: LLD 16.0.0
Lisu_Sup
Lisu_Supplement
LocExtKeyData* icu_71::MemoryPool<LocExtKeyData, 8>::create<>()
LocExtType* icu_71::MemoryPool<LocExtType, 8>::create<>()
LocaleUtilityInitOnce
LocaleUtility_cache
Logical_Order_Exception
Loma
Low_Surrogates
Lower
Lowercase
Lowercase_Letter
Lowercase_Mapping
Lyci
Lydi
MAGST
MAGT
MST7MDT
Mahajani
Mahj
Mahjong
Mahjong_Tiles
Maka
Makasar
Malayalam_Bha
Malayalam_Ja
Malayalam_Lla
Malayalam_Llla
Malayalam_Nga
Malayalam_Nna
Malayalam_Nnna
Malayalam_Nya
Malayalam_Ra
Malayalam_Ssa
Malayalam_Tta
Mand
Mandatory_Break
Mani
Manichaean
Manichaean_Aleph
Manichaean_Ayin
Manichaean_Beth
Manichaean_Daleth
Manichaean_Dhamedh
Manichaean_Five
Manichaean_Gimel
Manichaean_Heth
Manichaean_Hundred
Manichaean_Kaph
Manichaean_Lamedh
Manichaean_Mem
Manichaean_Nun
Manichaean_One
Manichaean_Pe
Manichaean_Qoph
Manichaean_Resh
Manichaean_Sadhe
Manichaean_Samekh
Manichaean_Taw
Manichaean_Ten
Manichaean_Teth
Manichaean_Thamedh
Manichaean_Twenty
Manichaean_Waw
Manichaean_Yodh
Manichaean_Zayin
Marc
Marchen
Mark
Masaram_Gondi
Math
Math_Alphanum
Math_Operators
Math_Symbol
Mathematical_Alphanumeric_Symbols
Mathematical_Operators
Maya
Mayan_Numerals
Maybe
Medefaidrin
Medf
Medial
Meem
Meetei_Mayek_Ext
Meetei_Mayek_Extensions
Mend
Mende_Kikakui
Merc
Mero
MidLetter
MidNum
MidNumLet
Misc_Arrows
Misc_Math_Symbols_A
Misc_Math_Symbols_B
Misc_Pictographs
Misc_Symbols
Misc_Technical
Miscellaneous_Mathematical_Symbols_A
Miscellaneous_Mathematical_Symbols_B
Miscellaneous_Symbols
Miscellaneous_Symbols_And_Arrows
Miscellaneous_Symbols_And_Pictographs
Miscellaneous_Technical
Mlym
Modi
Modifier_Letter
Modifier_Letters
Modifier_Symbol
Modifier_Tone_Letters
Modifying_Letter
Mong
Mongolian_Sup
Mongolian_Supplement
Moon
Mroo
Mtei
Mult
Multani
Music
Musical_Symbols
Myanmar_Ext_A
Myanmar_Ext_B
Myanmar_Extended_A
Myanmar_Extended_B
Mymr
N12_GLOBAL__N_113ParseDataSinkE
N12_GLOBAL__N_118GetAllChildrenSinkE
N12_GLOBAL__N_120AvailableLocalesSinkE
N12_GLOBAL__N_133AvailableLocalesStringEnumerationE
N6icu_7110AppendableE
N6icu_7110ICUServiceE
N6icu_7110NormalizerE
N6icu_7110UStringSetE
N6icu_7110UnicodeSetE
N6icu_7110VectorizerE
N6icu_7111ICUNotifierE
N6icu_7111Normalizer2E
N6icu_7111ReadArray1DE
N6icu_7111ReadArray2DE
N6icu_7111ReplaceableE
N6icu_7111SymbolTableE
N6icu_7112CacheKeyBaseE
N6icu_7112ConstArray1DE
N6icu_7112ConstArray2DE
N6icu_7112DateIntervalE
N6icu_7112ResourceSinkE
N6icu_7112SharedObjectE
N6icu_7112UnifiedCacheE
N6icu_7113BreakIteratorE
N6icu_7113EventListenerE
N6icu_7113ICUServiceKeyE
N6icu_7113LocaleBuilderE
N6icu_7113ParsePositionE
N6icu_7113ResourceValueE
N6icu_7113SimpleFactoryE
N6icu_7113UnicodeFilterE
N6icu_7113UnicodeStringE
N6icu_7114CjkBreakEngineE
N6icu_7114FCDNormalizer2E
N6icu_7114LaoBreakEngineE
N6icu_7114MessagePatternE
N6icu_7114ResourceBundleE
N6icu_7114UnicodeFunctorE
N6icu_7114UnicodeMatcherE
N6icu_7115LSTMBreakEngineE
N6icu_7115NoopNormalizer2E
N6icu_7115Normalizer2ImplE
N6icu_7115RBBIRuleBuilderE
N6icu_7115RBBIRuleScannerE
N6icu_7115RBBISymbolTableE
N6icu_7115ServiceListenerE
N6icu_7115ThaiBreakEngineE
N6icu_7115UnhandledEngineE
N6icu_7116BytesTrieBuilder17BTLinearMatchNodeE
N6icu_7116BytesTrieBuilderE
N6icu_7116ICULocaleServiceE
N6icu_7116KhmerBreakEngineE
N6icu_7116LocaleKeyFactoryE
N6icu_7116UnifiedCacheBaseE
N6icu_7117CanonicalIteratorE
N6icu_7117CharacterIteratorE
N6icu_7117DictionaryMatcherE
N6icu_7117ICUServiceFactoryE
N6icu_7117ResourceDataValueE
N6icu_7117StringEnumerationE
N6icu_7117StringTrieBuilder10BranchNodeE
N6icu_7117StringTrieBuilder14BranchHeadNodeE
N6icu_7117StringTrieBuilder14FinalValueNodeE
N6icu_7117StringTrieBuilder14ListBranchNodeE
N6icu_7117StringTrieBuilder15LinearMatchNodeE
N6icu_7117StringTrieBuilder15SplitBranchNodeE
N6icu_7117StringTrieBuilder21IntermediateValueNodeE
N6icu_7117StringTrieBuilder4NodeE
N6icu_7117StringTrieBuilder9ValueNodeE
N6icu_7117StringTrieBuilderE
N6icu_7117UCharsTrieBuilder18UCTLinearMatchNodeE
N6icu_7117UCharsTrieBuilderE
N6icu_7118BurmeseBreakEngineE
N6icu_7118CharStringByteSinkE
N6icu_7118ComposeNormalizer2E
N6icu_7118KeywordEnumerationE
N6icu_7118LocaleDisplayNamesE
N6icu_7118ServiceEnumerationE
N6icu_7118UStringEnumerationE
N6icu_7118UnicodeSetIteratorE
N6icu_7119FilteredNormalizer2E
N6icu_7119LanguageBreakEngineE
N6icu_7119Normalizer2WithImplE
N6icu_7120CheckedArrayByteSinkE
N6icu_7120CodePointsVectorizerE
N6icu_7120DecomposeNormalizer2E
N6icu_7120LanguageBreakFactoryE
N6icu_7121DictionaryBreakEngineE
N6icu_7121LoadedNormalizer2ImplE
N6icu_7122BytesDictionaryMatcherE
N6icu_7122LocaleDisplayNamesImpl25CapitalizationContextSinkE
N6icu_7122LocaleDisplayNamesImplE
N6icu_7122RuleBasedBreakIterator10BreakCacheE
N6icu_7122RuleBasedBreakIteratorE
N6icu_7122SimpleLocaleKeyFactoryE
N6icu_7122UCharCharacterIteratorE
N6icu_7123ICUBreakIteratorFactoryE
N6icu_7123ICUBreakIteratorServiceE
N6icu_7123ICULanguageBreakFactoryE
N6icu_7123StringCharacterIteratorE
N6icu_7123UCharsDictionaryMatcherE
N6icu_7123UnicodeStringAppendableE
N6icu_7124ForwardCharacterIteratorE
N6icu_7124ICUResourceBundleFactoryE
N6icu_7124WholeStringBreakIteratorE
N6icu_7125GraphemeClusterVectorizerE
N6icu_7125UnicodeKeywordEnumerationE
N6icu_7128FilteredBreakIteratorBuilderE
N6icu_7131SimpleFilteredSentenceBreakDataE
N6icu_7134SimpleFilteredBreakIteratorBuilderE
N6icu_7135SimpleFilteredSentenceBreakIteratorE
N6icu_714IDNAE
N6icu_715UTS46E
N6icu_716BMPSetE
N6icu_716Locale18ConvertingIteratorIPPKcN12_GLOBAL__N_113LocaleFromTagEEE
N6icu_716Locale8IteratorE
N6icu_716LocaleE
N6icu_716UStackE
N6icu_717Array1DE
N6icu_717UMemoryE
N6icu_717UObjectE
N6icu_717UVectorE
N6icu_718ByteSinkE
N6icu_719ErrorCodeE
N6icu_719LocaleKeyE
N6icu_719UVector32E
N6icu_719UVector64E
NChar
NFC_Inert
NFC_QC
NFC_Quick_Check
NFD_Inert
NFD_QC
NFD_Quick_Check
NFKC_Inert
NFKC_QC
NFKC_Quick_Check
NFKD_Inert
NFKD_QC
NFKD_Quick_Check
NOVST
NOVT
NZDT
NZST
N\fN\fr
Nabataean
Name
Nand
Nandinagari
Narb
Narrow
Nbat
Neutral
Newa
Newline
Next_Line
Nkgb
Nkoo
No_Block
No_Joining_Group
Nobreak
Non_Joiner
Non_Joining
Noncharacter_Code_Point
Nonspacing_Mark
Nonstarter
Noon
Not_Applicable
Not_Reordered
Nshu
Nukta
Number
Number_Forms
Number_Joiner
Numeric
Numeric_Type
Numeric_Value
Nushu
Nyiakeng_Puachue_Hmong
O:OZOyO
OFFSET_ZONE_MAPPINGS
OLetter
OMSST
OMST
Ogam
Olck
Old_Hungarian
Old_North_Arabian
Old_Permic
Old_Sogdian
Old_Uyghur
Open
Open_Punctuation
Optical_Character_Recognition
Orkh
Ornamental_Dingbats
Orya
Osage
Osge
Osma
Other_Letter
Other_Neutral
Other_Number
Other_Punctuation
Other_Symbol
Ottoman_Siyaq_Numbers
Ougr
Overstruck
PETST
PETT
PMDT
PMST
POSIX_KEY
POSIX_VALUE
POW10
PQRSTUVWXYZ[\]^_\f
PRIMES
PRIVATEUSE_KEY
PRIVUSE_VARIANT_PREFIX
PSACCENT
PSBIDI
PSCRACK
PST8PDT
PYST
P\nP\nP\nP\nP\nP\nP\n
P\nP\nP\nP\nP\nP\nP\n?
P\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\n
P\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\n
P\rP\rC
Pacific/Auckland
Pacific/Chatham
Pacific/Pitcairn
Pahawh_Hmong
Palm
Palmyrene
Paragraph_Separator
Pat_Syn
Pat_WS
Pattern_Syntax
Pattern_White_Space
Pau_Cin_Hau
Pauc
Perm
Phag
Phaistos
Phaistos_Disc
Phli
Phlp
Phlv
Phnx
Phonetic_Ext
Phonetic_Ext_Sup
Phonetic_Extensions
Phonetic_Extensions_Supplement
Playing_Cards
Plrd
Pop_Directional_Format
Pop_Directional_Isolate
Postfix_Numeric
Prefix_Numeric
Prepend
Prepended_Concatenation_Mark
Private_Use
Private_Use_Area
Prti
Psalter_Pahlavi
Punctuation
Pure_Killer
QMark
Q\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\t}\rQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\tQ\t
Qaac
Qaai
Qaph
Qi$nS
Quotation
Quotation_Mark
R)SYS
RBBISetTable_deleter(void*)
RBBISymbolTableEntry_deleter(void*)
REDUNDANT
REORDER_CODE
REPLACEMENT_COUNTRIES
REPLACEMENT_LANGUAGES
RESIZE_POLICY_RATIO_TABLE
RGI_Emoji
RGI_Emoji_Flag_Sequence
RGI_Emoji_Modifier_Sequence
RGI_Emoji_Tag_Sequence
RGI_Emoji_ZWJ_Sequence
RG_KEY_VALUE
R\vR\vR\vR\vR\vR\vR\v
R\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\v
Radical
Regional_Indicator
Register_Shifter
Returns %d.
Returns %d.  Status = %d.
Returns %d.  Status = %p.
Returns.
Returns.  Status = %d.
Reversed_Pe
Right
Right_Joining
Right_To_Left
Right_To_Left_Embedding
Right_To_Left_Isolate
Right_To_Left_Override
Rjng
Rohg
Rohingya_Yeh
Roro
Rotated
Rumi
Rumi_Numeral_Symbols
Runr
SAKST
SAKT
SAMST
SAMT
SCSU
SContinue
SHARED_DATA_HASHTABLE
STUVWXYZ
STerm
Sadhe
Samr
Sara
Sarb
Saur
Schemes
Script
Script_Extensions
Scripts
Scripts%short
Scripts%stand-alone
Seen
Segment_Separator
Segment_Starter
Semkath
Sensitive
SentenceBreak
Sentence_Break
Sentence_Terminal
Separator
Sgnw
Shaw
Shin
Shorthand_Format_Controls
Shrd
Sidd
Siddham
SignWriting
Simple_Case_Folding
Simple_Lowercase_Mapping
Simple_Titlecase_Mapping
Simple_Uppercase_Mapping
Sind
Single_Quote
Sinh
Sinhala_Archaic_Numbers
Small
Small_Form_Variants
Small_Forms
Small_Kana_Ext
Small_Kana_Extension
Sn:o@pFqJr
Soft_Dotted
Sogd
Sogdian
Sogo
Sora
Soyo
Soyombo
Space
Space_Separator
SpacingMark
Spacing_Mark
Spacing_Modifier_Letters
Specials
Straight_Waw
Sund
Sundanese_Sup
Sundanese_Supplement
Sup_Arrows_A
Sup_Arrows_B
Sup_Arrows_C
Sup_Math_Operators
Sup_PUA_A
Sup_PUA_B
Sup_Punctuation
Sup_Symbols_And_Pictographs
Super
Super_And_Sub
Superscripts_And_Subscripts
Supplemental_Arrows_A
Supplemental_Arrows_B
Supplemental_Arrows_C
Supplemental_Mathematical_Operators
Supplemental_Punctuation
Supplemental_Symbols_And_Pictographs
Supplementary_Private_Use_Area_A
Supplementary_Private_Use_Area_B
Surrogate
Sutton_SignWriting
Swash_Kaf
Syllable_Modifier
Sylo
Symbol
Symbols_And_Pictographs_Ext_A
Symbols_And_Pictographs_Extended_A
Symbols_For_Legacy_Computing
Syrc
Syre
Syriac_Sup
Syriac_Supplement
Syriac_Waw
Syrj
Syrn
TITyT
T\tU9UiU
T_CString_int64ToString_71
T_CString_integerToString_71
T_CString_stringToInteger_71
T_CString_toLowerCase_71
T_CString_toUpperCase_71
Tagb
Tags
Tai_Xuan_Jing
Tai_Xuan_Jing_Symbols
Takr
Tale
Talu
Tamil_Sup
Tamil_Supplement
Taml
Tang
Tangsa
Tangut
Tangut_Components
Tangut_Sup
Tangut_Supplement
Tavt
Teh_Marbuta
Teh_Marbuta_Goal
Telu
Teng
Term
Terminal_Punctuation
Teth
Tfng
Tglg
Thaa
Thin_Yeh
Tibt
TimeZoneDataDirInitFn(UErrorCode&)
Tirh
Tirhuta
Titlecase_Letter
Titlecase_Mapping
Tnsa
ToCP
ToCPFuncs
Tone_Letter
Tone_Mark
Top_And_Bottom
Top_And_Bottom_And_Left
Top_And_Bottom_And_Right
Top_And_Left
Top_And_Left_And_Right
Top_And_Right
Toto
Trail_Canonical_Combining_Class
Trailing_Jamo
Transformed_Rotated
Transformed_Upright
Transparent
Transport_And_Map
Transport_And_Map_Symbols
Types
Types%short
U)VYV
UCAS
UCAS_Ext
UCAS_Ext_A
UCHARSTRENUM_U_VT
UCHARSTRENUM_VT
UCNV_FROM_U_CALLBACK_ESCAPE_71
UCNV_FROM_U_CALLBACK_SKIP_71
UCNV_FROM_U_CALLBACK_STOP_71
UCNV_FROM_U_CALLBACK_SUBSTITUTE_71
UCNV_TO_U_CALLBACK_ESCAPE_71
UCNV_TO_U_CALLBACK_SKIP_71
UCNV_TO_U_CALLBACK_STOP_71
UCNV_TO_U_CALLBACK_SUBSTITUTE_71
UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)
UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)
UDataMemory_createNewInstance_71
UDataMemory_init_71
UDataMemory_isLoaded_71
UDataMemory_normalizeDataPointer_71
UDataMemory_setData_71
UDatamemory_assign_71
UIdeo
ULAST
ULAT
UNESCAPE_MAP
US-ASCII
US/Alaska
US/Aleutian
US/Central
US/Eastern
US/Mountain
US/Pacific
USTRENUM_VT
UTF-16
UTF-16,version=1
UTF-16,version=2
UTF-16BE
UTF-16BE,version=1
UTF-16LE
UTF-16LE,version=1
UTF-32BE
UTF-32LE
UTF-7
UTF-EBCDIC
UYST
U_AMBIGUOUS_ALIAS_WARNING
U_ARGUMENT_TYPE_MISMATCH
U_BAD_VARIABLE_DEFINITION
U_BRK_ASSIGN_ERROR
U_BRK_HEX_DIGITS_EXPECTED
U_BRK_INIT_ERROR
U_BRK_INTERNAL_ERROR
U_BRK_MALFORMED_RULE_TAG
U_BRK_MISMATCHED_PAREN
U_BRK_NEW_LINE_IN_QUOTED_STRING
U_BRK_RULE_EMPTY_SET
U_BRK_RULE_SYNTAX
U_BRK_SEMICOLON_EXPECTED
U_BRK_UNCLOSED_SET
U_BRK_UNDEFINED_VARIABLE
U_BRK_UNRECOGNIZED_OPTION
U_BRK_VARIABLE_REDFINITION
U_BUFFER_OVERFLOW_ERROR
U_CE_NOT_FOUND_ERROR
U_COLLATOR_VERSION_MISMATCH
U_DECIMAL_NUMBER_SYNTAX_ERROR
U_DEFAULT_KEYWORD_MISSING
U_DIFFERENT_UCA_VERSION
U_DUPLICATE_KEYWORD
U_ENUM_OUT_OF_SYNC_ERROR
U_FILE_ACCESS_ERROR
U_FORMAT_INEXACT_ERROR
U_IDNA_ACE_PREFIX_ERROR
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
U_IDNA_LABEL_TOO_LONG_ERROR
U_IDNA_STD3_ASCII_RULES_ERROR
U_IDNA_VERIFICATION_ERROR
U_IDNA_ZERO_LENGTH_LABEL_ERROR
U_ILLEGAL_ARGUMENT_ERROR
U_ILLEGAL_CHARACTER
U_ILLEGAL_CHAR_FOUND
U_ILLEGAL_CHAR_IN_SEGMENT
U_ILLEGAL_ESCAPE_SEQUENCE
U_ILLEGAL_PAD_POSITION
U_INDEX_OUTOFBOUNDS_ERROR
U_INPUT_TOO_LONG_ERROR
U_INTERNAL_PROGRAM_ERROR
U_INTERNAL_TRANSLITERATOR_ERROR
U_INVALID_CHAR_FOUND
U_INVALID_FORMAT_ERROR
U_INVALID_FUNCTION
U_INVALID_ID
U_INVALID_PROPERTY_PATTERN
U_INVALID_RBT_SYNTAX
U_INVALID_STATE_ERROR
U_INVALID_TABLE_FILE
U_INVALID_TABLE_FORMAT
U_INVARIANT_CONVERSION_ERROR
U_MALFORMED_EXPONENTIAL_PATTERN
U_MALFORMED_PRAGMA
U_MALFORMED_RULE
U_MALFORMED_SET
U_MALFORMED_SYMBOL_REFERENCE
U_MALFORMED_UNICODE_ESCAPE
U_MALFORMED_VARIABLE_DEFINITION
U_MALFORMED_VARIABLE_REFERENCE
U_MEMORY_ALLOCATION_ERROR
U_MESSAGE_PARSE_ERROR
U_MISMATCHED_SEGMENT_DELIMITERS
U_MISPLACED_ANCHOR_START
U_MISPLACED_COMPOUND_FILTER
U_MISPLACED_CURSOR_OFFSET
U_MISPLACED_QUANTIFIER
U_MISSING_OPERATOR
U_MISSING_RESOURCE_ERROR
U_MISSING_SEGMENT_CLOSE
U_MULTIPLE_ANTE_CONTEXTS
U_MULTIPLE_COMPOUND_FILTERS
U_MULTIPLE_CURSORS
U_MULTIPLE_DECIMAL_SEPARATORS
U_MULTIPLE_EXPONENTIAL_SYMBOLS
U_MULTIPLE_PAD_SPECIFIERS
U_MULTIPLE_PERCENT_SYMBOLS
U_MULTIPLE_PERMILL_SYMBOLS
U_MULTIPLE_POST_CONTEXTS
U_NO_SPACE_AVAILABLE
U_NO_WRITE_PERMISSION
U_NUMBER_ARG_OUTOFBOUNDS_ERROR
U_NUMBER_SKELETON_SYNTAX_ERROR
U_PARSE_ERROR
U_PATTERN_SYNTAX_ERROR
U_PLUGIN_CHANGED_LEVEL_WARNING
U_PLUGIN_DIDNT_SET_LEVEL
U_PLUGIN_TOO_HIGH
U_PRIMARY_TOO_LONG_ERROR
U_REGEX_BAD_ESCAPE_SEQUENCE
U_REGEX_BAD_INTERVAL
U_REGEX_INTERNAL_ERROR
U_REGEX_INVALID_BACK_REF
U_REGEX_INVALID_CAPTURE_GROUP_NAME
U_REGEX_INVALID_FLAG
U_REGEX_INVALID_RANGE
U_REGEX_INVALID_STATE
U_REGEX_LOOK_BEHIND_LIMIT
U_REGEX_MAX_LT_MIN
U_REGEX_MISMATCHED_PAREN
U_REGEX_MISSING_CLOSE_BRACKET
U_REGEX_NUMBER_TOO_BIG
U_REGEX_OCTAL_TOO_BIG
U_REGEX_PATTERN_TOO_BIG
U_REGEX_PROPERTY_SYNTAX
U_REGEX_RULE_SYNTAX
U_REGEX_SET_CONTAINS_STRING
U_REGEX_STACK_OVERFLOW
U_REGEX_STOPPED_BY_CALLER
U_REGEX_TIME_OUT
U_REGEX_UNIMPLEMENTED
U_RESOURCE_TYPE_MISMATCH
U_RULE_MASK_ERROR
U_SAFECLONE_ALLOCATED_WARNING
U_SORT_KEY_TOO_SHORT_WARNING
U_STATE_OLD_WARNING
U_STATE_TOO_OLD_ERROR
U_STRINGPREP_CHECK_BIDI_ERROR
U_STRINGPREP_PROHIBITED_ERROR
U_STRINGPREP_UNASSIGNED_ERROR
U_STRING_NOT_TERMINATED_WARNING
U_TOO_MANY_ALIASES_ERROR
U_TRAILING_BACKSLASH
U_TRUNCATED_CHAR_FOUND
U_UNCLOSED_SEGMENT
U_UNDEFINED_KEYWORD
U_UNDEFINED_SEGMENT_REFERENCE
U_UNDEFINED_VARIABLE
U_UNEXPECTED_TOKEN
U_UNMATCHED_BRACES
U_UNQUOTED_SPECIAL
U_UNSUPPORTED_ATTRIBUTE
U_UNSUPPORTED_ERROR
U_UNSUPPORTED_ESCAPE_SEQUENCE
U_UNSUPPORTED_PROPERTY
U_UNTERMINATED_QUOTE
U_USELESS_COLLATOR_ERROR
U_USING_DEFAULT_WARNING
U_USING_FALLBACK_WARNING
U_VARIABLE_RANGE_EXHAUSTED
U_VARIABLE_RANGE_OVERLAP
U_ZERO_ERROR
Ugar
Unassigned
UnicodeString_charAt(int, void*)
Unicode_1_Name
Unified_Canadian_Aboriginal_Syllabics
Unified_Canadian_Aboriginal_Syllabics_Extended
Unified_Canadian_Aboriginal_Syllabics_Extended_A
Unified_Ideograph
Upper
Uppercase
Uppercase_Letter
Uppercase_Mapping
Upright
VLAST
VLAT
VOLST
VOLT
VS_Sup
V\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\n
Vaii
Variants
Variation_Selector
Variation_Selectors
Variation_Selectors_Supplement
Vedic_Ext
Vedic_Extensions
Vert
Vertical
Vertical_Forms
Vertical_Orientation
Vertical_Tail
Virama
Visarga
Visp
Visual_Order_Left
Vith
Vithkuqi
Vowel
Vowel_Dependent
Vowel_Independent
Vowel_Jamo
WAST
WGST
WIWyW
WSegSpace
WSpace
W\tW\tW\tW\tZ\tW\tW\tW\tW\tZ\tW\tW\tW\tW\tZ\tW\tW\tW\tW\tZ\tW\t
W\tW\tW\tZ\tW\tW\t
W\tW\tZ\tW\tZ\tZ\tc\tZ\tc\tW\tW\tW\tW\tW\t
W\tX9XiX
Wancho
Wara
Warang_Citi
Wcho
White_Space
Wide
Wole
Word_Break
Word_Joiner
X)YYY
XIDC
XIDS
XID_Continue
XID_Start
XhBiTn
Xpeo
Xsux
Y@N6icu_7118LocalePriorityList8IteratorE
YAKST
YAKT
YEKST
YEKT
YPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYPYP
Y\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\rY\r
Yeh_Barree
Yeh_With_Tail
Yezi
Yezidi
Yi_Radicals
Yi_Syllables
Yiii
Yijing
Yijing_Hexagram_Symbols
Yudh
Yudh_He
Z2d2x2
ZIZyZ
ZWSpace
Z\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\f
Z\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\f
Zain
Zanabazar_Square
Zanb
Zhain
Zinh
Zmth
Znamenny_Music
Znamenny_Musical_Notation
Zsye
Zsym
Zxxx
Zyyy
Zzzz
[3_3c3g3m3M/q3u3y3}3Q/
[BOGUS Trace Function Number]
[BOGUS UErrorCode]
[\t5\n5?6A7C8E9G001<2B3N4=4
\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\n
\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f'\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f'\f'\f'\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f!\f$\f!\f!\f!\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\fZ\f
\f&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\rC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vC\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vF\vU\vU\vU\vU\vU\vL\vX\v^\v^\v^\vR\vR\vR\v[\vO\vO\vO\vO\vO\vI\vI\vI\vI\vI\vI\vI\vI\v^\v^\v^\v^\v^\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vU\vU\v^\v^\v^\vR\vR\v^\v^\v^\v^\v^\v^\v^\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\v^\v^\v^\v^\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vU\vU\vU\vU\vU\vU\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\vR\v
\f+\t+\t+\t+\t+\t+\t+\t+\t+\t+\t\n\f
\f<\f9\f<\f9\f<\f9\f
\f@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v@\v
\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f
\f~\f{\fq\rt\rt\rt\r
\n \n \n \n \n \n \n9
\n*\f5\r5\r5\r5\r5\r5\r5\r5\rp
\n+\t+\t+\t+\t+\t
\n+\t@\vG\vK\vQ\v+\t+\t+\t
\nW\tW\tW\tW\tW\tW\tW\t
\n\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v\n\v
\no\fo\fo\fo\fo\fo\fo\fo\fo\fo\fo\fo\fo\fZ
\nt\nt\nt\nt\nt\nt\nt\n
\nw\nw\nw\nw\nw\nw\nw\nw\nw\nz\nw\n
\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r&\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r2\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r>\r
\r@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n
\rJ\nS\nG\nG\nG\nG\nS\nS\nM\nM\nM\nM\nM\nM\nM\nM\nM\nD\nD\nD\nD\nD\nD\nD\nD\nD\nD\nD\n?
\rP\nP\nP\nP\nP\nP\nP\n?
\rP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\n?
\rP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\n
\rP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\nV\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nY\n_\n\\n\\n\\n\\n\\n\\n\\n\\n(
\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v\r\v
\t'\t/\t7\t?\tF\t
\t4\n<\n$\n,\nD\nL\nT\n\\nt\nd\nl\n|\n
\t5\n5S6U7W8Y9[0I1K2M3O4Q
\tT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\fT\f
\tW\tZ\t]\t]\t`\ti\t]\t]\t
\tf\tf\tf\tf\tf\tf\tf\tf\tf\tf\ti\t]\tf\t]\tf\t]\tx\to\tx\to\t
\ti3i
\tl\tl\tl\tl\tf\tl\tl\t~\tl\tl\ti\tu\t{\t{\t{\t{\t{\t~\tf\tr\tf\tf\tf\t]\t]\tf\tf\tf\tf\tf\tf\t
\tr\fr\fr\fk\rk\rk\rn\rn\rk\rn\rn\rk\rk\rn\r
\tuTv
\tx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\fx\f{
\v"\v+\t+\t+\t+\t+\t+\t+\t+\t
\v+\t+\t+\t+\t+\t+\t
\v+\t+\t+\t+\t+\t+\t+\t\v\v
\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v:\v
\v@\n\r\f@\n@\n@\n@\nM\f
\v\v777
]Z`c^_Ya[\b
]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f]\f
]hPk~l
_ASCIIData_71
_ASCIIGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
_ASCIIGetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)
_ASCIIImpl
_ASCIIStaticData
_ASCIIToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_ConvertBCP47(char const*, char*, int, UErrorCode*, int*)
_DBCSUTF8Impl
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_ISO2022Close(UConverter*)
_ISO2022Data_71
_ISO2022Impl
_ISO2022JPImpl
_ISO2022JPStaticData
_ISO2022Open(UConverter*, UConverterLoadArgs*, UErrorCode*)
_ISO2022Reset(UConverter*, UConverterResetChoice)
_ISO2022StaticData
_ISO2022getName(UConverter const*)
_ISO_2022_GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)
_ISO_2022_SafeClone(UConverter const*, void*, int*, UErrorCode*)
_ISO_2022_WriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)
_Latin1Data_71
_Latin1FromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)
_Latin1GetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
_Latin1GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)
_Latin1Impl
_Latin1StaticData
_Latin1ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_MBCSData_71
_MBCSImpl
_POSIX
_SBCSUTF8Impl
_UTF16BEData_71
_UTF16BEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)
_UTF16BEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)::bom
_UTF16BEGetName(UConverter const*)
_UTF16BEGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16BEImpl
_UTF16BEOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)
_UTF16BEReset(UConverter*, UConverterResetChoice)
_UTF16BEStaticData
_UTF16BEToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16Data_71
_UTF16GetName(UConverter const*)
_UTF16GetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16Impl
_UTF16LEData_71
_UTF16LEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)
_UTF16LEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)::bom
_UTF16LEGetName(UConverter const*)
_UTF16LEGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16LEImpl
_UTF16LEOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)
_UTF16LEReset(UConverter*, UConverterResetChoice)
_UTF16LEStaticData
_UTF16LEToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16Open(UConverter*, UConverterLoadArgs*, UErrorCode*)
_UTF16Reset(UConverter*, UConverterResetChoice)
_UTF16StaticData
_UTF16ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_UTF16v2Data_71
_UTF16v2Impl
_UTF16v2StaticData
_UTF8Data_71
_UTF8Impl
_UTF8StaticData
_ZL26gHaveTriedToLoadCommonData.0
_\r_\r_\r_\r_\r_\r_\r_\r_\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r#\r
__FRAME_END__
__TMC_END__
__TMC_LIST__
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__frame_dummy_init_array_entry
__timezone
_addExtensionToList(ExtensionListEntry**, ExtensionListEntry*, signed char)
_appendUTF8(unsigned char*, int)
_canonicalize(char const*, icu_71::ByteSink&, unsigned int, UErrorCode*)
_charPtr_charAt(int, void*)
_cmpFold(char16_t const*, int, char16_t const*, int, unsigned int, int*, int*, UErrorCode*)
_concatenate(char16_t const*, int, char16_t const*, int, char16_t*, int, icu_71::Normalizer2 const*, UErrorCode*)
_deleteEngine(void*)
_deleteFactory(void*)
_enumPropertyStartsRange(void const*, int, int, unsigned int)
_enumTypeRange(void const*, int, int, unsigned int)
_enumTypeValue(void const*, unsigned int)
_extFromU(UConverter*, UConverterSharedData const*, int, char16_t const**, char16_t const*, unsigned char**, unsigned char const*, int**, int, signed char, UErrorCode*)
_findMetaData(char16_t const*, UErrorCode&)
_findRow(UPropsVectors*, int)
_fini
_fromUnicodeWithCallback(UConverterFromUnicodeArgs*, UErrorCode*)
_getStringOrCopyKey(char const*, char const*, char const*, char const*, char const*, char const*, char16_t*, int, UErrorCode*)
_getVariant(char const*, char, icu_71::ByteSink&, signed char)
_init
_internal_toASCII(char16_t const*, int, char16_t*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)
_internal_toUnicode(char16_t const*, int, char16_t*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)
_isTransformedExtensionSubtag(int&, char const*, int)
_isUnicodeExtensionSubtag(int&, char const*, int)
_isVariantSubtag(char const*, int)
_iterate(UCharIterator*, signed char, char16_t*, int, icu_71::Normalizer2 const*, signed char, signed char*, UErrorCode*)
_kCountries
_kCurrencies
_kCurrency
_kKeys
_kLanguages
_kLocaleDisplayPattern
_kPattern
_kScripts
_kScriptsStandAlone
_kSeparator
_kTypes
_kVariants
_matchFromSet(char16_t const*, char16_t const*, signed char)
_normalize(icu_71::Normalizer2 const*, char16_t const*, int, icu_71::UnicodeString&, UErrorCode*)
_reset(UConverter*, UConverterResetChoice, signed char)
_shapeToArabicDigitsWithContext(char16_t*, int, char16_t, signed char, signed char)
_toUnicodeWithCallback(UConverterToUnicodeArgs*, UErrorCode*)
_uBrkErrorName
_uErrorInfoName
_uErrorName
_uFmtErrorName
_uIDNAErrorName
_uPluginErrorName
_uRegexErrorName
_uTransErrorName
_uhash_create(int (*)(UElement), signed char (*)(UElement, UElement), signed char (*)(UElement, UElement), int, UErrorCode*)
_uhash_put(UHashtable*, UElement, UElement, signed char, UErrorCode*)
_uhash_rehash(UHashtable*, UErrorCode*)
_uhash_remove(UHashtable*, UElement)
_uloc_getOrientationHelper(char const*, char const*, UErrorCode*)
_ulocimp_addLikelySubtags(char const*, icu_71::ByteSink&, UErrorCode*)
`\ta9aia
`abcdefghijklmno
a$gE
a$iS
a$imj
a$l9
a$sq
a$v1
a'g'm's'y'T\tX\t
a*b2s
a,e6gTi
a.eLo
a0bNc
a0bz
a0cZo
a0e4i
a0eJi
a0pRu
a2eDoRr
a2ePi
a6b>s
a6e<h
a6eXshy
a6g<m
a6iHo
a8e<hJw
a:eJo
a:eLo
a:fLh^npw*
a:hDn
a>eJi
a>lNn^o
a@b7o
a@iPmno
a@iRmpo|u
aQgSp(u0yWT
aXmpw
a\mxp
a`c1e/n-o
abcdefghi
abcdefghijklmnopqrstuvwxyz
abic
abort
aceU
ace_
aceholder9
ached
acingmark5l
acterrecognition
action_mirror(UBiDiTransform*, UErrorCode*)
action_reorder(UBiDiTransform*, UErrorCode*)
action_resolve(UBiDiTransform*, UErrorCode*)
action_reverse(UBiDiTransform*, UErrorCode*)
action_setInverse(UBiDiTransform*, UErrorCode*)
action_setRunsOnly(UBiDiTransform*, UErrorCode*)
action_shapeArabic(UBiDiTransform*, UErrorCode*)
adaK
adaM
adcanonic
addPoint(UBiDi*, int, int)
adhOanb
adiansyllabicsc
adicals
adicalssup
adingjamo#
adjustWSLevels(UBiDi*)
aext*
af_ZA
agana
agolitic
agsequence
ahli
aiksuki
ailcanonic
ailue
airedbracket
akana
akanaL
alac
alcombiningclass
alfmarks
alfwidth% 
ali)
alnotation
alorderexceptionK
alse! 
alsymbols
alterpahlavi
alue
am_ET
ama_
ambiguousConverters
amedh
amennymusic
amentaldingbats
amo\
anaext
anagari>
andatorybreak-
andpunctuation
andright+\rn
andright9b,l\n
anese
angciti
angeswhen
anmarX
annumerals
anr,
ansformed
ansportandmap
anwa
anwa{
anya
apped
appendable.cpp
ar_001
ar_AE
ar_BH
ar_DZ
ar_EG
ar_IQ
ar_JO
ar_KW
ar_LB
ar_LY
ar_MA
ar_MO
ar_OM
ar_QA
ar_SA
ar_SY
ar_TN
ar_YE
araLink
aractercodepointQ
aramgondi
aratiE
archaicnumbers
are;
area
argaa
ariants
aritan
aritic
arkSf
ark]
arks
arksforsymbolsw
arn_CL
arree}n
art-lojban
art__LOJBAN
as_IN
asan
asar
asciiFromEbcdic
asciiTypes
ase5
asefolding
aseqr
ashkafma.e8h
ashtra
asompeng
assigned!n
assigned#n
ataean
atb|t
ateusesurrogates
athO
athe
athoperators
athrish/
athsymbols
atjamo
attribute
aultig
avah
awhhmong
ayalam
ayalamO
ayalamU
aybe% 
ayin
ayingcards
az_AZ
az_Cyrl
az_Cyrl_AZ
az_Latn
az_Latn_AZ
b.n<r
b2lbr
b4f<r
b4mNx&
b7i(l)n+
b:fJr
b>mFx6
bDm^x.
bRtF
b^c0eHl
ba_RU
base
bazarsquare
bb<jBl
bcmp
bcpTypeAlias
be_BY
berP
berforms{aDb!e
betic!
bg_BG
biDiGetMaxValue(IntProperty const&, UProperty)
bic8
biguous#$
binProps
bin_NG
biningmark
block!
bmpset.cpp
bn_BD
bn_IN
bo_BT
bo_CN
bols
boundaries
bove
br_FR
bracketAddOpening(BracketData*, char16_t, int)
bracketInit(UBiDi*, BracketData*)
bracketProcessChar(BracketData*, int)
breakiterator_cleanup()
brew7a
brewletter=a
brewletterm
brkeng.cpp
brkiter.cpp
bs_BA
bs_Cyrl
bs_Cyrl_BA
bs_Latn
bs_Latn_BA
bundle-open
bytesinkutil.cpp
bytestream.cpp
bytestrie.cpp
bytestriebuilder.cpp
bytestrieiterator.cpp
c0k6l
c0sb
c2n<o"
c4dWenf
c6eFp1t2
c:fXp,
c<j^s
cDkTmpp
cDlln~t
cPlht
cTmtp
c\nj\ns
ca_ES
ca_ES_VALENCIA
cache
calculateSize(char16_t const*, int, int, unsigned int)
caniter.cpp
caseBinaryPropertyContains(BinaryProperty const&, int, UProperty)
caseL
case\
casianalbanian
ceedingrephaA
ceil
cferi
chaean
changesWhenCasefolded(BinaryProperty const&, int, UProperty)
changesWhenNFKC_Casefolded(BinaryProperty const&, int, UProperty)
charIterFuncs
charIterTextAccess(UText*, long, signed char)
charIterTextClone(UText*, UText const*, signed char, UErrorCode*)
charIterTextClose(UText*)
charIterTextExtract(UText*, long, long, char16_t*, int, UErrorCode*)
charIterTextLength(UText*)
characterIteratorCurrent(UCharIterator*)
characterIteratorGetIndex(UCharIterator*, UCharIteratorOrigin)
characterIteratorGetState(UCharIterator const*)
characterIteratorHasNext(UCharIterator*)
characterIteratorHasPrevious(UCharIterator*)
characterIteratorMove(UCharIterator*, int, UCharIteratorOrigin)
characterIteratorNext(UCharIterator*)
characterIteratorPrevious(UCharIterator*)
characterIteratorSetState(UCharIterator*, unsigned int, UErrorCode*)
characterIteratorWrapper
characterproperties.cpp
characters
chariter.cpp
charstr.cpp
checkExplicitLevels(UBiDi*, UErrorCode*)
chen
chr_Cher
chr_Cher_US
chr_US
cials
cii#d
ciihexdigit#
cimal#
cimalnumber
cimalnumber3
cinhau
ckb_Arab
ckb_Arab_IQ
clamation7p
clatin#
clone converter %s at %p into stackBuffer %p
close
close converter %s at %p, isCopyLocal=%b
closed
cmemory.cpp
cmemory_cleanup_71
cnvCacheMutex
cnvNameType
cnvalias
co_FR
codeMap
collation
combining spacing mark
comment
compareEntries(UElement, UElement)
compareKeywordStructs(void const*, void const*, void const*)
completed.0
connector punctuation
contextTransforms
control
convertFBto06
convertFEto06
convertLamAlef
converterData
copyEnumRange(void const*, int, int, unsigned int)
createConverterFromFile(UConverterLoadArgs*, UErrorCode*)
createLikelySubtagsString(char const*, int, char const*, int, char const*, int, char const*, int, icu_71::ByteSink&, UErrorCode*)
createPath(char const*, int, char const*, int, char const*, icu_71::CharString&, UErrorCode*)
createTagStringWithAlternates(char const*, int, char const*, int, char const*, int, char const*, int, char const*, icu_71::ByteSink&, UErrorCode*)
criptionalpa
critic/
criticals.
crtstuff.c
cs_CZ
cstr.cpp
cstring.cpp
ction-
ctuation
ctuationq
currCache
currency
currency symbol
currencyNameComparator(void const*, void const*)
currencyNumericCodes
currency_cleanup()
currentCacheEntryIndex
cwchar.cpp
cy_GB
d$r1
d(n<sA<
d.n2o
d3l5o6
d<gLn
dEdNh
d\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\v
da_DK
danese
dash punctuation
dataVersion
date
dawadi
dditionalm$
de@collation=phonebook
deShapeUnicode(char16_t*, int, int, unsigned int, UErrorCode*, uShapeVariables)
de_AT
de_CH
de_DE
de_DE@collation=phonebook
de_LI
de_LU
decimal digit number
defaultContains(BinaryProperty const&, int, UProperty)
defaultEncodings
defaultGetFoldedValue(UNewTrie*, int, int)
defaultGetMaxValue(IntProperty const&, UProperty)
defaultGetValue(IntProperty const&, int, UProperty)
defaultKeywordValues
defaultTableOptions
dekikakui
deleteCacheEntry(CurrencyNameCacheEntry*)
deleteIsoCodeEntry(void*)
deleteLocale(void*)
deleteUnicode(void*)
deo[
deograms
deographicsup
deographs
deregister_tm_clones
dfhjs
dham
dian
dianaboriginalq
dicalU
dictbe.cpp
dictbe=%s
dictionaries
dictionarydata.cpp
difier
digit;
dinagari
disc
distances
dle~n
doInsertionSort(char*, int, int, int (*)(void const*, void const*, void const*), void const*, void*)
doLoadFromCommonData(signed char, char const*, char const*, char const*, char const*, char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*, UErrorCode*)
doLoadFromIndividualFiles(char const*, char const*, char const*, char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*, UErrorCode*)
doOpenChoice(char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*)
doWriteForward(char16_t const*, int, char16_t*, int, unsigned short, UErrorCode*)
doWriteReverse(char16_t const*, int, char16_t*, int, unsigned short, UErrorCode*)
drawing
dsb_DE
dtintrv.cpp
dv_MV
dz_BT
e#f5
e$i9
e$io
e$rO
e$to
e,ir
e0f6s
e6l9u,
e7iIo9
e8iHo
e=iKo?
e>i~o
e>jHoNu
e>l[oFsEuF
eFilo
eJmtp
eKgLw
eTv(
ea2h
ead-
eading-a
eadletter1
ebcdicFromAscii
ebcdicTypes
echnical
ectorpunctuation
ectorpunctuationMc?fAl
edial7
edingrepha;
edits.cpp
efaidrin
efixnumericMJ
eft%
eft(
eft6
eft?
eftjoining'$
egistershifterW
egmentseparator1n
eiform
ekikakui
el_GR
elow
ematicala
embeddings
ementa
eminationmarkE
emojiprops.cpp
emptyText
en-gb-oed
en-gb-oxendict
en-x-i-default
en_029
en_AS
en_AU
en_BZ
en_CA
en_GB
en_GU
en_HK
en_ID
en_IE
en_IN
en_JM
en_MH
en_MP
en_MY
en_NZ
en_PH
en_SG
en_TT
en_UM
en_US
en_US_POSIX
en_VI
en_ZW
ence
enclosing mark
end punctuation
ended
endedo
enian5
enician
enpunctuation
enpunctuationI
enpunctuationIf
ension
ensions
ensions+
ensitivee
entryClose(UResourceDataEntry*)
entstarters
enty
enumEitherTrie(UTrie2 const*, int, int, unsigned int (*)(void const*, unsigned int), signed char (*)(void const*, int, int, unsigned int), void const*)
enumSameValue(void const*, unsigned int)
enumToU(UConverterMBCSTable*, signed char*, int, unsigned int, unsigned int, signed char (*)(void const*, unsigned int, int*), void const*, UErrorCode*)
eographic=>
eographs
epactnumbers
eparator'
epend7(
ependente
equalStringTrieNodes(UElement, UElement)
eralpunctuationq
eret
eret3
erited#d
erlay#
erm#
erm3<
erminalg
erminator)
errorcode.cpp
ersedpeag
ert@
erticaltail
es@collation=traditional
es_419
es_AR
es_BO
es_CL
es_CO
es_CR
es_CU
es_DO
es_EC
es_ES
es_ES@collation=traditional
es_GT
es_HN
es_MX
es_NI
es_PA
es_PE
es_PR
es_PY
es_SV
es_US
es_UY
es_VE
esakuru
escSeqChars
escSeqCharsLen
escSeqStateTable_Key_2022
escSeqStateTable_Value_2022
escr
esentationforms
estan
et_EE
etanW
eticext
etricshapes
etter)
etter+
etter-
etter;.
etterA
etter[n<o|p
ettera
etters-
eu_ES
exceptions
expandCompositChar(char16_t*, int, int, unsigned int, UErrorCode*, int, uShapeVariables)
expandCompositCharAtBegin(char16_t*, int, int, UErrorCode*)
expandCompositCharAtEnd(char16_t*, int, int, UErrorCode*)
expf
extended
extension
extensions
eycapsequence
f0n6q
f4n>tBy"
f:iJs
f<f<f<f<f<f<
f<ipl
fAiM
fDm\t|z
fFfFf[
f[iYoOr$sI
fa_AF
fa_IR
faidrin
fclose
feFm
ff_Latn
ff_Latn_SN
ff_NG
fi_FI
fier
fil_PH
file-open
filteredbrk.cpp
filterednormalizer2.cpp
final punctuation
findConverter(char const*, signed char*, UErrorCode*)
findFirstExisting(char const*, char*, char const*, signed char*, signed char*, signed char*, UErrorCode*)
findLikelySubtags(char const*, char*, int, UErrorCode*)
findMatchingScheme(unsigned char, unsigned char, UBiDiOrder, UBiDiOrder)
findTaggedAliasListsOffset(char const*, char const*, UErrorCode*)
firohingya
fixN0c(BracketData*, int, int, unsigned char)
fkccasefolded
flagE
flagLR
flagO
flagsOffset
fo_FO
font
fore+
fr_015
fr_029
fr_BE
fr_CA
fr_CD
fr_CG
fr_CH
fr_CI
fr_CM
fr_FR
fr_HT
fr_LU
fr_MA
fr_MC
fr_ML
fr_RE
fr_SN
frame_dummy
free
free_entry(UResourceDataEntry*)
from
fseek
ftdottedW
ftell
fter)
fttoright 
fuv_NG
fy_NL
g.n2y
g4r>y
g6iRk
g:lrt
g:rRy
g<lNr
g>iB
gAliasData
gAliasDataInitOnce
gAvailableConverterCount
gAvailableConverters
gAvailableConvertersInitOnce
gCRegHead
gCRegLock
gCache
gCacheInitOnce
gCacheMutex
gCollationBinKey
gCommonCleanupFunctions
gCommonDataCache
gCommonDataCacheInitOnce
gCommonICUDataArray
gCorrectedPOSIXLocale
gCorrectedPOSIXLocaleHeapAllocated
gCurrSymbolsEquiv
gCurrSymbolsEquivInitOnce
gCurrencyCacheMutex
gCurrencyList
gDataDirInitOnce
gDataDirectory
gDataFileAccess
gDefaultConverter
gDhJlNs
gEmpty16
gEmpty32
gEmptyString
gEmptyUString
gEnumAliases
gEnumAllConverters
gEnumCurrencyList
gExitFmt
gExitFmtPtrStatus
gExitFmtStatus
gExitFmtValue
gExitFmtValueStatus
gInProgressValueAddedCond
gInitOnceBrkiter
gIsoCodes
gIsoCodesInitOnce
gKeyTypeStringPool
gKeywordsEnum
gLanguageBreakFactories
gLanguageBreakFactoriesInitOnce
gLibCleanupFunctions
gLocExtKeyDataEntries
gLocExtKeyMap
gLocExtKeyMapInitOnce
gLocExtTypeEntries
gLocalesEnum
gMainTable
gPosixIDmap
gPublicTypes
gRBBIInitOnce
gRuleSet_digit_char_pattern
gRuleSet_name_char_pattern
gRuleSet_name_start_char_pattern
gRuleSet_rule_char_pattern
gSearchTZFileResult
gService
gSharedDataInitOnce
gTimeZoneBuffer
gTimeZoneBufferPtr
gTimeZoneFilesDirectory
gTimeZoneFilesInitOnce_71
gTraceContext
g\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\v
g\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\vj\v
g\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\vg\vj\vj\v
g\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\vj\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\v
ga_IE
ganaI
gaz=>
gazEF
gaz_ET
gb18030
gb18030Ranges
gbats
gcbToHst
gd_GB
geannumbers
generateSelectorData(UConverterSelector*, UPropsVectors*, USet const*, UConverterUnicodeSet, UErrorCode*)
getBiDiClass(IntProperty const&, int, UProperty)
getBiDiPairedBracketType(IntProperty const&, int, UProperty)
getCacheEntry(char const*, UErrorCode&)
getCodesFromLocale(char const*, UScriptCode*, int, UErrorCode*)
getCombiningClass(IntProperty const&, int, UProperty)
getCurrSymbolsEquiv()
getDataBlock(UNewTrie2*, int, signed char)
getFallbackData(UResourceBundle const*, char const**, unsigned int*, UErrorCode*)
getGeneralCategory(IntProperty const&, int, UProperty)
getHangulSyllableType(IntProperty const&, int, UProperty)
getHostID(ILcidPosixMap const*, char const*, UErrorCode*)
getInPC(IntProperty const&, int, UProperty)
getInSC(IntProperty const&, int, UProperty)
getJoiningGroup(IntProperty const&, int, UProperty)
getJoiningType(IntProperty const&, int, UProperty)
getLeadCombiningClass(IntProperty const&, int, UProperty)
getLink(char16_t)
getMaxValueFromShift(IntProperty const&, UProperty)
getNormQuickCheck(IntProperty const&, int, UProperty)
getNumericType(IntProperty const&, int, UProperty)
getPoolEntry(char const*, UErrorCode*)
getSPrepFoldingOffset(unsigned int)
getScript(IntProperty const&, int, UProperty)
getShortestSubtagLength(char const*)
getStateProp(int const (*) [256], signed char*, int)
getTrailCombiningClass(IntProperty const&, int, UProperty)
getVo(IntProperty const&, int, UProperty)
getalias
ghttoleft"
gian9
gianZ
gionalindicator
gionalindicator9
gionalindicator;
gionalindicatoro
git%"
git3
gl_ES
gmodifierletters-
gn_PY
gnorable
goal=
goalC
golianj
grapheme
graphicC
groupProp
gsw_FR
gu_IN
h$s3
h2oBs
h6kLl
h8lJu
h;m\n
h>h4iHn
h>lPu
hBiTn
hJhHnNrvv
h\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\nk\ne\nb\nE
ha_Latn
ha_Latn_NG
habeticp
halaP
hame
handleTashkeelWithTatweel(char16_t*, int, int, unsigned int, UErrorCode*)
hanumericsymbols
harQ
hasEmojiProperty(BinaryProperty const&, int, UProperty)
hasFullCompositionExclusion(BinaryProperty const&, int, UProperty)
hasValidTrailBytes(int const (*) [256], unsigned char)
hashEntry(UElement)
hashStringTrieNode(UElement)
haveAliasData(UErrorCode*)
haveAvailableConverterList(UErrorCode*)
haw_US
he_IL
hematicalsymbols
hemical
hepburn
her!
herneutral5e
hexagramsymbols
hi_IN
hiki
hingyayeh
hiopic^
hitespacew
hmijoiningnumber'
hqws
hr_BA
hr_HR
hsb_DE
hsymbol
hu_HU
hunits
huta
hwkana_fb
hy_AM
hy__AREVELA
hy__AREVMDA
h|hTi
i#l4m
i$lg
i$r3
i$ra
i*l1s
i,k0y
i-ami
i-bnn
i-default
i-hak
i-klingon
i-lux
i-navajo
i-pwn
i-tao
i-tay
i-tsu
i:nBt
i:oDr
i<lDnHtVy
i?iZo
iDot
iDotAcute
iDotGrave
iDotTilde
iOgonekDot
i_default
iac:
iacriticalmarks.
ial/
ial3
iationselectors
ibb_NG
ibm-1041_P100-1995
ibm-1088_P100-1995
ibm-1363_P110-1997
ibm-33722_P120-1999
ibm-897_P100-1995
ibm-942_P120-1999
ibm-943_P130-1999
ibm-944_P100-1995
ibm-946_P100-1995
ibm-949_P110-1999
ic%d0fDg
icalAcXe
icext
ichaean
ickcheck
ictographs
icu_71::(anonymous namespace)::AliasData::cleanup()
icu_71::(anonymous namespace)::AliasData::gInitOnce
icu_71::(anonymous namespace)::AliasData::gSingleton
icu_71::(anonymous namespace)::AliasReplacer::outputToString(icu_71::CharString&, UErrorCode)::$_12::__invoke(UElement, UElement)
icu_71::(anonymous namespace)::AliasReplacer::replace(icu_71::Locale const&, icu_71::CharString&, UErrorCode&)::$_0::__invoke(UElement, UElement)
icu_71::(anonymous namespace)::AliasReplacer::replace(icu_71::Locale const&, icu_71::CharString&, UErrorCode&)::$_1::__invoke(void*)
icu_71::(anonymous namespace)::AliasReplacer::replaceLanguage(bool, bool, bool, icu_71::UVector&, UErrorCode&)
icu_71::(anonymous namespace)::AliasReplacer::replaceSubdivision(icu_71::StringPiece, icu_71::CharString&, UErrorCode&)
icu_71::(anonymous namespace)::AliasReplacer::replaceTransformedExtensions(icu_71::CharString&, icu_71::CharString&, UErrorCode&)
icu_71::(anonymous namespace)::AliasReplacer::replaceTransformedExtensions(icu_71::CharString&, icu_71::CharString&, UErrorCode&)::$_13::__invoke(UElement, UElement)
icu_71::(anonymous namespace)::KNOWN_CANONICALIZED
icu_71::(anonymous namespace)::MutableCodePointTrie::getDataBlock(int)
icu_71::(anonymous namespace)::MutableCodePointTrie::set(int, unsigned int, UErrorCode&)
icu_71::(anonymous namespace)::MutableCodePointTrie::setRange(int, int, unsigned int, UErrorCode&)
icu_71::(anonymous namespace)::appendResult(char16_t*, int, int, int, char16_t const*, int, unsigned int, icu_71::Edits*)
icu_71::(anonymous namespace)::canonicalizeLocale(icu_71::Locale const&, icu_71::CharString&, UErrorCode&)
icu_71::(anonymous namespace)::cleanup()
icu_71::(anonymous namespace)::cleanupKnownCanonicalized()
icu_71::(anonymous namespace)::compareLSRs(UElement, UElement)
icu_71::(anonymous namespace)::compareLocaleAndWeight(void const*, void const*, void const*)
icu_71::(anonymous namespace)::compareLocales(UElement, UElement)
icu_71::(anonymous namespace)::emojiInitOnce
icu_71::(anonymous namespace)::emojiprops_cleanup()
icu_71::(anonymous namespace)::gInitOnce
icu_71::(anonymous namespace)::gKnownCanonicalized
icu_71::(anonymous namespace)::gKnownCanonicalizedInitOnce
icu_71::(anonymous namespace)::gLikelySubtags
icu_71::(anonymous namespace)::gLocaleDistance
icu_71::(anonymous namespace)::generalCategoryMaskFilter(int, void*)
icu_71::(anonymous namespace)::getMaximalLsrOrUnd(icu_71::XLikelySubtags const&, icu_71::Locale const&, UErrorCode&)
icu_71::(anonymous namespace)::globalMutex
icu_71::(anonymous namespace)::hashLSR(UElement)
icu_71::(anonymous namespace)::hashLocale(UElement)
icu_71::(anonymous namespace)::initCondition
icu_71::(anonymous namespace)::initFlag
icu_71::(anonymous namespace)::initMutex
icu_71::(anonymous namespace)::intPropertyFilter(int, void*)
icu_71::(anonymous namespace)::mungeCharName(char*, char const*, int)
icu_71::(anonymous namespace)::numericValueFilter(int, void*)
icu_71::(anonymous namespace)::parseWeight(char const*&, char const*)
icu_71::(anonymous namespace)::singleton
icu_71::(anonymous namespace)::toLower(int, unsigned int, char16_t*, int, char16_t const*, UCaseContext*, int, int, icu_71::Edits*, UErrorCode&)
icu_71::(anonymous namespace)::utf16_caseContextIterator(void*, signed char)
icu_71::(anonymous namespace)::versionFilter(int, void*)
icu_71::Appendable::appendCodePoint(int)
icu_71::Appendable::appendString(char16_t const*, int)
icu_71::Appendable::getAppendBuffer(int, int, char16_t*, int, int*)
icu_71::Appendable::reserveAppendCapacity(int)
icu_71::Appendable::~Appendable()
icu_71::Array1D::d1() const
icu_71::Array1D::get(int) const
icu_71::Array1D::~Array1D()
icu_71::BMPSet::BMPSet(icu_71::BMPSet const&, int const*, int)
icu_71::BMPSet::BMPSet(int const*, int)
icu_71::BMPSet::contains(int) const
icu_71::BMPSet::containsSlow(int, int, int) const
icu_71::BMPSet::initBits()
icu_71::BMPSet::span(char16_t const*, char16_t const*, USetSpanCondition) const
icu_71::BMPSet::spanBack(char16_t const*, char16_t const*, USetSpanCondition) const
icu_71::BMPSet::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const
icu_71::BMPSet::spanUTF8(unsigned char const*, int, USetSpanCondition) const
icu_71::BMPSet::~BMPSet()
icu_71::BreakIterator::BreakIterator()
icu_71::BreakIterator::BreakIterator(icu_71::BreakIterator const&)
icu_71::BreakIterator::BreakIterator(icu_71::Locale const&, icu_71::Locale const&)
icu_71::BreakIterator::buildInstance(icu_71::Locale const&, char const*, UErrorCode&)
icu_71::BreakIterator::createCharacterInstance(icu_71::Locale const&, UErrorCode&)
icu_71::BreakIterator::createInstance(icu_71::Locale const&, int, UErrorCode&)
icu_71::BreakIterator::createLineInstance(icu_71::Locale const&, UErrorCode&)
icu_71::BreakIterator::createSentenceInstance(icu_71::Locale const&, UErrorCode&)
icu_71::BreakIterator::createTitleInstance(icu_71::Locale const&, UErrorCode&)
icu_71::BreakIterator::createWordInstance(icu_71::Locale const&, UErrorCode&)
icu_71::BreakIterator::getAvailableLocales()
icu_71::BreakIterator::getAvailableLocales(int&)
icu_71::BreakIterator::getDisplayName(icu_71::Locale const&, icu_71::Locale const&, icu_71::UnicodeString&)
icu_71::BreakIterator::getDisplayName(icu_71::Locale const&, icu_71::UnicodeString&)
icu_71::BreakIterator::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_71::BreakIterator::getLocaleID(ULocDataLocaleType, UErrorCode&) const
icu_71::BreakIterator::getRuleStatus() const
icu_71::BreakIterator::getRuleStatusVec(int*, int, UErrorCode&)
icu_71::BreakIterator::makeInstance(icu_71::Locale const&, int, UErrorCode&)
icu_71::BreakIterator::operator=(icu_71::BreakIterator const&)
icu_71::BreakIterator::registerInstance(icu_71::BreakIterator*, icu_71::Locale const&, UBreakIteratorType, UErrorCode&)
icu_71::BreakIterator::unregister(void const*, UErrorCode&)
icu_71::BreakIterator::~BreakIterator()
icu_71::BurmeseBreakEngine::BurmeseBreakEngine(icu_71::DictionaryMatcher*, UErrorCode&)
icu_71::BurmeseBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::BurmeseBreakEngine::~BurmeseBreakEngine()
icu_71::ByteSink::Flush()
icu_71::ByteSink::GetAppendBuffer(int, int, char*, int, int*)
icu_71::ByteSink::~ByteSink()
icu_71::ByteSinkUtil::appendChange(int, char16_t const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::ByteSinkUtil::appendChange(unsigned char const*, unsigned char const*, char16_t const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::ByteSinkUtil::appendCodePoint(int, int, icu_71::ByteSink&, icu_71::Edits*)
icu_71::ByteSinkUtil::appendNonEmptyUnchanged(unsigned char const*, int, icu_71::ByteSink&, unsigned int, icu_71::Edits*)
icu_71::ByteSinkUtil::appendTwoBytes(int, icu_71::ByteSink&)
icu_71::ByteSinkUtil::appendUnchanged(unsigned char const*, unsigned char const*, icu_71::ByteSink&, unsigned int, icu_71::Edits*, UErrorCode&)
icu_71::BytesDictionaryMatcher::getType() const
icu_71::BytesDictionaryMatcher::matches(UText*, int, int, int*, int*, int*, int*) const
icu_71::BytesDictionaryMatcher::transform(int) const
icu_71::BytesDictionaryMatcher::~BytesDictionaryMatcher()
icu_71::BytesTrie::Iterator::Iterator(icu_71::BytesTrie const&, int, UErrorCode&)
icu_71::BytesTrie::Iterator::Iterator(void const*, int, UErrorCode&)
icu_71::BytesTrie::Iterator::branchNext(unsigned char const*, int, UErrorCode&)
icu_71::BytesTrie::Iterator::getString() const
icu_71::BytesTrie::Iterator::hasNext() const
icu_71::BytesTrie::Iterator::next(UErrorCode&)
icu_71::BytesTrie::Iterator::reset()
icu_71::BytesTrie::Iterator::truncateAndStop()
icu_71::BytesTrie::Iterator::~Iterator()
icu_71::BytesTrie::append(icu_71::ByteSink&, int)
icu_71::BytesTrie::branchNext(unsigned char const*, int, int)
icu_71::BytesTrie::current() const
icu_71::BytesTrie::findUniqueValue(unsigned char const*, signed char, int&)
icu_71::BytesTrie::findUniqueValueFromBranch(unsigned char const*, int, signed char, int&)
icu_71::BytesTrie::getNextBranchBytes(unsigned char const*, int, icu_71::ByteSink&)
icu_71::BytesTrie::getNextBytes(icu_71::ByteSink&) const
icu_71::BytesTrie::jumpByDelta(unsigned char const*)
icu_71::BytesTrie::next(char const*, int)
icu_71::BytesTrie::next(int)
icu_71::BytesTrie::nextImpl(unsigned char const*, int)
icu_71::BytesTrie::readValue(unsigned char const*, int)
icu_71::BytesTrie::~BytesTrie()
icu_71::BytesTrieBuilder::BTLinearMatchNode::BTLinearMatchNode(char const*, int, icu_71::StringTrieBuilder::Node*)
icu_71::BytesTrieBuilder::BTLinearMatchNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::BytesTrieBuilder::BTLinearMatchNode::write(icu_71::StringTrieBuilder&)
icu_71::BytesTrieBuilder::BTLinearMatchNode::~BTLinearMatchNode()
icu_71::BytesTrieBuilder::BytesTrieBuilder(UErrorCode&)
icu_71::BytesTrieBuilder::add(icu_71::StringPiece, int, UErrorCode&)
icu_71::BytesTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)
icu_71::BytesTrieBuilder::buildBytes(UStringTrieBuildOption, UErrorCode&)
icu_71::BytesTrieBuilder::buildStringPiece(UStringTrieBuildOption, UErrorCode&)
icu_71::BytesTrieBuilder::clear()
icu_71::BytesTrieBuilder::countElementUnits(int, int, int) const
icu_71::BytesTrieBuilder::createLinearMatchNode(int, int, int, icu_71::StringTrieBuilder::Node*) const
icu_71::BytesTrieBuilder::ensureCapacity(int)
icu_71::BytesTrieBuilder::getElementStringLength(int) const
icu_71::BytesTrieBuilder::getElementUnit(int, int) const
icu_71::BytesTrieBuilder::getElementValue(int) const
icu_71::BytesTrieBuilder::getLimitOfLinearMatch(int, int, int) const
icu_71::BytesTrieBuilder::getMaxBranchLinearSubNodeLength() const
icu_71::BytesTrieBuilder::getMaxLinearMatchLength() const
icu_71::BytesTrieBuilder::getMinLinearMatch() const
icu_71::BytesTrieBuilder::indexOfElementWithNextUnit(int, int, char16_t) const
icu_71::BytesTrieBuilder::internalEncodeDelta(int, char*)
icu_71::BytesTrieBuilder::matchNodesCanHaveValues() const
icu_71::BytesTrieBuilder::skipElementsBySomeUnits(int, int, int) const
icu_71::BytesTrieBuilder::write(char const*, int)
icu_71::BytesTrieBuilder::write(int)
icu_71::BytesTrieBuilder::writeDeltaTo(int)
icu_71::BytesTrieBuilder::writeElementUnits(int, int, int)
icu_71::BytesTrieBuilder::writeValueAndFinal(int, signed char)
icu_71::BytesTrieBuilder::writeValueAndType(signed char, int, int)
icu_71::BytesTrieBuilder::~BytesTrieBuilder()
icu_71::CStr::CStr(icu_71::UnicodeString const&)
icu_71::CStr::operator()() const
icu_71::CStr::~CStr()
icu_71::CacheKeyBase::~CacheKeyBase()
icu_71::CanonIterData::addToStartSet(int, int, UErrorCode&)
icu_71::CanonicalIterator::CanonicalIterator(icu_71::UnicodeString const&, UErrorCode&)
icu_71::CanonicalIterator::cleanPieces()
icu_71::CanonicalIterator::extract(icu_71::Hashtable*, int, char16_t const*, int, int, UErrorCode&)
icu_71::CanonicalIterator::getDynamicClassID() const
icu_71::CanonicalIterator::getEquivalents(icu_71::UnicodeString const&, int&, UErrorCode&)
icu_71::CanonicalIterator::getEquivalents2(icu_71::Hashtable*, char16_t const*, int, UErrorCode&)
icu_71::CanonicalIterator::getSource()
icu_71::CanonicalIterator::getStaticClassID()
icu_71::CanonicalIterator::getStaticClassID()::classID
icu_71::CanonicalIterator::next()
icu_71::CanonicalIterator::permute(icu_71::UnicodeString&, signed char, icu_71::Hashtable*, UErrorCode&)
icu_71::CanonicalIterator::reset()
icu_71::CanonicalIterator::setSource(icu_71::UnicodeString const&, UErrorCode&)
icu_71::CanonicalIterator::~CanonicalIterator()
icu_71::CaseMap::fold(unsigned int, char16_t const*, int, char16_t*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::toLower(char const*, unsigned int, char16_t const*, int, char16_t*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::toTitle(char const*, unsigned int, icu_71::BreakIterator*, char16_t const*, int, char16_t*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::toUpper(char const*, unsigned int, char16_t const*, int, char16_t*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8Fold(unsigned int, char const*, int, char*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8Fold(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToLower(char const*, unsigned int, char const*, int, char*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToLower(char const*, unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToTitle(char const*, unsigned int, icu_71::BreakIterator*, char const*, int, char*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToTitle(char const*, unsigned int, icu_71::BreakIterator*, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToUpper(char const*, unsigned int, char const*, int, char*, int, icu_71::Edits*, UErrorCode&)
icu_71::CaseMap::utf8ToUpper(char const*, unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<>()
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<char (&) [100], int&, UErrorCode&>(char (&) [100], int&, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<char (&) [128], int&, UErrorCode&>(char (&) [128], int&, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<char (&) [3], int&, UErrorCode&>(char (&) [3], int&, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<char const*&, UErrorCode&>(char const*&, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<char*, int&, UErrorCode&>(char*&&, int&, UErrorCode&)
icu_71::CharString* icu_71::MemoryPool<icu_71::CharString, 8>::create<icu_71::CharString&, UErrorCode&>(icu_71::CharString&, UErrorCode&)
icu_71::CharString::CharString(char const*, int, UErrorCode&)
icu_71::CharString::CharString(icu_71::CharString&&)
icu_71::CharString::append(char const*, int, UErrorCode&)
icu_71::CharString::append(char, UErrorCode&)
icu_71::CharString::append(icu_71::CharString const&, UErrorCode&)
icu_71::CharString::appendInvariantChars(char16_t const*, int, UErrorCode&)
icu_71::CharString::appendInvariantChars(icu_71::UnicodeString const&, UErrorCode&)
icu_71::CharString::appendNumber(int, UErrorCode&)
icu_71::CharString::appendPathPart(icu_71::StringPiece, UErrorCode&)
icu_71::CharString::cloneData(UErrorCode&) const
icu_71::CharString::contains(icu_71::StringPiece) const
icu_71::CharString::copyFrom(icu_71::CharString const&, UErrorCode&)
icu_71::CharString::ensureCapacity(int, int, UErrorCode&)
icu_71::CharString::ensureEndsWithFileSeparator(UErrorCode&)
icu_71::CharString::extract(char*, int, UErrorCode&) const
icu_71::CharString::getAppendBuffer(int, int, int&, UErrorCode&)
icu_71::CharString::getDirSepChar() const
icu_71::CharString::lastIndexOf(char) const
icu_71::CharString::operator=(icu_71::CharString&&)
icu_71::CharString::truncate(int)
icu_71::CharStringByteSink::Append(char const*, int)
icu_71::CharStringByteSink::CharStringByteSink(icu_71::CharString*)
icu_71::CharStringByteSink::GetAppendBuffer(int, int, char*, int, int*)
icu_71::CharStringByteSink::~CharStringByteSink()
icu_71::CharacterIterator::CharacterIterator()
icu_71::CharacterIterator::CharacterIterator(icu_71::CharacterIterator const&)
icu_71::CharacterIterator::CharacterIterator(int)
icu_71::CharacterIterator::CharacterIterator(int, int)
icu_71::CharacterIterator::CharacterIterator(int, int, int, int)
icu_71::CharacterIterator::first32PostInc()
icu_71::CharacterIterator::firstPostInc()
icu_71::CharacterIterator::operator=(icu_71::CharacterIterator const&)
icu_71::CharacterIterator::~CharacterIterator()
icu_71::CharacterProperties::getInclusionsForProperty(UProperty, UErrorCode&)
icu_71::CheckedArrayByteSink::Append(char const*, int)
icu_71::CheckedArrayByteSink::CheckedArrayByteSink(char*, int)
icu_71::CheckedArrayByteSink::GetAppendBuffer(int, int, char*, int, int*)
icu_71::CheckedArrayByteSink::Reset()
icu_71::CheckedArrayByteSink::~CheckedArrayByteSink()
icu_71::CjkBreakEngine::CjkBreakEngine(icu_71::DictionaryMatcher*, icu_71::LanguageType, UErrorCode&)
icu_71::CjkBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::CjkBreakEngine::loadHiragana(UErrorCode&)
icu_71::CjkBreakEngine::loadJapaneseExtensions(UErrorCode&)
icu_71::CjkBreakEngine::~CjkBreakEngine()
icu_71::CodePointsVectorizer::vectorize(UText*, int, int, icu_71::UVector32&, icu_71::UVector32&, UErrorCode&) const
icu_71::CodePointsVectorizer::~CodePointsVectorizer()
icu_71::ComposeNormalizer2::getQuickCheck(int) const
icu_71::ComposeNormalizer2::hasBoundaryAfter(int) const
icu_71::ComposeNormalizer2::hasBoundaryBefore(int) const
icu_71::ComposeNormalizer2::isInert(int) const
icu_71::ComposeNormalizer2::isNormalized(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::ComposeNormalizer2::isNormalizedUTF8(icu_71::StringPiece, UErrorCode&) const
icu_71::ComposeNormalizer2::normalize(char16_t const*, char16_t const*, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::ComposeNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::ComposeNormalizer2::normalizeUTF8(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&) const
icu_71::ComposeNormalizer2::quickCheck(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::ComposeNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const
icu_71::ComposeNormalizer2::~ComposeNormalizer2()
icu_71::ConstArray1D::d1() const
icu_71::ConstArray1D::get(int) const
icu_71::ConstArray1D::~ConstArray1D()
icu_71::ConstArray2D::d1() const
icu_71::ConstArray2D::d2() const
icu_71::ConstArray2D::get(int, int) const
icu_71::ConstArray2D::~ConstArray2D()
icu_71::DATA_NAME
icu_71::DATA_TYPE
icu_71::DateInterval::DateInterval(double, double)
icu_71::DateInterval::DateInterval(icu_71::DateInterval const&)
icu_71::DateInterval::clone() const
icu_71::DateInterval::getDynamicClassID() const
icu_71::DateInterval::getStaticClassID()
icu_71::DateInterval::getStaticClassID()::classID
icu_71::DateInterval::operator=(icu_71::DateInterval const&)
icu_71::DateInterval::operator==(icu_71::DateInterval const&) const
icu_71::DateInterval::~DateInterval()
icu_71::DecomposeNormalizer2::getQuickCheck(int) const
icu_71::DecomposeNormalizer2::hasBoundaryAfter(int) const
icu_71::DecomposeNormalizer2::hasBoundaryBefore(int) const
icu_71::DecomposeNormalizer2::isInert(int) const
icu_71::DecomposeNormalizer2::isNormalizedUTF8(icu_71::StringPiece, UErrorCode&) const
icu_71::DecomposeNormalizer2::normalize(char16_t const*, char16_t const*, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::DecomposeNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::DecomposeNormalizer2::normalizeUTF8(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&) const
icu_71::DecomposeNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const
icu_71::DecomposeNormalizer2::~DecomposeNormalizer2()
icu_71::DictionaryBreakEngine::DictionaryBreakEngine()
icu_71::DictionaryBreakEngine::findBreaks(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::DictionaryBreakEngine::handles(int) const
icu_71::DictionaryBreakEngine::setCharacters(icu_71::UnicodeSet const&)
icu_71::DictionaryBreakEngine::~DictionaryBreakEngine()
icu_71::DictionaryData::TRANSFORM_NONE
icu_71::DictionaryData::TRANSFORM_OFFSET_MASK
icu_71::DictionaryData::TRANSFORM_TYPE_MASK
icu_71::DictionaryData::TRANSFORM_TYPE_OFFSET
icu_71::DictionaryData::TRIE_HAS_VALUES
icu_71::DictionaryData::TRIE_TYPE_BYTES
icu_71::DictionaryData::TRIE_TYPE_MASK
icu_71::DictionaryData::TRIE_TYPE_UCHARS
icu_71::DictionaryMatcher::~DictionaryMatcher()
icu_71::Edits::Iterator::Iterator(unsigned short const*, int, signed char, signed char)
icu_71::Edits::Iterator::destinationIndexFromSourceIndex(int, UErrorCode&)
icu_71::Edits::Iterator::findIndex(int, signed char, UErrorCode&)
icu_71::Edits::Iterator::next(signed char, UErrorCode&)
icu_71::Edits::Iterator::noNext()
icu_71::Edits::Iterator::previous(UErrorCode&)
icu_71::Edits::Iterator::readLength(int)
icu_71::Edits::Iterator::sourceIndexFromDestinationIndex(int, UErrorCode&)
icu_71::Edits::Iterator::toString(icu_71::UnicodeString&) const
icu_71::Edits::Iterator::updateNextIndexes()
icu_71::Edits::Iterator::updatePreviousIndexes()
icu_71::Edits::addReplace(int, int)
icu_71::Edits::addUnchanged(int)
icu_71::Edits::append(int)
icu_71::Edits::copyArray(icu_71::Edits const&)
icu_71::Edits::copyErrorTo(UErrorCode&) const
icu_71::Edits::growArray()
icu_71::Edits::mergeAndAppend(icu_71::Edits const&, icu_71::Edits const&, UErrorCode&)
icu_71::Edits::moveArray(icu_71::Edits&)
icu_71::Edits::operator=(icu_71::Edits const&)
icu_71::Edits::operator=(icu_71::Edits&&)
icu_71::Edits::releaseArray()
icu_71::Edits::reset()
icu_71::Edits::~Edits()
icu_71::EmojiProps::addPropertyStarts(USetAdder const*, UErrorCode&) const
icu_71::EmojiProps::addStrings(USetAdder const*, UProperty, UErrorCode&) const
icu_71::EmojiProps::getSingleton(UErrorCode&)
icu_71::EmojiProps::hasBinaryProperty(char16_t const*, int, UProperty)
icu_71::EmojiProps::hasBinaryProperty(int, UProperty)
icu_71::EmojiProps::hasBinaryPropertyImpl(char16_t const*, int, UProperty) const
icu_71::EmojiProps::hasBinaryPropertyImpl(int, UProperty) const::bitFlags
icu_71::EmojiProps::isAcceptable(void*, char const*, char const*, UDataInfo const*)
icu_71::EmojiProps::load(UErrorCode&)
icu_71::ErrorCode::assertSuccess() const
icu_71::ErrorCode::errorName() const
icu_71::ErrorCode::handleFailure() const
icu_71::ErrorCode::reset()
icu_71::ErrorCode::~ErrorCode()
icu_71::EventListener::getDynamicClassID() const
icu_71::EventListener::getStaticClassID()
icu_71::EventListener::getStaticClassID()::classID
icu_71::EventListener::~EventListener()
icu_71::FCDNormalizer2::hasBoundaryAfter(int) const
icu_71::FCDNormalizer2::hasBoundaryBefore(int) const
icu_71::FCDNormalizer2::isInert(int) const
icu_71::FCDNormalizer2::normalize(char16_t const*, char16_t const*, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::FCDNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::FCDNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const
icu_71::FCDNormalizer2::~FCDNormalizer2()
icu_71::FileTracer::traceOpen(char const*, char const*, char const*)
icu_71::FileTracer::traceOpenDataFile(char const*, char const*, char const*)
icu_71::FilteredBreakIteratorBuilder::FilteredBreakIteratorBuilder()
icu_71::FilteredBreakIteratorBuilder::createEmptyInstance(UErrorCode&)
icu_71::FilteredBreakIteratorBuilder::createInstance(UErrorCode&)
icu_71::FilteredBreakIteratorBuilder::createInstance(icu_71::Locale const&, UErrorCode&)
icu_71::FilteredBreakIteratorBuilder::~FilteredBreakIteratorBuilder()
icu_71::FilteredNormalizer2::append(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::FilteredNormalizer2::composePair(int, int) const
icu_71::FilteredNormalizer2::getCombiningClass(int) const
icu_71::FilteredNormalizer2::getDecomposition(int, icu_71::UnicodeString&) const
icu_71::FilteredNormalizer2::getRawDecomposition(int, icu_71::UnicodeString&) const
icu_71::FilteredNormalizer2::hasBoundaryAfter(int) const
icu_71::FilteredNormalizer2::hasBoundaryBefore(int) const
icu_71::FilteredNormalizer2::isInert(int) const
icu_71::FilteredNormalizer2::isNormalized(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::FilteredNormalizer2::isNormalizedUTF8(icu_71::StringPiece, UErrorCode&) const
icu_71::FilteredNormalizer2::normalize(icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::FilteredNormalizer2::normalize(icu_71::UnicodeString const&, icu_71::UnicodeString&, USetSpanCondition, UErrorCode&) const
icu_71::FilteredNormalizer2::normalizeSecondAndAppend(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::FilteredNormalizer2::normalizeSecondAndAppend(icu_71::UnicodeString&, icu_71::UnicodeString const&, signed char, UErrorCode&) const
icu_71::FilteredNormalizer2::normalizeUTF8(unsigned int, char const*, int, icu_71::ByteSink&, icu_71::Edits*, USetSpanCondition, UErrorCode&) const
icu_71::FilteredNormalizer2::normalizeUTF8(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&) const
icu_71::FilteredNormalizer2::quickCheck(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::FilteredNormalizer2::spanQuickCheckYes(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::FilteredNormalizer2::~FilteredNormalizer2()
icu_71::ForwardCharacterIterator::ForwardCharacterIterator()
icu_71::ForwardCharacterIterator::ForwardCharacterIterator(icu_71::ForwardCharacterIterator const&)
icu_71::ForwardCharacterIterator::~ForwardCharacterIterator()
icu_71::FullCaseFoldingIterator::FullCaseFoldingIterator()
icu_71::FullCaseFoldingIterator::next(icu_71::UnicodeString&)
icu_71::GraphemeClusterVectorizer::vectorize(UText*, int, int, icu_71::UVector32&, icu_71::UVector32&, UErrorCode&) const
icu_71::GraphemeClusterVectorizer::~GraphemeClusterVectorizer()
icu_71::GreekUpper::data0370
icu_71::GreekUpper::data1F00
icu_71::GreekUpper::getDiacriticData(int)
icu_71::GreekUpper::getLetterData(int)
icu_71::GreekUpper::isFollowedByCasedLetter(unsigned char const*, int, int)
icu_71::GreekUpper::toUpper(unsigned int, char16_t*, int, char16_t const*, int, icu_71::Edits*, UErrorCode&)
icu_71::GreekUpper::toUpper(unsigned int, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
icu_71::Hashtable::put(icu_71::UnicodeString const&, void*, UErrorCode&)
icu_71::ICUBreakIteratorFactory::handleCreate(icu_71::Locale const&, int, icu_71::ICUService const*, UErrorCode&) const
icu_71::ICUBreakIteratorFactory::~ICUBreakIteratorFactory()
icu_71::ICUBreakIteratorService::ICUBreakIteratorService()
icu_71::ICUBreakIteratorService::cloneInstance(icu_71::UObject*) const
icu_71::ICUBreakIteratorService::handleDefault(icu_71::ICUServiceKey const&, icu_71::UnicodeString*, UErrorCode&) const
icu_71::ICUBreakIteratorService::isDefault() const
icu_71::ICUBreakIteratorService::~ICUBreakIteratorService()
icu_71::ICUDataTable::get(char const*, char const*, char const*, icu_71::UnicodeString&) const
icu_71::ICULanguageBreakFactory::ICULanguageBreakFactory(UErrorCode&)
icu_71::ICULanguageBreakFactory::getEngineFor(int)
icu_71::ICULanguageBreakFactory::getEngineFor(int)::gBreakEngineMutex
icu_71::ICULanguageBreakFactory::loadDictionaryMatcherFor(UScriptCode)
icu_71::ICULanguageBreakFactory::loadEngineFor(int)
icu_71::ICULanguageBreakFactory::~ICULanguageBreakFactory()
icu_71::ICULocaleService::ICULocaleService()
icu_71::ICULocaleService::ICULocaleService(icu_71::UnicodeString const&)
icu_71::ICULocaleService::createKey(icu_71::UnicodeString const*, UErrorCode&) const
icu_71::ICULocaleService::createKey(icu_71::UnicodeString const*, int, UErrorCode&) const
icu_71::ICULocaleService::get(icu_71::Locale const&, UErrorCode&) const
icu_71::ICULocaleService::get(icu_71::Locale const&, icu_71::Locale*, UErrorCode&) const
icu_71::ICULocaleService::get(icu_71::Locale const&, int, UErrorCode&) const
icu_71::ICULocaleService::get(icu_71::Locale const&, int, icu_71::Locale*, UErrorCode&) const
icu_71::ICULocaleService::getAvailableLocales() const
icu_71::ICULocaleService::registerInstance(icu_71::UObject*, icu_71::Locale const&, UErrorCode&)
icu_71::ICULocaleService::registerInstance(icu_71::UObject*, icu_71::Locale const&, int, UErrorCode&)
icu_71::ICULocaleService::registerInstance(icu_71::UObject*, icu_71::Locale const&, int, int, UErrorCode&)
icu_71::ICULocaleService::registerInstance(icu_71::UObject*, icu_71::UnicodeString const&, signed char, UErrorCode&)
icu_71::ICULocaleService::validateFallbackLocale() const
icu_71::ICULocaleService::validateFallbackLocale() const::llock
icu_71::ICULocaleService::~ICULocaleService()
icu_71::ICUNotifier::ICUNotifier()
icu_71::ICUNotifier::addListener(icu_71::EventListener const*, UErrorCode&)
icu_71::ICUNotifier::notifyChanged()
icu_71::ICUNotifier::removeListener(icu_71::EventListener const*, UErrorCode&)
icu_71::ICUNotifier::~ICUNotifier()
icu_71::ICUResourceBundleFactory::ICUResourceBundleFactory()
icu_71::ICUResourceBundleFactory::ICUResourceBundleFactory(icu_71::UnicodeString const&)
icu_71::ICUResourceBundleFactory::getDynamicClassID() const
icu_71::ICUResourceBundleFactory::getStaticClassID()
icu_71::ICUResourceBundleFactory::getStaticClassID()::classID
icu_71::ICUResourceBundleFactory::getSupportedIDs(UErrorCode&) const
icu_71::ICUResourceBundleFactory::handleCreate(icu_71::Locale const&, int, icu_71::ICUService const*, UErrorCode&) const
icu_71::ICUResourceBundleFactory::~ICUResourceBundleFactory()
icu_71::ICUService::ICUService()
icu_71::ICUService::ICUService(icu_71::UnicodeString const&)
icu_71::ICUService::acceptsListener(icu_71::EventListener const&) const
icu_71::ICUService::clearCaches()
icu_71::ICUService::clearServiceCache()
icu_71::ICUService::countFactories() const
icu_71::ICUService::createKey(icu_71::UnicodeString const*, UErrorCode&) const
icu_71::ICUService::createSimpleFactory(icu_71::UObject*, icu_71::UnicodeString const&, signed char, UErrorCode&)
icu_71::ICUService::get(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::ICUService::get(icu_71::UnicodeString const&, icu_71::UnicodeString*, UErrorCode&) const
icu_71::ICUService::getDisplayName(icu_71::UnicodeString const&, icu_71::UnicodeString&) const
icu_71::ICUService::getDisplayName(icu_71::UnicodeString const&, icu_71::UnicodeString&, icu_71::Locale const&) const
icu_71::ICUService::getDisplayNames(icu_71::UVector&, UErrorCode&) const
icu_71::ICUService::getDisplayNames(icu_71::UVector&, icu_71::Locale const&, UErrorCode&) const
icu_71::ICUService::getDisplayNames(icu_71::UVector&, icu_71::Locale const&, icu_71::UnicodeString const*, UErrorCode&) const
icu_71::ICUService::getKey(icu_71::ICUServiceKey&, UErrorCode&) const
icu_71::ICUService::getKey(icu_71::ICUServiceKey&, icu_71::UnicodeString*, UErrorCode&) const
icu_71::ICUService::getKey(icu_71::ICUServiceKey&, icu_71::UnicodeString*, icu_71::ICUServiceFactory const*, UErrorCode&) const
icu_71::ICUService::getName(icu_71::UnicodeString&) const
icu_71::ICUService::getTimestamp() const
icu_71::ICUService::getVisibleIDMap(UErrorCode&) const
icu_71::ICUService::getVisibleIDs(icu_71::UVector&, UErrorCode&) const
icu_71::ICUService::getVisibleIDs(icu_71::UVector&, icu_71::UnicodeString const*, UErrorCode&) const
icu_71::ICUService::handleDefault(icu_71::ICUServiceKey const&, icu_71::UnicodeString*, UErrorCode&) const
icu_71::ICUService::isDefault() const
icu_71::ICUService::notifyListener(icu_71::EventListener&) const
icu_71::ICUService::reInitializeFactories()
icu_71::ICUService::registerFactory(icu_71::ICUServiceFactory*, UErrorCode&)
icu_71::ICUService::registerInstance(icu_71::UObject*, icu_71::UnicodeString const&, UErrorCode&)
icu_71::ICUService::registerInstance(icu_71::UObject*, icu_71::UnicodeString const&, signed char, UErrorCode&)
icu_71::ICUService::reset()
icu_71::ICUService::unregister(void const*, UErrorCode&)
icu_71::ICUService::~ICUService()
icu_71::ICUServiceFactory::~ICUServiceFactory()
icu_71::ICUServiceKey::ICUServiceKey(icu_71::UnicodeString const&)
icu_71::ICUServiceKey::PREFIX_DELIMITER
icu_71::ICUServiceKey::canonicalID(icu_71::UnicodeString&) const
icu_71::ICUServiceKey::currentDescriptor(icu_71::UnicodeString&) const
icu_71::ICUServiceKey::currentID(icu_71::UnicodeString&) const
icu_71::ICUServiceKey::fallback()
icu_71::ICUServiceKey::getDynamicClassID() const
icu_71::ICUServiceKey::getID() const
icu_71::ICUServiceKey::getStaticClassID()
icu_71::ICUServiceKey::getStaticClassID()::classID
icu_71::ICUServiceKey::isFallbackOf(icu_71::UnicodeString const&) const
icu_71::ICUServiceKey::parsePrefix(icu_71::UnicodeString&)
icu_71::ICUServiceKey::parseSuffix(icu_71::UnicodeString&)
icu_71::ICUServiceKey::prefix(icu_71::UnicodeString&) const
icu_71::ICUServiceKey::~ICUServiceKey()
icu_71::ICU_Utility::appendNumber(icu_71::UnicodeString&, int, int, int)
icu_71::ICU_Utility::appendToRule(icu_71::UnicodeString&, icu_71::UnicodeMatcher const*, signed char, icu_71::UnicodeString&)
icu_71::ICU_Utility::appendToRule(icu_71::UnicodeString&, icu_71::UnicodeString const&, signed char, signed char, icu_71::UnicodeString&)
icu_71::ICU_Utility::appendToRule(icu_71::UnicodeString&, int, signed char, signed char, icu_71::UnicodeString&)
icu_71::ICU_Utility::escape(icu_71::UnicodeString&, int)
icu_71::ICU_Utility::escapeUnprintable(icu_71::UnicodeString&, int)
icu_71::ICU_Utility::isUnprintable(int)
icu_71::ICU_Utility::parseAsciiInteger(icu_71::UnicodeString const&, int&)
icu_71::ICU_Utility::parseChar(icu_71::UnicodeString const&, int&, char16_t)
icu_71::ICU_Utility::parseInteger(icu_71::UnicodeString const&, int&, int)
icu_71::ICU_Utility::parseNumber(icu_71::UnicodeString const&, int&, signed char)
icu_71::ICU_Utility::parsePattern(icu_71::UnicodeString const&, icu_71::Replaceable const&, int, int)
icu_71::ICU_Utility::parsePattern(icu_71::UnicodeString const&, int, int, icu_71::UnicodeString const&, int*)
icu_71::ICU_Utility::parseUnicodeIdentifier(icu_71::UnicodeString const&, int&)
icu_71::ICU_Utility::shouldAlwaysBeEscaped(int)
icu_71::ICU_Utility::skipWhitespace(icu_71::UnicodeString const&, int&, signed char)
icu_71::IDNA::createUTS46Instance(unsigned int, UErrorCode&)
icu_71::IDNA::labelToASCII_UTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::IDNA::labelToUnicodeUTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::IDNA::nameToASCII_UTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::IDNA::nameToUnicodeUTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::IDNA::~IDNA()
icu_71::InitCanonIterData::doInit(icu_71::Normalizer2Impl*, UErrorCode&)
icu_71::KeywordEnumeration::KeywordEnumeration(char const*, int, int, UErrorCode&)
icu_71::KeywordEnumeration::clone() const
icu_71::KeywordEnumeration::count(UErrorCode&) const
icu_71::KeywordEnumeration::fgClassID
icu_71::KeywordEnumeration::getDynamicClassID() const
icu_71::KeywordEnumeration::next(int*, UErrorCode&)
icu_71::KeywordEnumeration::reset(UErrorCode&)
icu_71::KeywordEnumeration::snext(UErrorCode&)
icu_71::KeywordEnumeration::~KeywordEnumeration()
icu_71::KhmerBreakEngine::KhmerBreakEngine(icu_71::DictionaryMatcher*, UErrorCode&)
icu_71::KhmerBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::KhmerBreakEngine::~KhmerBreakEngine()
icu_71::LSR::LSR(char, char const*, char const*, char const*, int, UErrorCode&)
icu_71::LSR::deleteOwned()
icu_71::LSR::indexForRegion(char const*)
icu_71::LSR::isEquivalentTo(icu_71::LSR const&) const
icu_71::LSR::operator=(icu_71::LSR&&)
icu_71::LSR::operator==(icu_71::LSR const&) const
icu_71::LSR::setHashCode()
icu_71::LSTMBreakEngine::LSTMBreakEngine(icu_71::LSTMData const*, icu_71::UnicodeSet const&, UErrorCode&)
icu_71::LSTMBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::LSTMBreakEngine::name() const
icu_71::LSTMBreakEngine::~LSTMBreakEngine()
icu_71::LSTMData::LSTMData(UResourceBundle*, UErrorCode&)
icu_71::LanguageBreakEngine::LanguageBreakEngine()
icu_71::LanguageBreakEngine::~LanguageBreakEngine()
icu_71::LaoBreakEngine::LaoBreakEngine(icu_71::DictionaryMatcher*, UErrorCode&)
icu_71::LaoBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::LaoBreakEngine::~LaoBreakEngine()
icu_71::LatinCase::TO_LOWER_NORMAL
icu_71::LatinCase::TO_LOWER_TR_LT
icu_71::LatinCase::TO_UPPER_NORMAL
icu_71::LatinCase::TO_UPPER_TR
icu_71::LoadedNormalizer2Impl::isAcceptable(void*, char const*, char const*, UDataInfo const*)
icu_71::LoadedNormalizer2Impl::load(char const*, char const*, UErrorCode&)
icu_71::LoadedNormalizer2Impl::~LoadedNormalizer2Impl()
icu_71::LocalPointer<icu_71::Norm2AllModes>::~LocalPointer()
icu_71::LocalPointer<icu_71::UVector32>::adoptInsteadAndCheckErrorCode(icu_71::UVector32*, UErrorCode&)
icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::hasNext() const
icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::next()
icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::~ConvertingIterator()
icu_71::Locale::Iterator::~Iterator()
icu_71::Locale::Locale()
icu_71::Locale::Locale(char const*, char const*, char const*, char const*)
icu_71::Locale::Locale(icu_71::Locale const&)
icu_71::Locale::Locale(icu_71::Locale&&)
icu_71::Locale::Locale(icu_71::Locale::ELocaleType)
icu_71::Locale::addLikelySubtags(UErrorCode&)
icu_71::Locale::canonicalize(UErrorCode&)
icu_71::Locale::clone() const
icu_71::Locale::createCanonical(char const*)
icu_71::Locale::createFromName(char const*)
icu_71::Locale::createKeywords(UErrorCode&) const
icu_71::Locale::createUnicodeKeywords(UErrorCode&) const
icu_71::Locale::forLanguageTag(icu_71::StringPiece, UErrorCode&)
icu_71::Locale::getAvailableLocales(int&)
icu_71::Locale::getBaseName() const
icu_71::Locale::getCanada()
icu_71::Locale::getCanadaFrench()
icu_71::Locale::getChina()
icu_71::Locale::getChinese()
icu_71::Locale::getDefault()
icu_71::Locale::getDisplayCountry(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::Locale::getDisplayCountry(icu_71::UnicodeString&) const
icu_71::Locale::getDisplayLanguage(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::Locale::getDisplayLanguage(icu_71::UnicodeString&) const
icu_71::Locale::getDisplayName(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::Locale::getDisplayName(icu_71::UnicodeString&) const
icu_71::Locale::getDisplayScript(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::Locale::getDisplayScript(icu_71::UnicodeString&) const
icu_71::Locale::getDisplayVariant(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::Locale::getDisplayVariant(icu_71::UnicodeString&) const
icu_71::Locale::getDynamicClassID() const
icu_71::Locale::getEnglish()
icu_71::Locale::getFrance()
icu_71::Locale::getFrench()
icu_71::Locale::getGerman()
icu_71::Locale::getGermany()
icu_71::Locale::getISO3Country() const
icu_71::Locale::getISO3Language() const
icu_71::Locale::getISOCountries()
icu_71::Locale::getISOLanguages()
icu_71::Locale::getItalian()
icu_71::Locale::getItaly()
icu_71::Locale::getJapan()
icu_71::Locale::getJapanese()
icu_71::Locale::getKeywordValue(char const*, char*, int, UErrorCode&) const
icu_71::Locale::getKeywordValue(icu_71::StringPiece, icu_71::ByteSink&, UErrorCode&) const
icu_71::Locale::getKorea()
icu_71::Locale::getKorean()
icu_71::Locale::getLCID() const
icu_71::Locale::getLocale(int)
icu_71::Locale::getLocaleCache()
icu_71::Locale::getPRC()
icu_71::Locale::getRoot()
icu_71::Locale::getSimplifiedChinese()
icu_71::Locale::getStaticClassID()
icu_71::Locale::getStaticClassID()::classID
icu_71::Locale::getTaiwan()
icu_71::Locale::getTraditionalChinese()
icu_71::Locale::getUK()
icu_71::Locale::getUS()
icu_71::Locale::getUnicodeKeywordValue(icu_71::StringPiece, icu_71::ByteSink&, UErrorCode&) const
icu_71::Locale::hashCode() const
icu_71::Locale::init(char const*, signed char)
icu_71::Locale::initBaseName(UErrorCode&)
icu_71::Locale::isRightToLeft() const
icu_71::Locale::minimizeSubtags(UErrorCode&)
icu_71::Locale::operator=(icu_71::Locale const&)
icu_71::Locale::operator=(icu_71::Locale&&)
icu_71::Locale::operator==(icu_71::Locale const&) const
icu_71::Locale::setDefault(icu_71::Locale const&, UErrorCode&)
icu_71::Locale::setFromPOSIXID(char const*)
icu_71::Locale::setKeywordValue(char const*, char const*, UErrorCode&)
icu_71::Locale::setKeywordValue(icu_71::StringPiece, icu_71::StringPiece, UErrorCode&)
icu_71::Locale::setToBogus()
icu_71::Locale::setUnicodeKeywordValue(icu_71::StringPiece, icu_71::StringPiece, UErrorCode&)
icu_71::Locale::toLanguageTag(icu_71::ByteSink&, UErrorCode&) const
icu_71::Locale::~Locale()
icu_71::LocaleBased::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_71::LocaleBased::getLocaleID(ULocDataLocaleType, UErrorCode&) const
icu_71::LocaleBased::setLocaleIDs(char const*, char const*)
icu_71::LocaleBased::setLocaleIDs(icu_71::Locale const&, icu_71::Locale const&)
icu_71::LocaleBuilder::LocaleBuilder()
icu_71::LocaleBuilder::addUnicodeLocaleAttribute(icu_71::StringPiece)
icu_71::LocaleBuilder::build(UErrorCode&)
icu_71::LocaleBuilder::clear()
icu_71::LocaleBuilder::clearExtensions()
icu_71::LocaleBuilder::copyErrorTo(UErrorCode&) const
icu_71::LocaleBuilder::copyExtensionsFrom(icu_71::Locale const&, UErrorCode&)
icu_71::LocaleBuilder::removeUnicodeLocaleAttribute(icu_71::StringPiece)
icu_71::LocaleBuilder::setExtension(char, icu_71::StringPiece)
icu_71::LocaleBuilder::setLanguage(icu_71::StringPiece)
icu_71::LocaleBuilder::setLanguageTag(icu_71::StringPiece)
icu_71::LocaleBuilder::setLocale(icu_71::Locale const&)
icu_71::LocaleBuilder::setRegion(icu_71::StringPiece)
icu_71::LocaleBuilder::setScript(icu_71::StringPiece)
icu_71::LocaleBuilder::setUnicodeLocaleKeyword(icu_71::StringPiece, icu_71::StringPiece)
icu_71::LocaleBuilder::setVariant(icu_71::StringPiece)
icu_71::LocaleBuilder::~LocaleBuilder()
icu_71::LocaleDisplayNames::createInstance(icu_71::Locale const&, UDialectHandling)
icu_71::LocaleDisplayNames::createInstance(icu_71::Locale const&, UDisplayContext*, int)
icu_71::LocaleDisplayNames::~LocaleDisplayNames()
icu_71::LocaleDisplayNamesImpl::CapitalizationContextSink::put(char const*, icu_71::ResourceValue&, signed char, UErrorCode&)
icu_71::LocaleDisplayNamesImpl::CapitalizationContextSink::~CapitalizationContextSink()
icu_71::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_71::Locale const&, UDialectHandling)
icu_71::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_71::Locale const&, UDisplayContext*, int)
icu_71::LocaleDisplayNamesImpl::adjustForUsageAndContext(icu_71::LocaleDisplayNamesImpl::CapContextUsage, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::adjustForUsageAndContext(icu_71::LocaleDisplayNamesImpl::CapContextUsage, icu_71::UnicodeString&) const::capitalizationBrkIterLock
icu_71::LocaleDisplayNamesImpl::appendWithSep(icu_71::UnicodeString&, icu_71::UnicodeString const&) const
icu_71::LocaleDisplayNamesImpl::getContext(UDisplayContextType) const
icu_71::LocaleDisplayNamesImpl::getDialectHandling() const
icu_71::LocaleDisplayNamesImpl::getLocale() const
icu_71::LocaleDisplayNamesImpl::initialize()
icu_71::LocaleDisplayNamesImpl::keyDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::keyDisplayName(char const*, icu_71::UnicodeString&, signed char) const
icu_71::LocaleDisplayNamesImpl::keyValueDisplayName(char const*, char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::keyValueDisplayName(char const*, char const*, icu_71::UnicodeString&, signed char) const
icu_71::LocaleDisplayNamesImpl::languageDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::localeDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::localeDisplayName(icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::localeIdName(char const*, icu_71::UnicodeString&, bool) const
icu_71::LocaleDisplayNamesImpl::regionDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::regionDisplayName(char const*, icu_71::UnicodeString&, signed char) const
icu_71::LocaleDisplayNamesImpl::scriptDisplayName(UScriptCode, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::scriptDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::scriptDisplayName(char const*, icu_71::UnicodeString&, signed char) const
icu_71::LocaleDisplayNamesImpl::variantDisplayName(char const*, icu_71::UnicodeString&) const
icu_71::LocaleDisplayNamesImpl::variantDisplayName(char const*, icu_71::UnicodeString&, signed char) const
icu_71::LocaleDisplayNamesImpl::~LocaleDisplayNamesImpl()
icu_71::LocaleDistance::LocaleDistance(icu_71::LocaleDistanceData const&, icu_71::XLikelySubtags const&)
icu_71::LocaleDistance::getBestIndexAndDistance(icu_71::LSR const&, icu_71::LSR const**, int, int, ULocMatchFavorSubtag, ULocMatchDirection) const
icu_71::LocaleDistance::getDesSuppScriptDistance(icu_71::BytesTrie&, unsigned long, char const*, char const*)
icu_71::LocaleDistance::getRegionPartitionsDistance(icu_71::BytesTrie&, unsigned long, char const*, char const*, int)
icu_71::LocaleDistance::getSingleton(UErrorCode&)
icu_71::LocaleDistance::initLocaleDistance(UErrorCode&)
icu_71::LocaleDistance::isParadigmLSR(icu_71::LSR const&) const
icu_71::LocaleKey::LocaleKey(icu_71::UnicodeString const&, icu_71::UnicodeString const&, icu_71::UnicodeString const*, int)
icu_71::LocaleKey::canonicalID(icu_71::UnicodeString&) const
icu_71::LocaleKey::canonicalLocale(icu_71::Locale&) const
icu_71::LocaleKey::createWithCanonicalFallback(icu_71::UnicodeString const*, icu_71::UnicodeString const*, UErrorCode&)
icu_71::LocaleKey::createWithCanonicalFallback(icu_71::UnicodeString const*, icu_71::UnicodeString const*, int, UErrorCode&)
icu_71::LocaleKey::currentDescriptor(icu_71::UnicodeString&) const
icu_71::LocaleKey::currentID(icu_71::UnicodeString&) const
icu_71::LocaleKey::currentLocale(icu_71::Locale&) const
icu_71::LocaleKey::fallback()
icu_71::LocaleKey::getDynamicClassID() const
icu_71::LocaleKey::getStaticClassID()
icu_71::LocaleKey::getStaticClassID()::classID
icu_71::LocaleKey::isFallbackOf(icu_71::UnicodeString const&) const
icu_71::LocaleKey::kind() const
icu_71::LocaleKey::prefix(icu_71::UnicodeString&) const
icu_71::LocaleKey::~LocaleKey()
icu_71::LocaleKeyFactory::LocaleKeyFactory(int)
icu_71::LocaleKeyFactory::LocaleKeyFactory(int, icu_71::UnicodeString const&)
icu_71::LocaleKeyFactory::create(icu_71::ICUServiceKey const&, icu_71::ICUService const*, UErrorCode&) const
icu_71::LocaleKeyFactory::getDisplayName(icu_71::UnicodeString const&, icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::LocaleKeyFactory::getDynamicClassID() const
icu_71::LocaleKeyFactory::getStaticClassID()
icu_71::LocaleKeyFactory::getStaticClassID()::classID
icu_71::LocaleKeyFactory::getSupportedIDs(UErrorCode&) const
icu_71::LocaleKeyFactory::handleCreate(icu_71::Locale const&, int, icu_71::ICUService const*, UErrorCode&) const
icu_71::LocaleKeyFactory::handlesKey(icu_71::ICUServiceKey const&, UErrorCode&) const
icu_71::LocaleKeyFactory::updateVisibleIDs(icu_71::Hashtable&, UErrorCode&) const
icu_71::LocaleKeyFactory::~LocaleKeyFactory()
icu_71::LocaleMatcher::Builder::Builder(icu_71::LocaleMatcher::Builder&&)
icu_71::LocaleMatcher::Builder::addSupportedLocale(icu_71::Locale const&)
icu_71::LocaleMatcher::Builder::build(UErrorCode&) const
icu_71::LocaleMatcher::Builder::clearSupportedLocales()
icu_71::LocaleMatcher::Builder::copyErrorTo(UErrorCode&) const
icu_71::LocaleMatcher::Builder::ensureSupportedLocaleVector()
icu_71::LocaleMatcher::Builder::operator=(icu_71::LocaleMatcher::Builder&&)
icu_71::LocaleMatcher::Builder::setDefaultLocale(icu_71::Locale const*)
icu_71::LocaleMatcher::Builder::setDemotionPerDesiredLocale(ULocMatchDemotion)
icu_71::LocaleMatcher::Builder::setFavorSubtag(ULocMatchFavorSubtag)
icu_71::LocaleMatcher::Builder::setMaxDistance(icu_71::Locale const&, icu_71::Locale const&)
icu_71::LocaleMatcher::Builder::setNoDefaultLocale()
icu_71::LocaleMatcher::Builder::setSupportedLocales(icu_71::Locale::Iterator&)
icu_71::LocaleMatcher::Builder::setSupportedLocalesFromListString(icu_71::StringPiece)
icu_71::LocaleMatcher::Builder::~Builder()
icu_71::LocaleMatcher::LocaleMatcher(icu_71::LocaleMatcher&&)
icu_71::LocaleMatcher::LocaleMatcher(icu_71::LocaleMatcher::Builder const&, UErrorCode&)
icu_71::LocaleMatcher::Result::Result(icu_71::LocaleMatcher::Result&&)
icu_71::LocaleMatcher::Result::makeResolvedLocale(UErrorCode&) const
icu_71::LocaleMatcher::Result::operator=(icu_71::LocaleMatcher::Result&&)
icu_71::LocaleMatcher::Result::~Result()
icu_71::LocaleMatcher::getBestMatch(icu_71::Locale const&, UErrorCode&) const
icu_71::LocaleMatcher::getBestMatch(icu_71::Locale::Iterator&, UErrorCode&) const
icu_71::LocaleMatcher::getBestMatchForListString(icu_71::StringPiece, UErrorCode&) const
icu_71::LocaleMatcher::getBestMatchResult(icu_71::Locale const&, UErrorCode&) const
icu_71::LocaleMatcher::getBestMatchResult(icu_71::Locale::Iterator&, UErrorCode&) const
icu_71::LocaleMatcher::getBestSuppIndex(icu_71::LSR, icu_71::LocaleLsrIterator*, UErrorCode&) const
icu_71::LocaleMatcher::internalMatch(icu_71::Locale const&, icu_71::Locale const&, UErrorCode&) const
icu_71::LocaleMatcher::isMatch(icu_71::Locale const&, icu_71::Locale const&, UErrorCode&) const
icu_71::LocaleMatcher::operator=(icu_71::LocaleMatcher&&)
icu_71::LocaleMatcher::putIfAbsent(icu_71::LSR const&, int, int, UErrorCode&)
icu_71::LocaleMatcher::~LocaleMatcher()
icu_71::LocalePriorityList::Iterator::hasNext() const
icu_71::LocalePriorityList::Iterator::next()
icu_71::LocalePriorityList::Iterator::~Iterator()
icu_71::LocalePriorityList::LocalePriorityList(icu_71::StringPiece, UErrorCode&)
icu_71::LocalePriorityList::add(icu_71::Locale const&, int, UErrorCode&)
icu_71::LocalePriorityList::localeAt(int) const
icu_71::LocalePriorityList::orphanLocaleAt(int)
icu_71::LocalePriorityList::sort(UErrorCode&)
icu_71::LocalePriorityList::~LocalePriorityList()
icu_71::LocaleUtility::canonicalLocaleString(icu_71::UnicodeString const*, icu_71::UnicodeString&)
icu_71::LocaleUtility::getAvailableLocaleNames(icu_71::UnicodeString const&)
icu_71::LocaleUtility::initLocaleFromName(icu_71::UnicodeString const&, icu_71::Locale&)
icu_71::LocaleUtility::initNameFromLocale(icu_71::Locale const&, icu_71::UnicodeString&)
icu_71::LocaleUtility::isFallbackOf(icu_71::UnicodeString const&, icu_71::UnicodeString const&)
icu_71::MaybeStackArray<char, 40>::MaybeStackArray()
icu_71::MaybeStackArray<char, 40>::MaybeStackArray(icu_71::MaybeStackArray<char, 40>&&)
icu_71::MaybeStackArray<char, 40>::MaybeStackArray(int, UErrorCode)
icu_71::MaybeStackArray<char, 40>::aliasInstead(char*, int)
icu_71::MaybeStackArray<char, 40>::copyFrom(icu_71::MaybeStackArray<char, 40> const&, UErrorCode&)
icu_71::MaybeStackArray<char, 40>::getAlias() const
icu_71::MaybeStackArray<char, 40>::getArrayLimit() const
icu_71::MaybeStackArray<char, 40>::getCapacity() const
icu_71::MaybeStackArray<char, 40>::operator=(icu_71::MaybeStackArray<char, 40>&&)
icu_71::MaybeStackArray<char, 40>::operator[](long)
icu_71::MaybeStackArray<char, 40>::operator[](long) const
icu_71::MaybeStackArray<char, 40>::orphanOrClone(int, int&)
icu_71::MaybeStackArray<char, 40>::releaseArray()
icu_71::MaybeStackArray<char, 40>::resetToStackArray()
icu_71::MaybeStackArray<char, 40>::resize(int, int)
icu_71::MaybeStackArray<char, 40>::~MaybeStackArray()
icu_71::MaybeStackArray<signed char, 100>::MaybeStackArray(int, UErrorCode)
icu_71::MessageImpl::appendReducedApostrophes(icu_71::UnicodeString const&, int, int, icu_71::UnicodeString&)
icu_71::MessageImpl::appendSubMessageWithoutSkipSyntax(icu_71::MessagePattern const&, int, icu_71::UnicodeString&)
icu_71::MessagePattern::MessagePattern(UErrorCode&)
icu_71::MessagePattern::MessagePattern(UMessagePatternApostropheMode, UErrorCode&)
icu_71::MessagePattern::MessagePattern(icu_71::MessagePattern const&)
icu_71::MessagePattern::MessagePattern(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::Part::operator==(icu_71::MessagePattern::Part const&) const
icu_71::MessagePattern::addArgDoublePart(double, int, int, UErrorCode&)
icu_71::MessagePattern::addLimitPart(int, UMessagePatternPartType, int, int, int, UErrorCode&)
icu_71::MessagePattern::addPart(UMessagePatternPartType, int, int, int, UErrorCode&)
icu_71::MessagePattern::autoQuoteApostropheDeep() const
icu_71::MessagePattern::clear()
icu_71::MessagePattern::copyStorage(icu_71::MessagePattern const&, UErrorCode&)
icu_71::MessagePattern::getNumericValue(icu_71::MessagePattern::Part const&) const
icu_71::MessagePattern::getPluralOffset(int) const
icu_71::MessagePattern::hashCode() const
icu_71::MessagePattern::inMessageFormatPattern(int)
icu_71::MessagePattern::inTopLevelChoiceMessage(int, UMessagePatternArgType)
icu_71::MessagePattern::init(UErrorCode&)
icu_71::MessagePattern::isArgTypeChar(int)
icu_71::MessagePattern::isChoice(int)
icu_71::MessagePattern::isOrdinal(int)
icu_71::MessagePattern::isPlural(int)
icu_71::MessagePattern::isSelect(int)
icu_71::MessagePattern::operator=(icu_71::MessagePattern const&)
icu_71::MessagePattern::operator==(icu_71::MessagePattern const&) const
icu_71::MessagePattern::parse(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseArg(int, int, int, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseArgNumber(icu_71::UnicodeString const&, int, int)
icu_71::MessagePattern::parseChoiceStyle(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseChoiceStyle(int, int, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseDouble(int, int, signed char, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseMessage(int, int, int, UMessagePatternArgType, UParseError*, UErrorCode&)
icu_71::MessagePattern::parsePluralOrSelectStyle(UMessagePatternArgType, int, int, UParseError*, UErrorCode&)
icu_71::MessagePattern::parsePluralStyle(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseSelectStyle(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::parseSimpleStyle(int, UParseError*, UErrorCode&)
icu_71::MessagePattern::postParse()
icu_71::MessagePattern::preParse(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::MessagePattern::setParseError(UParseError*, int)
icu_71::MessagePattern::skipDouble(int)
icu_71::MessagePattern::skipIdentifier(int)
icu_71::MessagePattern::skipWhiteSpace(int)
icu_71::MessagePattern::validateArgumentName(icu_71::UnicodeString const&)
icu_71::MessagePattern::~MessagePattern()
icu_71::NoopNormalizer2::append(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::NoopNormalizer2::getDecomposition(int, icu_71::UnicodeString&) const
icu_71::NoopNormalizer2::hasBoundaryAfter(int) const
icu_71::NoopNormalizer2::hasBoundaryBefore(int) const
icu_71::NoopNormalizer2::isInert(int) const
icu_71::NoopNormalizer2::isNormalized(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::NoopNormalizer2::isNormalizedUTF8(icu_71::StringPiece, UErrorCode&) const
icu_71::NoopNormalizer2::normalize(icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::NoopNormalizer2::normalizeSecondAndAppend(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::NoopNormalizer2::normalizeUTF8(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&) const
icu_71::NoopNormalizer2::quickCheck(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::NoopNormalizer2::spanQuickCheckYes(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::NoopNormalizer2::~NoopNormalizer2()
icu_71::Norm2AllModes::createInstance(char const*, char const*, UErrorCode&)
icu_71::Norm2AllModes::createInstance(icu_71::Normalizer2Impl*, UErrorCode&)
icu_71::Norm2AllModes::createNFCInstance(UErrorCode&)
icu_71::Norm2AllModes::getNFCInstance(UErrorCode&)
icu_71::Norm2AllModes::getNFKCInstance(UErrorCode&)
icu_71::Norm2AllModes::getNFKC_CFInstance(UErrorCode&)
icu_71::Norm2AllModes::~Norm2AllModes()
icu_71::Normalizer2::composePair(int, int) const
icu_71::Normalizer2::getCombiningClass(int) const
icu_71::Normalizer2::getInstance(char const*, char const*, UNormalization2Mode, UErrorCode&)
icu_71::Normalizer2::getNFCInstance(UErrorCode&)
icu_71::Normalizer2::getNFDInstance(UErrorCode&)
icu_71::Normalizer2::getNFKCCasefoldInstance(UErrorCode&)
icu_71::Normalizer2::getNFKCInstance(UErrorCode&)
icu_71::Normalizer2::getNFKDInstance(UErrorCode&)
icu_71::Normalizer2::getRawDecomposition(int, icu_71::UnicodeString&) const
icu_71::Normalizer2::isNormalizedUTF8(icu_71::StringPiece, UErrorCode&) const
icu_71::Normalizer2::normalizeUTF8(unsigned int, icu_71::StringPiece, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&) const
icu_71::Normalizer2::~Normalizer2()
icu_71::Normalizer2Factory::getFCCInstance(UErrorCode&)
icu_71::Normalizer2Factory::getFCDInstance(UErrorCode&)
icu_71::Normalizer2Factory::getImpl(icu_71::Normalizer2 const*)
icu_71::Normalizer2Factory::getInstance(UNormalizationMode, UErrorCode&)
icu_71::Normalizer2Factory::getNFCImpl(UErrorCode&)
icu_71::Normalizer2Factory::getNFKCImpl(UErrorCode&)
icu_71::Normalizer2Factory::getNFKC_CFImpl(UErrorCode&)
icu_71::Normalizer2Factory::getNoopInstance(UErrorCode&)
icu_71::Normalizer2Impl::addCanonIterPropertyStarts(USetAdder const*, UErrorCode&) const
icu_71::Normalizer2Impl::addComposites(unsigned short const*, icu_71::UnicodeSet&) const
icu_71::Normalizer2Impl::addLcccChars(icu_71::UnicodeSet&) const
icu_71::Normalizer2Impl::addPropertyStarts(USetAdder const*, UErrorCode&) const
icu_71::Normalizer2Impl::combine(unsigned short const*, int)
icu_71::Normalizer2Impl::compose(char16_t const*, char16_t const*, signed char, signed char, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::composeAndAppend(char16_t const*, char16_t const*, signed char, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::composePair(int, int) const
icu_71::Normalizer2Impl::composeQuickCheck(char16_t const*, char16_t const*, signed char, UNormalizationCheckResult*) const
icu_71::Normalizer2Impl::composeUTF8(unsigned int, signed char, unsigned char const*, unsigned char const*, icu_71::ByteSink*, icu_71::Edits*, UErrorCode&) const
icu_71::Normalizer2Impl::copyLowPrefixFromNulTerminated(char16_t const*, int, icu_71::ReorderingBuffer*, UErrorCode&) const
icu_71::Normalizer2Impl::decompose(char16_t const*, char16_t const*, icu_71::ReorderingBuffer*, UErrorCode&) const
icu_71::Normalizer2Impl::decompose(char16_t const*, char16_t const*, icu_71::UnicodeString&, int, UErrorCode&) const
icu_71::Normalizer2Impl::decompose(icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::Normalizer2Impl::decompose(int, unsigned short, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::decomposeAndAppend(char16_t const*, char16_t const*, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::decomposeShort(char16_t const*, char16_t const*, signed char, signed char, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::decomposeShort(unsigned char const*, unsigned char const*, icu_71::Normalizer2Impl::StopAt, signed char, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::decomposeUTF8(unsigned int, unsigned char const*, unsigned char const*, icu_71::ByteSink*, icu_71::Edits*, UErrorCode&) const
icu_71::Normalizer2Impl::ensureCanonIterData(UErrorCode&) const
icu_71::Normalizer2Impl::findNextCompBoundary(char16_t const*, char16_t const*, signed char) const
icu_71::Normalizer2Impl::findNextFCDBoundary(char16_t const*, char16_t const*) const
icu_71::Normalizer2Impl::findPreviousCompBoundary(char16_t const*, char16_t const*, signed char) const
icu_71::Normalizer2Impl::findPreviousFCDBoundary(char16_t const*, char16_t const*) const
icu_71::Normalizer2Impl::getCanonStartSet(int) const
icu_71::Normalizer2Impl::getCanonStartSet(int, icu_71::UnicodeSet&) const
icu_71::Normalizer2Impl::getCanonValue(int) const
icu_71::Normalizer2Impl::getDecomposition(int, char16_t*, int&) const
icu_71::Normalizer2Impl::getFCD16FromNormData(int) const
icu_71::Normalizer2Impl::getNorm16(int) const
icu_71::Normalizer2Impl::getPreviousTrailCC(char16_t const*, char16_t const*) const
icu_71::Normalizer2Impl::getPreviousTrailCC(unsigned char const*, unsigned char const*) const
icu_71::Normalizer2Impl::getRawDecomposition(int, char16_t*, int&) const
icu_71::Normalizer2Impl::hasCompBoundaryAfter(char16_t const*, char16_t const*, signed char) const
icu_71::Normalizer2Impl::hasCompBoundaryAfter(unsigned char const*, unsigned char const*, signed char) const
icu_71::Normalizer2Impl::hasCompBoundaryBefore(char16_t const*, char16_t const*) const
icu_71::Normalizer2Impl::hasCompBoundaryBefore(unsigned char const*, unsigned char const*) const
icu_71::Normalizer2Impl::hasDecompBoundaryAfter(int) const
icu_71::Normalizer2Impl::hasDecompBoundaryBefore(int) const
icu_71::Normalizer2Impl::init(int const*, UCPTrie const*, unsigned short const*, unsigned char const*)
icu_71::Normalizer2Impl::isCanonSegmentStarter(int) const
icu_71::Normalizer2Impl::makeCanonIterDataFromNorm16(int, int, unsigned short, icu_71::CanonIterData&, UErrorCode&) const
icu_71::Normalizer2Impl::makeFCD(char16_t const*, char16_t const*, icu_71::ReorderingBuffer*, UErrorCode&) const
icu_71::Normalizer2Impl::makeFCDAndAppend(char16_t const*, char16_t const*, signed char, icu_71::UnicodeString&, icu_71::ReorderingBuffer&, UErrorCode&) const
icu_71::Normalizer2Impl::norm16HasDecompBoundaryAfter(unsigned short) const
icu_71::Normalizer2Impl::norm16HasDecompBoundaryBefore(unsigned short) const
icu_71::Normalizer2Impl::recompose(icu_71::ReorderingBuffer&, int, signed char) const
icu_71::Normalizer2Impl::~Normalizer2Impl()
icu_71::Normalizer2WithImpl::append(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::Normalizer2WithImpl::composePair(int, int) const
icu_71::Normalizer2WithImpl::getCombiningClass(int) const
icu_71::Normalizer2WithImpl::getDecomposition(int, icu_71::UnicodeString&) const
icu_71::Normalizer2WithImpl::getQuickCheck(int) const
icu_71::Normalizer2WithImpl::getRawDecomposition(int, icu_71::UnicodeString&) const
icu_71::Normalizer2WithImpl::isNormalized(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::Normalizer2WithImpl::normalize(icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::Normalizer2WithImpl::normalizeSecondAndAppend(icu_71::UnicodeString&, icu_71::UnicodeString const&, UErrorCode&) const
icu_71::Normalizer2WithImpl::normalizeSecondAndAppend(icu_71::UnicodeString&, icu_71::UnicodeString const&, signed char, UErrorCode&) const
icu_71::Normalizer2WithImpl::quickCheck(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::Normalizer2WithImpl::spanQuickCheckYes(icu_71::UnicodeString const&, UErrorCode&) const
icu_71::Normalizer2WithImpl::~Normalizer2WithImpl()
icu_71::Normalizer::Normalizer(icu_71::CharacterIterator const&, UNormalizationMode)
icu_71::Normalizer::Normalizer(icu_71::ConstChar16Ptr, int, UNormalizationMode)
icu_71::Normalizer::Normalizer(icu_71::Normalizer const&)
icu_71::Normalizer::Normalizer(icu_71::UnicodeString const&, UNormalizationMode)
icu_71::Normalizer::clearBuffer()
icu_71::Normalizer::clone() const
icu_71::Normalizer::compose(icu_71::UnicodeString const&, signed char, int, icu_71::UnicodeString&, UErrorCode&)
icu_71::Normalizer::concatenate(icu_71::UnicodeString const&, icu_71::UnicodeString const&, icu_71::UnicodeString&, UNormalizationMode, int, UErrorCode&)
icu_71::Normalizer::current()
icu_71::Normalizer::decompose(icu_71::UnicodeString const&, signed char, int, icu_71::UnicodeString&, UErrorCode&)
icu_71::Normalizer::endIndex() const
icu_71::Normalizer::first()
icu_71::Normalizer::getDynamicClassID() const
icu_71::Normalizer::getIndex() const
icu_71::Normalizer::getOption(int) const
icu_71::Normalizer::getStaticClassID()
icu_71::Normalizer::getStaticClassID()::classID
icu_71::Normalizer::getText(icu_71::UnicodeString&)
icu_71::Normalizer::getUMode() const
icu_71::Normalizer::hashCode() const
icu_71::Normalizer::init()
icu_71::Normalizer::isNormalized(icu_71::UnicodeString const&, UNormalizationMode, int, UErrorCode&)
icu_71::Normalizer::last()
icu_71::Normalizer::next()
icu_71::Normalizer::nextNormalize()
icu_71::Normalizer::normalize(icu_71::UnicodeString const&, UNormalizationMode, int, icu_71::UnicodeString&, UErrorCode&)
icu_71::Normalizer::operator==(icu_71::Normalizer const&) const
icu_71::Normalizer::previous()
icu_71::Normalizer::previousNormalize()
icu_71::Normalizer::quickCheck(icu_71::UnicodeString const&, UNormalizationMode, int, UErrorCode&)
icu_71::Normalizer::reset()
icu_71::Normalizer::setIndexOnly(int)
icu_71::Normalizer::setMode(UNormalizationMode)
icu_71::Normalizer::setOption(int, signed char)
icu_71::Normalizer::setText(icu_71::CharacterIterator const&, UErrorCode&)
icu_71::Normalizer::setText(icu_71::ConstChar16Ptr, int, UErrorCode&)
icu_71::Normalizer::setText(icu_71::UnicodeString const&, UErrorCode&)
icu_71::Normalizer::startIndex() const
icu_71::Normalizer::~Normalizer()
icu_71::ParsePosition::clone() const
icu_71::ParsePosition::getDynamicClassID() const
icu_71::ParsePosition::getStaticClassID()
icu_71::ParsePosition::getStaticClassID()::classID
icu_71::ParsePosition::~ParsePosition()
icu_71::PatternProps::isIdentifier(char16_t const*, int)
icu_71::PatternProps::isSyntax(int)
icu_71::PatternProps::isSyntaxOrWhiteSpace(int)
icu_71::PatternProps::isWhiteSpace(int)
icu_71::PatternProps::skipIdentifier(char16_t const*, int)
icu_71::PatternProps::skipWhiteSpace(char16_t const*, int)
icu_71::PatternProps::skipWhiteSpace(icu_71::UnicodeString const&, int)
icu_71::PatternProps::trimWhiteSpace(char16_t const*, int&)
icu_71::PluralMapBase::getCategoryName(icu_71::PluralMapBase::Category)
icu_71::PluralMapBase::toCategory(char const*)
icu_71::PluralMapBase::toCategory(icu_71::UnicodeString const&)
icu_71::PossibleWord::candidates(UText*, icu_71::DictionaryMatcher*, int)
icu_71::PropNameData::bytesTries
icu_71::PropNameData::getPropertyOrValueEnum(int, char const*)
icu_71::PropNameData::getPropertyValueName(int, int, int)
icu_71::PropNameData::nameGroups
icu_71::PropNameData::valueMaps
icu_71::RBBIDataWrapper::RBBIDataWrapper(UDataMemory*, UErrorCode&)
icu_71::RBBIDataWrapper::RBBIDataWrapper(icu_71::RBBIDataHeader const*, UErrorCode&)
icu_71::RBBIDataWrapper::RBBIDataWrapper(icu_71::RBBIDataHeader const*, icu_71::RBBIDataWrapper::EDontAdopt, UErrorCode&)
icu_71::RBBIDataWrapper::addReference()
icu_71::RBBIDataWrapper::getRuleSourceString() const
icu_71::RBBIDataWrapper::hashCode()
icu_71::RBBIDataWrapper::init(icu_71::RBBIDataHeader const*, UErrorCode&)
icu_71::RBBIDataWrapper::operator==(icu_71::RBBIDataWrapper const&) const
icu_71::RBBIDataWrapper::printData()
icu_71::RBBIDataWrapper::removeReference()
icu_71::RBBINode::RBBINode(icu_71::RBBINode const&)
icu_71::RBBINode::RBBINode(icu_71::RBBINode::NodeType)
icu_71::RBBINode::cloneTree()
icu_71::RBBINode::findNodes(icu_71::UVector*, icu_71::RBBINode::NodeType, UErrorCode&)
icu_71::RBBINode::flattenSets()
icu_71::RBBINode::flattenVariables()
icu_71::RBBINode::~RBBINode()
icu_71::RBBIRuleBuilder::RBBIRuleBuilder(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::RBBIRuleBuilder::build(UErrorCode&)
icu_71::RBBIRuleBuilder::createRuleBasedBreakIterator(icu_71::UnicodeString const&, UParseError*, UErrorCode&)
icu_71::RBBIRuleBuilder::flattenData()
icu_71::RBBIRuleBuilder::optimizeTables()
icu_71::RBBIRuleBuilder::~RBBIRuleBuilder()
icu_71::RBBIRuleScanner::RBBIRuleScanner(icu_71::RBBIRuleBuilder*)
icu_71::RBBIRuleScanner::doParseActions(int)
icu_71::RBBIRuleScanner::error(UErrorCode)
icu_71::RBBIRuleScanner::findSetFor(icu_71::UnicodeString const&, icu_71::RBBINode*, icu_71::UnicodeSet*)
icu_71::RBBIRuleScanner::fixOpStack(icu_71::RBBINode::OpPrecedence)
icu_71::RBBIRuleScanner::nextChar(icu_71::RBBIRuleScanner::RBBIRuleChar&)
icu_71::RBBIRuleScanner::nextCharLL()
icu_71::RBBIRuleScanner::numRules()
icu_71::RBBIRuleScanner::parse()
icu_71::RBBIRuleScanner::pushNewNode(icu_71::RBBINode::NodeType)
icu_71::RBBIRuleScanner::scanSet()
icu_71::RBBIRuleScanner::stripRules(icu_71::UnicodeString const&)
icu_71::RBBIRuleScanner::~RBBIRuleScanner()
icu_71::RBBISetBuilder::RBBISetBuilder(icu_71::RBBIRuleBuilder*)
icu_71::RBBISetBuilder::addValToSets(icu_71::UVector*, unsigned int)
icu_71::RBBISetBuilder::buildRanges()
icu_71::RBBISetBuilder::buildTrie()
icu_71::RBBISetBuilder::getDictCategoriesStart() const
icu_71::RBBISetBuilder::getFirstChar(int) const
icu_71::RBBISetBuilder::getNumCharCategories() const
icu_71::RBBISetBuilder::getTrieSize()
icu_71::RBBISetBuilder::mergeCategories(std::Cr::pair<int, int>)
icu_71::RBBISetBuilder::sawBOF() const
icu_71::RBBISetBuilder::serializeTrie(unsigned char*)
icu_71::RBBISetBuilder::~RBBISetBuilder()
icu_71::RBBIStateDescriptor::RBBIStateDescriptor(int, UErrorCode*)
icu_71::RBBISymbolTable::RBBISymbolTable(icu_71::RBBIRuleScanner*, icu_71::UnicodeString const&, UErrorCode&)
icu_71::RBBISymbolTable::addEntry(icu_71::UnicodeString const&, icu_71::RBBINode*, UErrorCode&)
icu_71::RBBISymbolTable::lookup(icu_71::UnicodeString const&) const
icu_71::RBBISymbolTable::lookupMatcher(int) const
icu_71::RBBISymbolTable::lookupNode(icu_71::UnicodeString const&) const
icu_71::RBBISymbolTable::parseReference(icu_71::UnicodeString const&, icu_71::ParsePosition&, int) const
icu_71::RBBISymbolTable::~RBBISymbolTable()
icu_71::RBBITableBuilder::RBBITableBuilder(icu_71::RBBIRuleBuilder*, icu_71::RBBINode**, UErrorCode&)
icu_71::RBBITableBuilder::addRuleRootNodes(icu_71::UVector*, icu_71::RBBINode*)
icu_71::RBBITableBuilder::buildForwardTable()
icu_71::RBBITableBuilder::buildSafeReverseTable(UErrorCode&)
icu_71::RBBITableBuilder::buildStateTable()
icu_71::RBBITableBuilder::calcChainedFollowPos(icu_71::RBBINode*, icu_71::RBBINode*)
icu_71::RBBITableBuilder::calcFirstPos(icu_71::RBBINode*)
icu_71::RBBITableBuilder::calcFollowPos(icu_71::RBBINode*)
icu_71::RBBITableBuilder::calcLastPos(icu_71::RBBINode*)
icu_71::RBBITableBuilder::calcNullable(icu_71::RBBINode*)
icu_71::RBBITableBuilder::exportSafeTable(void*)
icu_71::RBBITableBuilder::exportTable(void*)
icu_71::RBBITableBuilder::findDuplCharClassFrom(std::Cr::pair<int, int>*)
icu_71::RBBITableBuilder::findDuplicateSafeState(std::Cr::pair<int, int>*)
icu_71::RBBITableBuilder::findDuplicateState(std::Cr::pair<int, int>*)
icu_71::RBBITableBuilder::flagAcceptingStates()
icu_71::RBBITableBuilder::flagLookAheadStates()
icu_71::RBBITableBuilder::flagTaggedStates()
icu_71::RBBITableBuilder::getSafeTableSize() const
icu_71::RBBITableBuilder::getTableSize() const
icu_71::RBBITableBuilder::mapLookAheadRules()
icu_71::RBBITableBuilder::mergeRuleStatusVals()
icu_71::RBBITableBuilder::removeColumn(int)
icu_71::RBBITableBuilder::removeDuplicateStates()
icu_71::RBBITableBuilder::removeSafeState(std::Cr::pair<int, int>)
icu_71::RBBITableBuilder::removeState(std::Cr::pair<int, int>)
icu_71::RBBITableBuilder::setAdd(icu_71::UVector*, icu_71::UVector*)
icu_71::RBBITableBuilder::sortedAdd(icu_71::UVector**, int)
icu_71::RBBITableBuilder::~RBBITableBuilder()
icu_71::RangeDescriptor::RangeDescriptor(icu_71::RangeDescriptor const&, UErrorCode&)
icu_71::ReadArray1D::~ReadArray1D()
icu_71::ReadArray2D::~ReadArray2D()
icu_71::ReorderingBuffer::ReorderingBuffer(icu_71::Normalizer2Impl const&, icu_71::UnicodeString&, UErrorCode&)
icu_71::ReorderingBuffer::append(char16_t const*, int, signed char, unsigned char, unsigned char, UErrorCode&)
icu_71::ReorderingBuffer::appendBMP(char16_t, unsigned char, UErrorCode&)
icu_71::ReorderingBuffer::appendSupplementary(int, unsigned char, UErrorCode&)
icu_71::ReorderingBuffer::appendZeroCC(char16_t const*, char16_t const*, UErrorCode&)
icu_71::ReorderingBuffer::appendZeroCC(int, UErrorCode&)
icu_71::ReorderingBuffer::equals(char16_t const*, char16_t const*) const
icu_71::ReorderingBuffer::equals(unsigned char const*, unsigned char const*) const
icu_71::ReorderingBuffer::init(int, UErrorCode&)
icu_71::ReorderingBuffer::insert(int, unsigned char)
icu_71::ReorderingBuffer::previousCC()
icu_71::ReorderingBuffer::remove()
icu_71::ReorderingBuffer::removeSuffix(int)
icu_71::ReorderingBuffer::resize(int, UErrorCode&)
icu_71::ReorderingBuffer::skipPrevious()
icu_71::Replaceable::clone() const
icu_71::Replaceable::hasMetaData() const
icu_71::Replaceable::~Replaceable()
icu_71::ResourceArray::getValue(int, icu_71::ResourceValue&) const
icu_71::ResourceArray::internalGetResource(ResourceData const*, int) const
icu_71::ResourceBundle::ResourceBundle(UErrorCode&)
icu_71::ResourceBundle::ResourceBundle(UResourceBundle*, UErrorCode&)
icu_71::ResourceBundle::ResourceBundle(char const*, icu_71::Locale const&, UErrorCode&)
icu_71::ResourceBundle::ResourceBundle(icu_71::ResourceBundle const&)
icu_71::ResourceBundle::ResourceBundle(icu_71::UnicodeString const&, UErrorCode&)
icu_71::ResourceBundle::ResourceBundle(icu_71::UnicodeString const&, icu_71::Locale const&, UErrorCode&)
icu_71::ResourceBundle::clone() const
icu_71::ResourceBundle::constructForLocale(icu_71::UnicodeString const&, icu_71::Locale const&, UErrorCode&)
icu_71::ResourceBundle::get(char const*, UErrorCode&) const
icu_71::ResourceBundle::get(int, UErrorCode&) const
icu_71::ResourceBundle::getBinary(int&, UErrorCode&) const
icu_71::ResourceBundle::getDynamicClassID() const
icu_71::ResourceBundle::getInt(UErrorCode&) const
icu_71::ResourceBundle::getIntVector(int&, UErrorCode&) const
icu_71::ResourceBundle::getKey() const
icu_71::ResourceBundle::getLocale() const
icu_71::ResourceBundle::getLocale() const::gLocaleLock
icu_71::ResourceBundle::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_71::ResourceBundle::getName() const
icu_71::ResourceBundle::getNext(UErrorCode&)
icu_71::ResourceBundle::getNextString(UErrorCode&)
icu_71::ResourceBundle::getNextString(char const**, UErrorCode&)
icu_71::ResourceBundle::getSize() const
icu_71::ResourceBundle::getStaticClassID()
icu_71::ResourceBundle::getStaticClassID()::classID
icu_71::ResourceBundle::getString(UErrorCode&) const
icu_71::ResourceBundle::getStringEx(char const*, UErrorCode&) const
icu_71::ResourceBundle::getStringEx(int, UErrorCode&) const
icu_71::ResourceBundle::getType() const
icu_71::ResourceBundle::getUInt(UErrorCode&) const
icu_71::ResourceBundle::getVersion(unsigned char*) const
icu_71::ResourceBundle::getVersionNumber() const
icu_71::ResourceBundle::getWithFallback(char const*, UErrorCode&)
icu_71::ResourceBundle::hasNext() const
icu_71::ResourceBundle::operator=(icu_71::ResourceBundle const&)
icu_71::ResourceBundle::resetIterator()
icu_71::ResourceBundle::~ResourceBundle()
icu_71::ResourceDataValue::getAliasString(int&, UErrorCode&) const
icu_71::ResourceDataValue::getArray(UErrorCode&) const
icu_71::ResourceDataValue::getBinary(int&, UErrorCode&) const
icu_71::ResourceDataValue::getInt(UErrorCode&) const
icu_71::ResourceDataValue::getIntVector(int&, UErrorCode&) const
icu_71::ResourceDataValue::getString(int&, UErrorCode&) const
icu_71::ResourceDataValue::getStringArray(icu_71::UnicodeString*, int, UErrorCode&) const
icu_71::ResourceDataValue::getStringArrayOrStringAsArray(icu_71::UnicodeString*, int, UErrorCode&) const
icu_71::ResourceDataValue::getStringOrFirstOfArray(UErrorCode&) const
icu_71::ResourceDataValue::getTable(UErrorCode&) const
icu_71::ResourceDataValue::getType() const
icu_71::ResourceDataValue::getUInt(UErrorCode&) const
icu_71::ResourceDataValue::isNoInheritanceMarker() const
icu_71::ResourceDataValue::~ResourceDataValue()
icu_71::ResourceSink::~ResourceSink()
icu_71::ResourceTable::findValue(char const*, icu_71::ResourceValue&) const
icu_71::ResourceTable::getKeyAndValue(int, char const*&, icu_71::ResourceValue&) const
icu_71::ResourceTracer::getFilePath(icu_71::CharString&, UErrorCode&) const
icu_71::ResourceTracer::getResPath(icu_71::CharString&, UErrorCode&) const
icu_71::ResourceTracer::trace(char const*) const
icu_71::ResourceTracer::traceOpen() const
icu_71::ResourceTracer::~ResourceTracer()
icu_71::ResourceValue::~ResourceValue()
icu_71::RuleBasedBreakIterator::BreakCache::BreakCache(icu_71::RuleBasedBreakIterator*, UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::addFollowing(int, int, icu_71::RuleBasedBreakIterator::BreakCache::UpdatePositionValues)
icu_71::RuleBasedBreakIterator::BreakCache::addPreceding(int, int, icu_71::RuleBasedBreakIterator::BreakCache::UpdatePositionValues)
icu_71::RuleBasedBreakIterator::BreakCache::current()
icu_71::RuleBasedBreakIterator::BreakCache::dumpCache()
icu_71::RuleBasedBreakIterator::BreakCache::following(int, UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::nextOL()
icu_71::RuleBasedBreakIterator::BreakCache::populateFollowing()
icu_71::RuleBasedBreakIterator::BreakCache::populateNear(int, UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::populatePreceding(UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::preceding(int, UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::previous(UErrorCode&)
icu_71::RuleBasedBreakIterator::BreakCache::reset(int, int)
icu_71::RuleBasedBreakIterator::BreakCache::seek(int)
icu_71::RuleBasedBreakIterator::BreakCache::~BreakCache()
icu_71::RuleBasedBreakIterator::DictionaryCache::DictionaryCache(icu_71::RuleBasedBreakIterator*, UErrorCode&)
icu_71::RuleBasedBreakIterator::DictionaryCache::following(int, int*, int*)
icu_71::RuleBasedBreakIterator::DictionaryCache::populateDictionary(int, int, int, int)
icu_71::RuleBasedBreakIterator::DictionaryCache::preceding(int, int*, int*)
icu_71::RuleBasedBreakIterator::DictionaryCache::reset()
icu_71::RuleBasedBreakIterator::DictionaryCache::~DictionaryCache()
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator()
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, UErrorCode&)
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, signed char, UErrorCode&)
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_71::RBBIDataHeader*, UErrorCode&)
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_71::RuleBasedBreakIterator const&)
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_71::UnicodeString const&, UParseError&, UErrorCode&)
icu_71::RuleBasedBreakIterator::RuleBasedBreakIterator(unsigned char const*, unsigned int, UErrorCode&)
icu_71::RuleBasedBreakIterator::adoptText(icu_71::CharacterIterator*)
icu_71::RuleBasedBreakIterator::clone() const
icu_71::RuleBasedBreakIterator::createBufferClone(void*, int&, UErrorCode&)
icu_71::RuleBasedBreakIterator::current() const
icu_71::RuleBasedBreakIterator::dumpCache()
icu_71::RuleBasedBreakIterator::dumpTables()
icu_71::RuleBasedBreakIterator::first()
icu_71::RuleBasedBreakIterator::following(int)
icu_71::RuleBasedBreakIterator::getBinaryRules(unsigned int&)
icu_71::RuleBasedBreakIterator::getDynamicClassID() const
icu_71::RuleBasedBreakIterator::getLanguageBreakEngine(int)
icu_71::RuleBasedBreakIterator::getRuleStatus() const
icu_71::RuleBasedBreakIterator::getRuleStatusVec(int*, int, UErrorCode&)
icu_71::RuleBasedBreakIterator::getRules() const
icu_71::RuleBasedBreakIterator::getStaticClassID()
icu_71::RuleBasedBreakIterator::getStaticClassID()::classID
icu_71::RuleBasedBreakIterator::getText() const
icu_71::RuleBasedBreakIterator::getUText(UText*, UErrorCode&) const
icu_71::RuleBasedBreakIterator::handleNext()
icu_71::RuleBasedBreakIterator::handleSafePrevious(int)
icu_71::RuleBasedBreakIterator::hashCode() const
icu_71::RuleBasedBreakIterator::init(UErrorCode&)
icu_71::RuleBasedBreakIterator::init(UErrorCode&)::initializedUText
icu_71::RuleBasedBreakIterator::isBoundary(int)
icu_71::RuleBasedBreakIterator::last()
icu_71::RuleBasedBreakIterator::next()
icu_71::RuleBasedBreakIterator::next(int)
icu_71::RuleBasedBreakIterator::operator=(icu_71::RuleBasedBreakIterator const&)
icu_71::RuleBasedBreakIterator::operator==(icu_71::BreakIterator const&) const
icu_71::RuleBasedBreakIterator::preceding(int)
icu_71::RuleBasedBreakIterator::previous()
icu_71::RuleBasedBreakIterator::refreshInputText(UText*, UErrorCode&)
icu_71::RuleBasedBreakIterator::setText(UText*, UErrorCode&)
icu_71::RuleBasedBreakIterator::setText(icu_71::UnicodeString const&)
icu_71::RuleBasedBreakIterator::~RuleBasedBreakIterator()
icu_71::RuleCharacterIterator::RuleCharacterIterator(icu_71::UnicodeString const&, icu_71::SymbolTable const*, icu_71::ParsePosition&)
icu_71::RuleCharacterIterator::atEnd() const
icu_71::RuleCharacterIterator::getPos(icu_71::RuleCharacterIterator::Pos&) const
icu_71::RuleCharacterIterator::jumpahead(int)
icu_71::RuleCharacterIterator::lookahead(icu_71::UnicodeString&, int) const
icu_71::RuleCharacterIterator::next(int, signed char&, UErrorCode&)
icu_71::RuleCharacterIterator::setPos(icu_71::RuleCharacterIterator::Pos const&)
icu_71::RuleCharacterIterator::skipIgnored(int)
icu_71::ServiceEnumeration::ServiceEnumeration(icu_71::ServiceEnumeration const&, UErrorCode&)
icu_71::ServiceEnumeration::clone() const
icu_71::ServiceEnumeration::count(UErrorCode&) const
icu_71::ServiceEnumeration::create(icu_71::ICULocaleService const*)
icu_71::ServiceEnumeration::getDynamicClassID() const
icu_71::ServiceEnumeration::getStaticClassID()::classID
icu_71::ServiceEnumeration::reset(UErrorCode&)
icu_71::ServiceEnumeration::snext(UErrorCode&)
icu_71::ServiceEnumeration::~ServiceEnumeration()
icu_71::ServiceListener::getDynamicClassID() const
icu_71::ServiceListener::getStaticClassID()
icu_71::ServiceListener::getStaticClassID()::classID
icu_71::ServiceListener::~ServiceListener()
icu_71::SharedObject::addRef() const
icu_71::SharedObject::deleteIfZeroRefCount() const
icu_71::SharedObject::getRefCount() const
icu_71::SharedObject::removeRef() const
icu_71::SharedObject::~SharedObject()
icu_71::SimpleFactory::SimpleFactory(icu_71::UObject*, icu_71::UnicodeString const&, signed char)
icu_71::SimpleFactory::create(icu_71::ICUServiceKey const&, icu_71::ICUService const*, UErrorCode&) const
icu_71::SimpleFactory::getDisplayName(icu_71::UnicodeString const&, icu_71::Locale const&, icu_71::UnicodeString&) const
icu_71::SimpleFactory::getDynamicClassID() const
icu_71::SimpleFactory::getStaticClassID()
icu_71::SimpleFactory::getStaticClassID()::classID
icu_71::SimpleFactory::updateVisibleIDs(icu_71::Hashtable&, UErrorCode&) const
icu_71::SimpleFactory::~SimpleFactory()
icu_71::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(UErrorCode&)
icu_71::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(icu_71::Locale const&, UErrorCode&)
icu_71::SimpleFilteredBreakIteratorBuilder::build(icu_71::BreakIterator*, UErrorCode&)
icu_71::SimpleFilteredBreakIteratorBuilder::suppressBreakAfter(icu_71::UnicodeString const&, UErrorCode&)
icu_71::SimpleFilteredBreakIteratorBuilder::unsuppressBreakAfter(icu_71::UnicodeString const&, UErrorCode&)
icu_71::SimpleFilteredBreakIteratorBuilder::~SimpleFilteredBreakIteratorBuilder()
icu_71::SimpleFilteredSentenceBreakData::~SimpleFilteredSentenceBreakData()
icu_71::SimpleFilteredSentenceBreakIterator::SimpleFilteredSentenceBreakIterator(icu_71::BreakIterator*, icu_71::UCharsTrie*, icu_71::UCharsTrie*, UErrorCode&)
icu_71::SimpleFilteredSentenceBreakIterator::adoptText(icu_71::CharacterIterator*)
icu_71::SimpleFilteredSentenceBreakIterator::breakExceptionAt(int)
icu_71::SimpleFilteredSentenceBreakIterator::clone() const
icu_71::SimpleFilteredSentenceBreakIterator::createBufferClone(void*, int&, UErrorCode&)
icu_71::SimpleFilteredSentenceBreakIterator::current() const
icu_71::SimpleFilteredSentenceBreakIterator::first()
icu_71::SimpleFilteredSentenceBreakIterator::following(int)
icu_71::SimpleFilteredSentenceBreakIterator::getDynamicClassID() const
icu_71::SimpleFilteredSentenceBreakIterator::getText() const
icu_71::SimpleFilteredSentenceBreakIterator::getUText(UText*, UErrorCode&) const
icu_71::SimpleFilteredSentenceBreakIterator::internalNext(int)
icu_71::SimpleFilteredSentenceBreakIterator::isBoundary(int)
icu_71::SimpleFilteredSentenceBreakIterator::last()
icu_71::SimpleFilteredSentenceBreakIterator::next()
icu_71::SimpleFilteredSentenceBreakIterator::next(int)
icu_71::SimpleFilteredSentenceBreakIterator::operator==(icu_71::BreakIterator const&) const
icu_71::SimpleFilteredSentenceBreakIterator::preceding(int)
icu_71::SimpleFilteredSentenceBreakIterator::previous()
icu_71::SimpleFilteredSentenceBreakIterator::refreshInputText(UText*, UErrorCode&)
icu_71::SimpleFilteredSentenceBreakIterator::setText(UText*, UErrorCode&)
icu_71::SimpleFilteredSentenceBreakIterator::setText(icu_71::UnicodeString const&)
icu_71::SimpleFilteredSentenceBreakIterator::~SimpleFilteredSentenceBreakIterator()
icu_71::SimpleFormatter::applyPatternMinMaxArguments(icu_71::UnicodeString const&, int, int, UErrorCode&)
icu_71::SimpleFormatter::format(char16_t const*, int, icu_71::UnicodeString const* const*, icu_71::UnicodeString&, icu_71::UnicodeString const*, signed char, int*, int, UErrorCode&)
icu_71::SimpleFormatter::format(icu_71::UnicodeString const&, icu_71::UnicodeString const&, icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::SimpleFormatter::format(icu_71::UnicodeString const&, icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::SimpleFormatter::format(icu_71::UnicodeString const&, icu_71::UnicodeString&, UErrorCode&) const
icu_71::SimpleFormatter::formatAndAppend(icu_71::UnicodeString const* const*, int, icu_71::UnicodeString&, int*, int, UErrorCode&) const
icu_71::SimpleFormatter::formatAndReplace(icu_71::UnicodeString const* const*, int, icu_71::UnicodeString&, int*, int, UErrorCode&) const
icu_71::SimpleFormatter::getTextWithNoArguments(char16_t const*, int, int*, int)
icu_71::SimpleFormatter::operator=(icu_71::SimpleFormatter const&)
icu_71::SimpleFormatter::~SimpleFormatter()
icu_71::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_71::UObject*, icu_71::Locale const&, int, int)
icu_71::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_71::UObject*, icu_71::UnicodeString const&, int, int)
icu_71::SimpleLocaleKeyFactory::create(icu_71::ICUServiceKey const&, icu_71::ICUService const*, UErrorCode&) const
icu_71::SimpleLocaleKeyFactory::getDynamicClassID() const
icu_71::SimpleLocaleKeyFactory::getStaticClassID()
icu_71::SimpleLocaleKeyFactory::getStaticClassID()::classID
icu_71::SimpleLocaleKeyFactory::updateVisibleIDs(icu_71::Hashtable&, UErrorCode&) const
icu_71::SimpleLocaleKeyFactory::~SimpleLocaleKeyFactory()
icu_71::StackUResourceBundle::StackUResourceBundle()
icu_71::StackUResourceBundle::~StackUResourceBundle()
icu_71::StringCharacterIterator::StringCharacterIterator()
icu_71::StringCharacterIterator::StringCharacterIterator(icu_71::StringCharacterIterator const&)
icu_71::StringCharacterIterator::StringCharacterIterator(icu_71::UnicodeString const&)
icu_71::StringCharacterIterator::StringCharacterIterator(icu_71::UnicodeString const&, int)
icu_71::StringCharacterIterator::StringCharacterIterator(icu_71::UnicodeString const&, int, int, int)
icu_71::StringCharacterIterator::clone() const
icu_71::StringCharacterIterator::getDynamicClassID() const
icu_71::StringCharacterIterator::getStaticClassID()
icu_71::StringCharacterIterator::getStaticClassID()::classID
icu_71::StringCharacterIterator::getText(icu_71::UnicodeString&)
icu_71::StringCharacterIterator::operator=(icu_71::StringCharacterIterator const&)
icu_71::StringCharacterIterator::operator==(icu_71::ForwardCharacterIterator const&) const
icu_71::StringCharacterIterator::setText(icu_71::UnicodeString const&)
icu_71::StringCharacterIterator::~StringCharacterIterator()
icu_71::StringEnumeration::StringEnumeration()
icu_71::StringEnumeration::clone() const
icu_71::StringEnumeration::ensureCharsCapacity(int, UErrorCode&)
icu_71::StringEnumeration::next(int*, UErrorCode&)
icu_71::StringEnumeration::operator!=(icu_71::StringEnumeration const&) const
icu_71::StringEnumeration::operator==(icu_71::StringEnumeration const&) const
icu_71::StringEnumeration::setChars(char const*, int, UErrorCode&)
icu_71::StringEnumeration::snext(UErrorCode&)
icu_71::StringEnumeration::unext(int*, UErrorCode&)
icu_71::StringEnumeration::~StringEnumeration()
icu_71::StringPair::StringPair(icu_71::UnicodeString const&, icu_71::UnicodeString const&)
icu_71::StringPair::create(icu_71::UnicodeString const&, icu_71::UnicodeString const&, UErrorCode&)
icu_71::StringPair::isBogus() const
icu_71::StringPiece::StringPiece(char const*)
icu_71::StringPiece::StringPiece(icu_71::StringPiece const&, int)
icu_71::StringPiece::StringPiece(icu_71::StringPiece const&, int, int)
icu_71::StringPiece::compare(icu_71::StringPiece)
icu_71::StringPiece::find(icu_71::StringPiece, int)
icu_71::StringPiece::npos
icu_71::StringPiece::set(char const*)
icu_71::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::BranchHeadNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::BranchHeadNode::write(icu_71::StringTrieBuilder&)
icu_71::StringTrieBuilder::BranchHeadNode::~BranchHeadNode()
icu_71::StringTrieBuilder::FinalValueNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::FinalValueNode::write(icu_71::StringTrieBuilder&)
icu_71::StringTrieBuilder::FinalValueNode::~FinalValueNode()
icu_71::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::IntermediateValueNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::IntermediateValueNode::write(icu_71::StringTrieBuilder&)
icu_71::StringTrieBuilder::IntermediateValueNode::~IntermediateValueNode()
icu_71::StringTrieBuilder::LinearMatchNode::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::LinearMatchNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::LinearMatchNode::~LinearMatchNode()
icu_71::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::ListBranchNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::ListBranchNode::write(icu_71::StringTrieBuilder&)
icu_71::StringTrieBuilder::ListBranchNode::~ListBranchNode()
icu_71::StringTrieBuilder::Node::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::Node::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::Node::~Node()
icu_71::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(int)
icu_71::StringTrieBuilder::SplitBranchNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::SplitBranchNode::write(icu_71::StringTrieBuilder&)
icu_71::StringTrieBuilder::SplitBranchNode::~SplitBranchNode()
icu_71::StringTrieBuilder::StringTrieBuilder()
icu_71::StringTrieBuilder::ValueNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::StringTrieBuilder::ValueNode::~ValueNode()
icu_71::StringTrieBuilder::build(UStringTrieBuildOption, int, UErrorCode&)
icu_71::StringTrieBuilder::createCompactBuilder(int, UErrorCode&)
icu_71::StringTrieBuilder::deleteCompactBuilder()
icu_71::StringTrieBuilder::equalNodes(void const*, void const*)
icu_71::StringTrieBuilder::hashNode(void const*)
icu_71::StringTrieBuilder::makeBranchSubNode(int, int, int, int, UErrorCode&)
icu_71::StringTrieBuilder::makeNode(int, int, int, UErrorCode&)
icu_71::StringTrieBuilder::registerFinalValue(int, UErrorCode&)
icu_71::StringTrieBuilder::registerNode(icu_71::StringTrieBuilder::Node*, UErrorCode&)
icu_71::StringTrieBuilder::writeBranchSubNode(int, int, int, int)
icu_71::StringTrieBuilder::writeNode(int, int, int)
icu_71::StringTrieBuilder::~StringTrieBuilder()
icu_71::SymbolTable::~SymbolTable()
icu_71::ThaiBreakEngine::ThaiBreakEngine(icu_71::DictionaryMatcher*, UErrorCode&)
icu_71::ThaiBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::ThaiBreakEngine::~ThaiBreakEngine()
icu_71::UCharCharacterIterator::UCharCharacterIterator()
icu_71::UCharCharacterIterator::UCharCharacterIterator(icu_71::ConstChar16Ptr, int)
icu_71::UCharCharacterIterator::UCharCharacterIterator(icu_71::ConstChar16Ptr, int, int)
icu_71::UCharCharacterIterator::UCharCharacterIterator(icu_71::ConstChar16Ptr, int, int, int, int)
icu_71::UCharCharacterIterator::UCharCharacterIterator(icu_71::UCharCharacterIterator const&)
icu_71::UCharCharacterIterator::clone() const
icu_71::UCharCharacterIterator::current() const
icu_71::UCharCharacterIterator::current32() const
icu_71::UCharCharacterIterator::first()
icu_71::UCharCharacterIterator::first32()
icu_71::UCharCharacterIterator::first32PostInc()
icu_71::UCharCharacterIterator::firstPostInc()
icu_71::UCharCharacterIterator::getDynamicClassID() const
icu_71::UCharCharacterIterator::getStaticClassID()
icu_71::UCharCharacterIterator::getStaticClassID()::classID
icu_71::UCharCharacterIterator::getText(icu_71::UnicodeString&)
icu_71::UCharCharacterIterator::hasNext()
icu_71::UCharCharacterIterator::hasPrevious()
icu_71::UCharCharacterIterator::hashCode() const
icu_71::UCharCharacterIterator::last()
icu_71::UCharCharacterIterator::last32()
icu_71::UCharCharacterIterator::move(int, icu_71::CharacterIterator::EOrigin)
icu_71::UCharCharacterIterator::move32(int, icu_71::CharacterIterator::EOrigin)
icu_71::UCharCharacterIterator::next()
icu_71::UCharCharacterIterator::next32()
icu_71::UCharCharacterIterator::next32PostInc()
icu_71::UCharCharacterIterator::nextPostInc()
icu_71::UCharCharacterIterator::operator=(icu_71::UCharCharacterIterator const&)
icu_71::UCharCharacterIterator::operator==(icu_71::ForwardCharacterIterator const&) const
icu_71::UCharCharacterIterator::previous()
icu_71::UCharCharacterIterator::previous32()
icu_71::UCharCharacterIterator::setIndex(int)
icu_71::UCharCharacterIterator::setIndex32(int)
icu_71::UCharCharacterIterator::setText(icu_71::ConstChar16Ptr, int)
icu_71::UCharCharacterIterator::~UCharCharacterIterator()
icu_71::UCharsDictionaryMatcher::getType() const
icu_71::UCharsDictionaryMatcher::matches(UText*, int, int, int*, int*, int*, int*) const
icu_71::UCharsDictionaryMatcher::~UCharsDictionaryMatcher()
icu_71::UCharsTrie::Iterator::Iterator(icu_71::ConstChar16Ptr, int, UErrorCode&)
icu_71::UCharsTrie::Iterator::Iterator(icu_71::UCharsTrie const&, int, UErrorCode&)
icu_71::UCharsTrie::Iterator::branchNext(char16_t const*, int, UErrorCode&)
icu_71::UCharsTrie::Iterator::hasNext() const
icu_71::UCharsTrie::Iterator::next(UErrorCode&)
icu_71::UCharsTrie::Iterator::reset()
icu_71::UCharsTrie::Iterator::~Iterator()
icu_71::UCharsTrie::branchNext(char16_t const*, int, int)
icu_71::UCharsTrie::current() const
icu_71::UCharsTrie::findUniqueValue(char16_t const*, signed char, int&)
icu_71::UCharsTrie::findUniqueValueFromBranch(char16_t const*, int, signed char, int&)
icu_71::UCharsTrie::firstForCodePoint(int)
icu_71::UCharsTrie::getNextBranchUChars(char16_t const*, int, icu_71::Appendable&)
icu_71::UCharsTrie::getNextUChars(icu_71::Appendable&) const
icu_71::UCharsTrie::next(icu_71::ConstChar16Ptr, int)
icu_71::UCharsTrie::next(int)
icu_71::UCharsTrie::nextForCodePoint(int)
icu_71::UCharsTrie::nextImpl(char16_t const*, int)
icu_71::UCharsTrie::~UCharsTrie()
icu_71::UCharsTrieBuilder::UCTLinearMatchNode::UCTLinearMatchNode(char16_t const*, int, icu_71::StringTrieBuilder::Node*)
icu_71::UCharsTrieBuilder::UCTLinearMatchNode::operator==(icu_71::StringTrieBuilder::Node const&) const
icu_71::UCharsTrieBuilder::UCTLinearMatchNode::write(icu_71::StringTrieBuilder&)
icu_71::UCharsTrieBuilder::UCTLinearMatchNode::~UCTLinearMatchNode()
icu_71::UCharsTrieBuilder::UCharsTrieBuilder(UErrorCode&)
icu_71::UCharsTrieBuilder::add(icu_71::UnicodeString const&, int, UErrorCode&)
icu_71::UCharsTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)
icu_71::UCharsTrieBuilder::buildUChars(UStringTrieBuildOption, UErrorCode&)
icu_71::UCharsTrieBuilder::buildUnicodeString(UStringTrieBuildOption, icu_71::UnicodeString&, UErrorCode&)
icu_71::UCharsTrieBuilder::countElementUnits(int, int, int) const
icu_71::UCharsTrieBuilder::createLinearMatchNode(int, int, int, icu_71::StringTrieBuilder::Node*) const
icu_71::UCharsTrieBuilder::ensureCapacity(int)
icu_71::UCharsTrieBuilder::getElementStringLength(int) const
icu_71::UCharsTrieBuilder::getElementUnit(int, int) const
icu_71::UCharsTrieBuilder::getElementValue(int) const
icu_71::UCharsTrieBuilder::getLimitOfLinearMatch(int, int, int) const
icu_71::UCharsTrieBuilder::getMaxBranchLinearSubNodeLength() const
icu_71::UCharsTrieBuilder::getMaxLinearMatchLength() const
icu_71::UCharsTrieBuilder::getMinLinearMatch() const
icu_71::UCharsTrieBuilder::indexOfElementWithNextUnit(int, int, char16_t) const
icu_71::UCharsTrieBuilder::matchNodesCanHaveValues() const
icu_71::UCharsTrieBuilder::skipElementsBySomeUnits(int, int, int) const
icu_71::UCharsTrieBuilder::write(char16_t const*, int)
icu_71::UCharsTrieBuilder::write(int)
icu_71::UCharsTrieBuilder::writeDeltaTo(int)
icu_71::UCharsTrieBuilder::writeElementUnits(int, int, int)
icu_71::UCharsTrieBuilder::writeValueAndFinal(int, signed char)
icu_71::UCharsTrieBuilder::writeValueAndType(signed char, int, int)
icu_71::UCharsTrieBuilder::~UCharsTrieBuilder()
icu_71::UCharsTrieElement::compareStringTo(icu_71::UCharsTrieElement const&, icu_71::UnicodeString const&) const
icu_71::UCharsTrieElement::getString(icu_71::UnicodeString const&) const
icu_71::UDataPathIterator::UDataPathIterator(char const*, char const*, char const*, char const*, signed char, UErrorCode*)
icu_71::UDataPathIterator::next(UErrorCode*)
icu_71::UMemory::operator delete(void*)
icu_71::UMemory::operator delete[](void*)
icu_71::UMemory::operator new(unsigned long)
icu_71::UMemory::operator new[](unsigned long)
icu_71::UMutex::cleanup()
icu_71::UMutex::gListHead
icu_71::UMutex::getMutex()
icu_71::UMutex::lock()
icu_71::UObject::getDynamicClassID() const
icu_71::UObject::~UObject()
icu_71::UStack::UStack(UErrorCode&)
icu_71::UStack::UStack(int, UErrorCode&)
icu_71::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)
icu_71::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)
icu_71::UStack::getDynamicClassID() const
icu_71::UStack::getStaticClassID()
icu_71::UStack::getStaticClassID()::classID
icu_71::UStack::pop()
icu_71::UStack::popi()
icu_71::UStack::search(void*) const
icu_71::UStack::~UStack()
icu_71::UStringEnumeration::UStringEnumeration(UEnumeration*)
icu_71::UStringEnumeration::count(UErrorCode&) const
icu_71::UStringEnumeration::fromUEnumeration(UEnumeration*, UErrorCode&)
icu_71::UStringEnumeration::getDynamicClassID() const
icu_71::UStringEnumeration::getStaticClassID()
icu_71::UStringEnumeration::getStaticClassID()::classID
icu_71::UStringEnumeration::next(int*, UErrorCode&)
icu_71::UStringEnumeration::reset(UErrorCode&)
icu_71::UStringEnumeration::snext(UErrorCode&)
icu_71::UStringEnumeration::~UStringEnumeration()
icu_71::UStringSet::~UStringSet()
icu_71::UTS46::checkLabelBiDi(char16_t const*, int, icu_71::IDNAInfo&) const
icu_71::UTS46::checkLabelContextO(char16_t const*, int, icu_71::IDNAInfo&) const
icu_71::UTS46::isLabelOkContextJ(char16_t const*, int) const
icu_71::UTS46::labelToASCII(icu_71::UnicodeString const&, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::labelToASCII_UTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::labelToUnicode(icu_71::UnicodeString const&, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::labelToUnicodeUTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::mapDevChars(icu_71::UnicodeString&, int, int, UErrorCode&) const
icu_71::UTS46::markBadACELabel(icu_71::UnicodeString&, int, int, signed char, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::nameToASCII(icu_71::UnicodeString const&, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::nameToASCII_UTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::nameToUnicode(icu_71::UnicodeString const&, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::nameToUnicodeUTF8(icu_71::StringPiece, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::process(icu_71::UnicodeString const&, signed char, signed char, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::processLabel(icu_71::UnicodeString&, int, int, signed char, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::processUTF8(icu_71::StringPiece, signed char, signed char, icu_71::ByteSink&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::processUnicode(icu_71::UnicodeString const&, int, int, signed char, signed char, icu_71::UnicodeString&, icu_71::IDNAInfo&, UErrorCode&) const
icu_71::UTS46::~UTS46()
icu_71::UVector32::UVector32(UErrorCode&)
icu_71::UVector32::UVector32(int, UErrorCode&)
icu_71::UVector32::_init(int, UErrorCode&)
icu_71::UVector32::addElement(int, UErrorCode&)
icu_71::UVector32::assign(icu_71::UVector32 const&, UErrorCode&)
icu_71::UVector32::containsAll(icu_71::UVector32 const&) const
icu_71::UVector32::containsNone(icu_71::UVector32 const&) const
icu_71::UVector32::equals(icu_71::UVector32 const&) const
icu_71::UVector32::expandCapacity(int, UErrorCode&)
icu_71::UVector32::getDynamicClassID() const
icu_71::UVector32::getStaticClassID()
icu_71::UVector32::getStaticClassID()::classID
icu_71::UVector32::indexOf(int, int) const
icu_71::UVector32::insertElementAt(int, int, UErrorCode&)
icu_71::UVector32::operator==(icu_71::UVector32 const&) const
icu_71::UVector32::removeAll(icu_71::UVector32 const&)
icu_71::UVector32::removeAllElements()
icu_71::UVector32::removeElementAt(int)
icu_71::UVector32::retainAll(icu_71::UVector32 const&)
icu_71::UVector32::setElementAt(int, int)
icu_71::UVector32::setMaxCapacity(int)
icu_71::UVector32::setSize(int)
icu_71::UVector32::sortedInsert(int, UErrorCode&)
icu_71::UVector32::~UVector32()
icu_71::UVector64::UVector64(UErrorCode&)
icu_71::UVector64::UVector64(int, UErrorCode&)
icu_71::UVector64::_init(int, UErrorCode&)
icu_71::UVector64::assign(icu_71::UVector64 const&, UErrorCode&)
icu_71::UVector64::expandCapacity(int, UErrorCode&)
icu_71::UVector64::getDynamicClassID() const
icu_71::UVector64::getStaticClassID()
icu_71::UVector64::getStaticClassID()::classID
icu_71::UVector64::insertElementAt(long, int, UErrorCode&)
icu_71::UVector64::operator==(icu_71::UVector64 const&)
icu_71::UVector64::removeAllElements()
icu_71::UVector64::setElementAt(long, int)
icu_71::UVector64::setMaxCapacity(int)
icu_71::UVector64::setSize(int)
icu_71::UVector64::~UVector64()
icu_71::UVector::UVector(UErrorCode&)
icu_71::UVector::UVector(int, UErrorCode&)
icu_71::UVector::UVector(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)
icu_71::UVector::UVector(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)
icu_71::UVector::addElement(int, UErrorCode&)
icu_71::UVector::addElement(void*, UErrorCode&)
icu_71::UVector::adoptElement(void*, UErrorCode&)
icu_71::UVector::assign(icu_71::UVector const&, void (*)(UElement*, UElement*), UErrorCode&)
icu_71::UVector::containsAll(icu_71::UVector const&) const
icu_71::UVector::containsNone(icu_71::UVector const&) const
icu_71::UVector::elementAt(int) const
icu_71::UVector::elementAti(int) const
icu_71::UVector::ensureCapacity(int, UErrorCode&)
icu_71::UVector::equals(icu_71::UVector const&) const
icu_71::UVector::getDynamicClassID() const
icu_71::UVector::getStaticClassID()
icu_71::UVector::getStaticClassID()::classID
icu_71::UVector::indexOf(UElement, int, signed char) const
icu_71::UVector::indexOf(int, int) const
icu_71::UVector::indexOf(void*, int) const
icu_71::UVector::insertElementAt(int, int, UErrorCode&)
icu_71::UVector::insertElementAt(void*, int, UErrorCode&)
icu_71::UVector::operator==(icu_71::UVector const&) const
icu_71::UVector::orphanElementAt(int)
icu_71::UVector::removeAll(icu_71::UVector const&)
icu_71::UVector::removeAllElements()
icu_71::UVector::removeElement(void*)
icu_71::UVector::removeElementAt(int)
icu_71::UVector::retainAll(icu_71::UVector const&)
icu_71::UVector::setComparer(signed char (*)(UElement, UElement))
icu_71::UVector::setDeleter(void (*)(void*))
icu_71::UVector::setElementAt(int, int)
icu_71::UVector::setElementAt(void*, int)
icu_71::UVector::setSize(int, UErrorCode&)
icu_71::UVector::sort(int (*)(UElement, UElement), UErrorCode&)
icu_71::UVector::sortWithUComparator(int (*)(void const*, void const*, void const*), void const*, UErrorCode&)
icu_71::UVector::sortedInsert(UElement, int (*)(UElement, UElement), UErrorCode&)
icu_71::UVector::sortedInsert(int, int (*)(UElement, UElement), UErrorCode&)
icu_71::UVector::sortedInsert(void*, int (*)(UElement, UElement), UErrorCode&)
icu_71::UVector::sorti(UErrorCode&)
icu_71::UVector::toArray(void**) const
icu_71::UVector::~UVector()
icu_71::UnhandledEngine::UnhandledEngine(UErrorCode&)
icu_71::UnhandledEngine::findBreaks(UText*, int, int, icu_71::UVector32&, signed char, UErrorCode&) const
icu_71::UnhandledEngine::handleCharacter(int)
icu_71::UnhandledEngine::handles(int) const
icu_71::UnhandledEngine::~UnhandledEngine()
icu_71::UnicodeFilter::getStaticClassID()
icu_71::UnicodeFilter::getStaticClassID()::classID
icu_71::UnicodeFilter::matches(icu_71::Replaceable const&, int&, int, signed char)
icu_71::UnicodeFilter::setData(icu_71::TransliterationRuleData const*)
icu_71::UnicodeFilter::toMatcher() const
icu_71::UnicodeFilter::~UnicodeFilter()
icu_71::UnicodeFunctor::getStaticClassID()
icu_71::UnicodeFunctor::getStaticClassID()::classID
icu_71::UnicodeFunctor::toMatcher() const
icu_71::UnicodeFunctor::toReplacer() const
icu_71::UnicodeFunctor::~UnicodeFunctor()
icu_71::UnicodeKeywordEnumeration::UnicodeKeywordEnumeration(char const*, int, int, UErrorCode&)
icu_71::UnicodeKeywordEnumeration::next(int*, UErrorCode&)
icu_71::UnicodeKeywordEnumeration::~UnicodeKeywordEnumeration()
icu_71::UnicodeMatcher::~UnicodeMatcher()
icu_71::UnicodeSet::UnicodeSet()
icu_71::UnicodeSet::UnicodeSet(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::UnicodeSet(icu_71::UnicodeSet const&, signed char)
icu_71::UnicodeSet::UnicodeSet(icu_71::UnicodeString const&, UErrorCode&)
icu_71::UnicodeSet::UnicodeSet(icu_71::UnicodeString const&, icu_71::ParsePosition&, unsigned int, icu_71::SymbolTable const*, UErrorCode&)
icu_71::UnicodeSet::UnicodeSet(icu_71::UnicodeString const&, unsigned int, icu_71::SymbolTable const*, UErrorCode&)
icu_71::UnicodeSet::UnicodeSet(int, int)
icu_71::UnicodeSet::UnicodeSet(unsigned short const*, int, icu_71::UnicodeSet::ESerialization, UErrorCode&)
icu_71::UnicodeSet::_add(icu_71::UnicodeString const&)
icu_71::UnicodeSet::_appendToPat(icu_71::UnicodeString&, icu_71::UnicodeString const&, signed char)
icu_71::UnicodeSet::_appendToPat(icu_71::UnicodeString&, int, int, signed char)
icu_71::UnicodeSet::_appendToPat(icu_71::UnicodeString&, int, signed char)
icu_71::UnicodeSet::_generatePattern(icu_71::UnicodeString&, signed char) const
icu_71::UnicodeSet::_toPattern(icu_71::UnicodeString&, signed char) const
icu_71::UnicodeSet::add(icu_71::UnicodeString const&)
icu_71::UnicodeSet::add(int const*, int, signed char)
icu_71::UnicodeSet::add(int)
icu_71::UnicodeSet::add(int, int)
icu_71::UnicodeSet::addAll(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::addAll(icu_71::UnicodeString const&)
icu_71::UnicodeSet::addMatchSetTo(icu_71::UnicodeSet&) const
icu_71::UnicodeSet::allocateStrings(UErrorCode&)
icu_71::UnicodeSet::applyFilter(signed char (*)(int, void*), void*, icu_71::UnicodeSet const*, UErrorCode&)
icu_71::UnicodeSet::applyIntPropertyValue(UProperty, int, UErrorCode&)
icu_71::UnicodeSet::applyPattern(icu_71::RuleCharacterIterator&, icu_71::SymbolTable const*, icu_71::UnicodeString&, unsigned int, icu_71::UnicodeSet& (icu_71::UnicodeSet::*)(int), int, UErrorCode&)
icu_71::UnicodeSet::applyPattern(icu_71::UnicodeString const&, UErrorCode&)
icu_71::UnicodeSet::applyPattern(icu_71::UnicodeString const&, icu_71::ParsePosition&, unsigned int, icu_71::SymbolTable const*, UErrorCode&)
icu_71::UnicodeSet::applyPattern(icu_71::UnicodeString const&, unsigned int, icu_71::SymbolTable const*, UErrorCode&)
icu_71::UnicodeSet::applyPatternIgnoreSpace(icu_71::UnicodeString const&, icu_71::ParsePosition&, icu_71::SymbolTable const*, UErrorCode&)
icu_71::UnicodeSet::applyPropertyAlias(icu_71::UnicodeString const&, icu_71::UnicodeString const&, UErrorCode&)
icu_71::UnicodeSet::applyPropertyPattern(icu_71::RuleCharacterIterator&, icu_71::UnicodeString&, UErrorCode&)
icu_71::UnicodeSet::applyPropertyPattern(icu_71::UnicodeString const&, icu_71::ParsePosition&, UErrorCode&)
icu_71::UnicodeSet::charAt(int) const
icu_71::UnicodeSet::clear()
icu_71::UnicodeSet::clone() const
icu_71::UnicodeSet::cloneAsThawed() const
icu_71::UnicodeSet::closeOver(int)
icu_71::UnicodeSet::compact()
icu_71::UnicodeSet::complement()
icu_71::UnicodeSet::complement(icu_71::UnicodeString const&)
icu_71::UnicodeSet::complement(int)
icu_71::UnicodeSet::complement(int, int)
icu_71::UnicodeSet::complementAll(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::complementAll(icu_71::UnicodeString const&)
icu_71::UnicodeSet::contains(icu_71::UnicodeString const&) const
icu_71::UnicodeSet::contains(int) const
icu_71::UnicodeSet::contains(int, int) const
icu_71::UnicodeSet::containsAll(icu_71::UnicodeSet const&) const
icu_71::UnicodeSet::containsAll(icu_71::UnicodeString const&) const
icu_71::UnicodeSet::containsNone(icu_71::UnicodeSet const&) const
icu_71::UnicodeSet::containsNone(icu_71::UnicodeString const&) const
icu_71::UnicodeSet::containsNone(int, int) const
icu_71::UnicodeSet::copyFrom(icu_71::UnicodeSet const&, signed char)
icu_71::UnicodeSet::createFrom(icu_71::UnicodeString const&)
icu_71::UnicodeSet::createFromAll(icu_71::UnicodeString const&)
icu_71::UnicodeSet::ensureBufferCapacity(int)
icu_71::UnicodeSet::ensureCapacity(int)
icu_71::UnicodeSet::exclusiveOr(int const*, int, signed char)
icu_71::UnicodeSet::findCodePoint(int) const
icu_71::UnicodeSet::freeze()
icu_71::UnicodeSet::getDynamicClassID() const
icu_71::UnicodeSet::getRangeCount() const
icu_71::UnicodeSet::getRangeEnd(int) const
icu_71::UnicodeSet::getRangeStart(int) const
icu_71::UnicodeSet::getSingleCP(icu_71::UnicodeString const&)
icu_71::UnicodeSet::getStaticClassID()
icu_71::UnicodeSet::getStaticClassID()::classID
icu_71::UnicodeSet::getString(int) const
icu_71::UnicodeSet::hasStrings() const
icu_71::UnicodeSet::hashCode() const
icu_71::UnicodeSet::indexOf(int) const
icu_71::UnicodeSet::isEmpty() const
icu_71::UnicodeSet::matchRest(icu_71::Replaceable const&, int, int, icu_71::UnicodeString const&)
icu_71::UnicodeSet::matches(icu_71::Replaceable const&, int&, int, signed char)
icu_71::UnicodeSet::matchesIndexValue(unsigned char) const
icu_71::UnicodeSet::nextCapacity(int)
icu_71::UnicodeSet::operator=(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::operator==(icu_71::UnicodeSet const&) const
icu_71::UnicodeSet::releasePattern()
icu_71::UnicodeSet::remove(icu_71::UnicodeString const&)
icu_71::UnicodeSet::remove(int)
icu_71::UnicodeSet::remove(int, int)
icu_71::UnicodeSet::removeAll(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::removeAll(icu_71::UnicodeString const&)
icu_71::UnicodeSet::removeAllStrings()
icu_71::UnicodeSet::resemblesPattern(icu_71::UnicodeString const&, int)
icu_71::UnicodeSet::resemblesPropertyPattern(icu_71::RuleCharacterIterator&, int)
icu_71::UnicodeSet::resemblesPropertyPattern(icu_71::UnicodeString const&, int)
icu_71::UnicodeSet::retain(icu_71::UnicodeString const&)
icu_71::UnicodeSet::retain(int const*, int, signed char)
icu_71::UnicodeSet::retain(int)
icu_71::UnicodeSet::retain(int, int)
icu_71::UnicodeSet::retainAll(icu_71::UnicodeSet const&)
icu_71::UnicodeSet::retainAll(icu_71::UnicodeString const&)
icu_71::UnicodeSet::serialize(unsigned short*, int, UErrorCode&) const
icu_71::UnicodeSet::set(int, int)
icu_71::UnicodeSet::setPattern(char16_t const*, int)
icu_71::UnicodeSet::setToBogus()
icu_71::UnicodeSet::size() const
icu_71::UnicodeSet::span(char16_t const*, int, USetSpanCondition) const
icu_71::UnicodeSet::spanBack(char16_t const*, int, USetSpanCondition) const
icu_71::UnicodeSet::spanBackUTF8(char const*, int, USetSpanCondition) const
icu_71::UnicodeSet::spanUTF8(char const*, int, USetSpanCondition) const
icu_71::UnicodeSet::stringsContains(icu_71::UnicodeString const&) const
icu_71::UnicodeSet::stringsSize() const
icu_71::UnicodeSet::swapBuffers()
icu_71::UnicodeSet::toPattern(icu_71::UnicodeString&, signed char) const
icu_71::UnicodeSet::~UnicodeSet()
icu_71::UnicodeSetIterator::UnicodeSetIterator()
icu_71::UnicodeSetIterator::UnicodeSetIterator(icu_71::UnicodeSet const&)
icu_71::UnicodeSetIterator::getDynamicClassID() const
icu_71::UnicodeSetIterator::getStaticClassID()
icu_71::UnicodeSetIterator::getStaticClassID()::classID
icu_71::UnicodeSetIterator::getString()
icu_71::UnicodeSetIterator::loadRange(int)
icu_71::UnicodeSetIterator::next()
icu_71::UnicodeSetIterator::nextRange()
icu_71::UnicodeSetIterator::reset()
icu_71::UnicodeSetIterator::reset(icu_71::UnicodeSet const&)
icu_71::UnicodeSetIterator::~UnicodeSetIterator()
icu_71::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_71::UnicodeSet const&, icu_71::UVector const&, unsigned int)
icu_71::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_71::UnicodeSetStringSpan const&, icu_71::UVector const&)
icu_71::UnicodeSetStringSpan::span(char16_t const*, int, USetSpanCondition) const
icu_71::UnicodeSetStringSpan::spanBack(char16_t const*, int, USetSpanCondition) const
icu_71::UnicodeSetStringSpan::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const
icu_71::UnicodeSetStringSpan::spanNot(char16_t const*, int) const
icu_71::UnicodeSetStringSpan::spanNotBack(char16_t const*, int) const
icu_71::UnicodeSetStringSpan::spanNotBackUTF8(unsigned char const*, int) const
icu_71::UnicodeSetStringSpan::spanNotUTF8(unsigned char const*, int) const
icu_71::UnicodeSetStringSpan::spanUTF8(unsigned char const*, int, USetSpanCondition) const
icu_71::UnicodeSetStringSpan::~UnicodeSetStringSpan()
icu_71::UnicodeString::UnicodeString(char const*)
icu_71::UnicodeString::UnicodeString(char const*, char const*)
icu_71::UnicodeString::UnicodeString(char const*, int)
icu_71::UnicodeString::UnicodeString(char const*, int, UConverter*, UErrorCode&)
icu_71::UnicodeString::UnicodeString(char const*, int, char const*)
icu_71::UnicodeString::UnicodeString(char const*, int, icu_71::UnicodeString::EInvariant)
icu_71::UnicodeString::UnicodeString(char16_t const*)
icu_71::UnicodeString::UnicodeString(char16_t const*, int)
icu_71::UnicodeString::UnicodeString(char16_t)
icu_71::UnicodeString::UnicodeString(char16_t*, int, int)
icu_71::UnicodeString::UnicodeString(icu_71::UnicodeString const&)
icu_71::UnicodeString::UnicodeString(icu_71::UnicodeString const&, int)
icu_71::UnicodeString::UnicodeString(icu_71::UnicodeString const&, int, int)
icu_71::UnicodeString::UnicodeString(icu_71::UnicodeString&&)
icu_71::UnicodeString::UnicodeString(int)
icu_71::UnicodeString::UnicodeString(int, int, int)
icu_71::UnicodeString::UnicodeString(signed char, icu_71::ConstChar16Ptr, int)
icu_71::UnicodeString::addRef()
icu_71::UnicodeString::allocate(int)
icu_71::UnicodeString::append(int)
icu_71::UnicodeString::caseMap(int, unsigned int, icu_71::BreakIterator*, int (*)(int, unsigned int, icu_71::BreakIterator*, char16_t*, int, char16_t const*, int, icu_71::Edits*, UErrorCode&))
icu_71::UnicodeString::char32At(int) const
icu_71::UnicodeString::clone() const
icu_71::UnicodeString::cloneArrayIfNeeded(int, int, signed char, int**, signed char)
icu_71::UnicodeString::compare(icu_71::ConstChar16Ptr, int) const
icu_71::UnicodeString::copy(int, int, int)
icu_71::UnicodeString::copyFieldsFrom(icu_71::UnicodeString&, signed char)
icu_71::UnicodeString::copyFrom(icu_71::UnicodeString const&, signed char)
icu_71::UnicodeString::countChar32(int, int) const
icu_71::UnicodeString::doAppend(char16_t const*, int, int)
icu_71::UnicodeString::doAppend(icu_71::UnicodeString const&, int, int)
icu_71::UnicodeString::doCaseCompare(int, int, char16_t const*, int, int, unsigned int) const
icu_71::UnicodeString::doCodepageCreate(char const*, int, UConverter*, UErrorCode&)
icu_71::UnicodeString::doCodepageCreate(char const*, int, char const*)
icu_71::UnicodeString::doCompare(int, int, char16_t const*, int, int) const
icu_71::UnicodeString::doCompareCodePointOrder(int, int, char16_t const*, int, int) const
icu_71::UnicodeString::doEquals(icu_71::UnicodeString const&, int) const
icu_71::UnicodeString::doExtract(int, int, char*, int, UConverter*, UErrorCode&) const
icu_71::UnicodeString::doExtract(int, int, char16_t*, int) const
icu_71::UnicodeString::doHashCode() const
icu_71::UnicodeString::doIndexOf(char16_t, int, int) const
icu_71::UnicodeString::doIndexOf(int, int, int) const
icu_71::UnicodeString::doLastIndexOf(char16_t, int, int) const
icu_71::UnicodeString::doLastIndexOf(int, int, int) const
icu_71::UnicodeString::doReplace(int, int, char16_t const*, int, int)
icu_71::UnicodeString::doReplace(int, int, icu_71::UnicodeString const&, int, int)
icu_71::UnicodeString::doReverse(int, int)
icu_71::UnicodeString::extract(char*, int, UConverter*, UErrorCode&) const
icu_71::UnicodeString::extract(icu_71::Char16Ptr, int, UErrorCode&) const
icu_71::UnicodeString::extract(int, int, char*, int, icu_71::UnicodeString::EInvariant) const
icu_71::UnicodeString::extract(int, int, char*, unsigned int) const
icu_71::UnicodeString::extract(int, int, char*, unsigned int, char const*) const
icu_71::UnicodeString::extractBetween(int, int, icu_71::UnicodeString&) const
icu_71::UnicodeString::fastCopyFrom(icu_71::UnicodeString const&)
icu_71::UnicodeString::findAndReplace(int, int, icu_71::UnicodeString const&, int, int, icu_71::UnicodeString const&, int, int)
icu_71::UnicodeString::foldCase(unsigned int)
icu_71::UnicodeString::fromUTF32(int const*, int)
icu_71::UnicodeString::fromUTF8(icu_71::StringPiece)
icu_71::UnicodeString::getBuffer(int)
icu_71::UnicodeString::getChar32At(int) const
icu_71::UnicodeString::getChar32Limit(int) const
icu_71::UnicodeString::getChar32Start(int) const
icu_71::UnicodeString::getCharAt(int) const
icu_71::UnicodeString::getDynamicClassID() const
icu_71::UnicodeString::getLength() const
icu_71::UnicodeString::getStaticClassID()
icu_71::UnicodeString::getStaticClassID()::classID
icu_71::UnicodeString::getTerminatedBuffer()
icu_71::UnicodeString::handleReplaceBetween(int, int, icu_71::UnicodeString const&)
icu_71::UnicodeString::hasMetaData() const
icu_71::UnicodeString::hasMoreChar32Than(int, int, int) const
icu_71::UnicodeString::indexOf(char16_t const*, int, int, int, int) const
icu_71::UnicodeString::lastIndexOf(char16_t const*, int, int, int, int) const
icu_71::UnicodeString::moveIndex32(int, int) const
icu_71::UnicodeString::operator!=(icu_71::UnicodeString const&) const
icu_71::UnicodeString::operator=(icu_71::UnicodeString const&)
icu_71::UnicodeString::operator=(icu_71::UnicodeString&&)
icu_71::UnicodeString::operator==(icu_71::UnicodeString const&) const
icu_71::UnicodeString::padLeading(int, char16_t)
icu_71::UnicodeString::padTrailing(int, char16_t)
icu_71::UnicodeString::refCount() const
icu_71::UnicodeString::releaseArray()
icu_71::UnicodeString::releaseBuffer(int)
icu_71::UnicodeString::removeRef()
icu_71::UnicodeString::replace(int, int, int)
icu_71::UnicodeString::setCharAt(int, char16_t)
icu_71::UnicodeString::setTo(char16_t*, int, int)
icu_71::UnicodeString::setTo(int)
icu_71::UnicodeString::setTo(signed char, icu_71::ConstChar16Ptr, int)
icu_71::UnicodeString::setToBogus()
icu_71::UnicodeString::setToUTF8(icu_71::StringPiece)
icu_71::UnicodeString::swap(icu_71::UnicodeString&)
icu_71::UnicodeString::tempSubString(int, int) const
icu_71::UnicodeString::toLower()
icu_71::UnicodeString::toLower(icu_71::Locale const&)
icu_71::UnicodeString::toTitle(icu_71::BreakIterator*)
icu_71::UnicodeString::toTitle(icu_71::BreakIterator*, icu_71::Locale const&)
icu_71::UnicodeString::toTitle(icu_71::BreakIterator*, icu_71::Locale const&, unsigned int)
icu_71::UnicodeString::toUTF32(int*, int, UErrorCode&) const
icu_71::UnicodeString::toUTF8(icu_71::ByteSink&) const
icu_71::UnicodeString::toUTF8(int, int, char*, int) const
icu_71::UnicodeString::toUpper()
icu_71::UnicodeString::toUpper(icu_71::Locale const&)
icu_71::UnicodeString::trim()
icu_71::UnicodeString::truncate(int)
icu_71::UnicodeString::unBogus()
icu_71::UnicodeString::unescape() const
icu_71::UnicodeString::unescapeAt(int&) const
icu_71::UnicodeString::~UnicodeString()
icu_71::UnicodeStringAppendable::appendCodePoint(int)
icu_71::UnicodeStringAppendable::appendCodeUnit(char16_t)
icu_71::UnicodeStringAppendable::appendString(char16_t const*, int)
icu_71::UnicodeStringAppendable::getAppendBuffer(int, int, char16_t*, int, int*)
icu_71::UnicodeStringAppendable::reserveAppendCapacity(int)
icu_71::UnicodeStringAppendable::~UnicodeStringAppendable()
icu_71::UnifiedCache::UnifiedCache(UErrorCode&)
icu_71::UnifiedCache::_computeCountOfItemsToEvict() const
icu_71::UnifiedCache::_fetch(UHashElement const*, icu_71::SharedObject const*&, UErrorCode&) const
icu_71::UnifiedCache::_flush(signed char) const
icu_71::UnifiedCache::_get(icu_71::CacheKeyBase const&, icu_71::SharedObject const*&, void const*, UErrorCode&) const
icu_71::UnifiedCache::_inProgress(UHashElement const*) const
icu_71::UnifiedCache::_inProgress(icu_71::SharedObject const*, UErrorCode) const
icu_71::UnifiedCache::_isEvictable(UHashElement const*) const
icu_71::UnifiedCache::_nextElement() const
icu_71::UnifiedCache::_poll(icu_71::CacheKeyBase const&, icu_71::SharedObject const*&, UErrorCode&) const
icu_71::UnifiedCache::_put(UHashElement const*, icu_71::SharedObject const*, UErrorCode) const
icu_71::UnifiedCache::_putIfAbsentAndGet(icu_71::CacheKeyBase const&, icu_71::SharedObject const*&, UErrorCode&) const
icu_71::UnifiedCache::_putNew(icu_71::CacheKeyBase const&, icu_71::SharedObject const*, UErrorCode, UErrorCode&) const
icu_71::UnifiedCache::_registerPrimary(icu_71::CacheKeyBase const*, icu_71::SharedObject const*) const
icu_71::UnifiedCache::_runEvictionSlice() const
icu_71::UnifiedCache::addHardRef(icu_71::SharedObject const*) const
icu_71::UnifiedCache::autoEvictedCount() const
icu_71::UnifiedCache::flush() const
icu_71::UnifiedCache::getInstance(UErrorCode&)
icu_71::UnifiedCache::handleUnreferencedObject() const
icu_71::UnifiedCache::keyCount() const
icu_71::UnifiedCache::removeHardRef(icu_71::SharedObject const*) const
icu_71::UnifiedCache::removeSoftRef(icu_71::SharedObject const*) const
icu_71::UnifiedCache::setEvictionPolicy(int, int, UErrorCode&)
icu_71::UnifiedCache::unusedCount() const
icu_71::UnifiedCache::~UnifiedCache()
icu_71::UnifiedCacheBase::~UnifiedCacheBase()
icu_71::UniqueCharStrings::add(icu_71::UnicodeString const&, UErrorCode&)
icu_71::Vectorizer::stringToIndex(char16_t const*) const
icu_71::Vectorizer::~Vectorizer()
icu_71::WholeStringBreakIterator::adoptText(icu_71::CharacterIterator*)
icu_71::WholeStringBreakIterator::clone() const
icu_71::WholeStringBreakIterator::createBufferClone(void*, int&, UErrorCode&)
icu_71::WholeStringBreakIterator::current() const
icu_71::WholeStringBreakIterator::first()
icu_71::WholeStringBreakIterator::following(int)
icu_71::WholeStringBreakIterator::getDynamicClassID() const
icu_71::WholeStringBreakIterator::getStaticClassID()::classID
icu_71::WholeStringBreakIterator::getText() const
icu_71::WholeStringBreakIterator::getUText(UText*, UErrorCode&) const
icu_71::WholeStringBreakIterator::isBoundary(int)
icu_71::WholeStringBreakIterator::last()
icu_71::WholeStringBreakIterator::next()
icu_71::WholeStringBreakIterator::next(int)
icu_71::WholeStringBreakIterator::operator==(icu_71::BreakIterator const&) const
icu_71::WholeStringBreakIterator::preceding(int)
icu_71::WholeStringBreakIterator::previous()
icu_71::WholeStringBreakIterator::refreshInputText(UText*, UErrorCode&)
icu_71::WholeStringBreakIterator::setText(UText*, UErrorCode&)
icu_71::WholeStringBreakIterator::setText(icu_71::UnicodeString const&)
icu_71::WholeStringBreakIterator::~WholeStringBreakIterator()
icu_71::XLikelySubtags::XLikelySubtags(icu_71::XLikelySubtagsData&)
icu_71::XLikelySubtags::compareLikely(icu_71::LSR const&, icu_71::LSR const&, int) const
icu_71::XLikelySubtags::getLikelyIndex(char const*, char const*) const
icu_71::XLikelySubtags::getSingleton(UErrorCode&)
icu_71::XLikelySubtags::initLikelySubtags(UErrorCode&)
icu_71::XLikelySubtags::makeMaximizedLsr(char const*, char const*, char const*, char const*, UErrorCode&) const
icu_71::XLikelySubtags::makeMaximizedLsrFrom(icu_71::Locale const&, UErrorCode&) const
icu_71::XLikelySubtags::maximize(char const*, char const*, char const*) const
icu_71::XLikelySubtags::~XLikelySubtags()
icu_71::XLikelySubtagsData::load(UErrorCode&)
icu_71::XLikelySubtagsData::readStrings(icu_71::ResourceTable const&, char const*, icu_71::ResourceValue&, icu_71::LocalMemory<int>&, int&, UErrorCode&)
icu_71::XLikelySubtagsData::~XLikelySubtagsData()
icu_71::_copyExtensions(icu_71::Locale const&, icu_71::StringEnumeration*, icu_71::Locale&, bool, UErrorCode&)
icu_71::_setUnicodeExtensions(icu_71::Locale&, icu_71::CharString const&, UErrorCode&)
icu_71::_set_add(USet*, int)
icu_71::_set_addRange(USet*, int, int)
icu_71::_set_addString(USet*, char16_t const*, int)
icu_71::asciiData
icu_71::availableLocaleList
icu_71::availableLocaleListCount
icu_71::cache
icu_71::cacheDeleter(void*)
icu_71::cacheInit(UErrorCode&)::$_0::operator()() const::storage
icu_71::cacheInit(UErrorCode&)::$_1::operator()() const::storage
icu_71::calcNameSetLength(unsigned short const*, unsigned short, unsigned char const*, signed char*, unsigned int*, unsigned char const**, unsigned char const*)
icu_71::calcNameSetsLengths(UErrorCode*)
icu_71::calcNameSetsLengths(UErrorCode*)::extChars
icu_71::charCatNames
icu_71::cloneUnicodeString(UElement*, UElement*)
icu_71::compareElementStrings(void const*, void const*, void const*)
icu_71::compareUnicodeString(UElement, UElement)
icu_71::compute(int, icu_71::ReadArray2D const&, icu_71::ReadArray2D const&, icu_71::ReadArray1D const&, icu_71::ReadArray1D const&, icu_71::Array1D&, icu_71::Array1D&, icu_71::Array1D&)
icu_71::defaultLSTM(UScriptCode, UErrorCode&)
icu_71::deleteNorm2AllModes(void*)
icu_71::enumAlgNames(icu_71::AlgorithmicRange*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)
icu_71::enumGroupNames(icu_71::UCharNames*, unsigned short const*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)
icu_71::enumNames(icu_71::UCharNames*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)
icu_71::expandGroupLengths(unsigned char const*, unsigned short*, unsigned short*)
icu_71::expandName(icu_71::UCharNames*, unsigned char const*, unsigned short, UCharNameChoice, char*, unsigned short)
icu_71::gCharNamesInitOnce
icu_71::gDefaultLocale
icu_71::gDefaultLocaleMutex
icu_71::gDefaultLocalesHashT
icu_71::gICUInitOnce
icu_71::gInitOnceLocale
icu_71::gLocaleCache
icu_71::gLocaleCacheInitOnce
icu_71::gMaxNameLength
icu_71::gNameSet
icu_71::gRuleParseStateTable
icu_71::getAlgName(icu_71::AlgorithmicRange*, unsigned int, UCharNameChoice, char*, unsigned short)
icu_71::getCharCat(int)
icu_71::getExtName(unsigned int, char*, unsigned short)
icu_71::getKatakanaCost(int)::katakanaCost
icu_71::getName(icu_71::UCharNames*, unsigned int, UCharNameChoice, char*, unsigned short)
icu_71::index2000
icu_71::initSingletons(char const*, UErrorCode&)
icu_71::isASCIIOkBiDi(char const*, int)
icu_71::isASCIIOkBiDi(char16_t const*, int)
icu_71::isAcceptable(void*, char const*, char const*, UDataInfo const*)
icu_71::isDataLoaded(UErrorCode*)
icu_71::kAttributeKey
icu_71::kOffsetColon
icu_71::kOther
icu_71::latin1
icu_71::locale_available_init()
icu_71::locale_set_default_internal(char const*, UErrorCode&)
icu_71::lock
icu_71::nfcInitOnce
icu_71::nfcSingleton
icu_71::nfkcInitOnce
icu_71::nfkcSingleton
icu_71::nfkc_cfInitOnce
icu_71::nfkc_cfSingleton
icu_71::noopInitOnce
icu_71::noopSingleton
icu_71::notifyLock
icu_71::operator+(icu_71::UnicodeString const&, icu_71::UnicodeString const&)
icu_71::operator==(icu_71::StringPiece const&, icu_71::StringPiece const&)
icu_71::replaceLabel(icu_71::UnicodeString&, int, int, icu_71::UnicodeString const&, int, UErrorCode&)
icu_71::segmentStarterMapper(void const*, unsigned int)
icu_71::set32x64Bits(unsigned int*, int, int)
icu_71::sortComparator(void const*, void const*, void const*)
icu_71::sortiComparator(void const*, void const*, void const*)
icu_71::spanOneUTF8(icu_71::UnicodeSet const&, unsigned char const*, int)
icu_71::syntax2000
icu_71::syntaxOrWhiteSpace2000
icu_71::uCharNames
icu_71::uCharNamesData
icu_71::uinit_cleanup()
icu_71::umtx_cleanup()
icu_71::umtx_init()
icu_71::umtx_init()::$_0::operator()() const::storage
icu_71::umtx_init()::$_1::operator()() const::storage
icu_71::umtx_initImplPostInit(icu_71::UInitOnce&)
icu_71::umtx_initImplPreInit(icu_71::UInitOnce&)
icu_71::unames_cleanup()
icu_71::unisets::chooseFrom(icu_71::UnicodeString, icu_71::unisets::Key)
icu_71::unisets::chooseFrom(icu_71::UnicodeString, icu_71::unisets::Key, icu_71::unisets::Key)
icu_71::unisets::get(icu_71::unisets::Key)
icu_71::unisets::kCurrencyEntries
icu_71::uprv_loaded_normalizer2_cleanup()
icu_71::uprv_normalizer2_cleanup()
icu_71::userv_deleteStringPair(void*)
icudataver.cpp
icudt71_dat
icudt71l
icudt71l-
icudt71l-brkitr
icudt71l-curr
icudt71l-lang
icudt71l-region
icuplug.cpp
icuver
id_ID
ide+"
ideC
idtha
iedideograph[
iemoji
ient
ieroglyphs
ifiedcanadianabo
ifirohingya
ig_NG
ight
ight'
ight/
ight5
ight;
ightjoining)*
igit
ii_CN
iksuki
ility
iller5
illic2
imel
impAct0
impAct1
impAct2
impAct3
impTabL_DEFAULT
impTabL_GROUP_NUMBERS_WITH_R
impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS
impTabL_INVERSE_NUMBERS_AS_L
impTabL_NUMBERS_SPECIAL
impTabProps
impTabR_DEFAULT
impTabR_GROUP_NUMBERS_WITH_R
impTabR_INVERSE_LIKE_DIRECT
impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS
impTabR_INVERSE_NUMBERS_AS_L
impTab_DEFAULT
impTab_GROUP_NUMBERS_WITH_R
impTab_INVERSE_FOR_NUMBERS_SPECIAL
impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
impTab_INVERSE_LIKE_DIRECT
impTab_INVERSE_LIKE_DIRECT_WITH_MARKS
impTab_INVERSE_NUMBERS_AS_L
impTab_NUMBERS_SPECIAL
inagari
inagh
inal/
inalpunctuationY
inaryoperatorE>
inaryoperatorG
indicnumberforms
inese
ingentbreak/
inhau
ining
iningmark3ajb/jkl0
init
init()
init_entry(char const*, char const*, UErrorCode*)
initial punctuation
ink9
innaya
insertRootBundle(UResourceDataEntry*&, UErrorCode*)
intProps
intvector
invariantChars
inyeh
io_compareRows(void const*, void const*, void const*)
iptioncharacters
irror
isAcceptable(void*, char const*, char const*, UDataInfo const*)
isBidiControl(BinaryProperty const&, int, UProperty)
isCanonSegmentStarter(BinaryProperty const&, int, UProperty)
isCnvAcceptable(void*, char const*, char const*, UDataInfo const*)
isFollowedByCasedLetter(int (*)(void*, signed char), void*, signed char)
isJoinControl(BinaryProperty const&, int, UProperty)
isMirrored(BinaryProperty const&, int, UProperty)
isNormInert(BinaryProperty const&, int, UProperty)
isPOSIX_alnum(BinaryProperty const&, int, UProperty)
isPOSIX_blank(BinaryProperty const&, int, UProperty)
isPOSIX_graph(BinaryProperty const&, int, UProperty)
isPOSIX_print(BinaryProperty const&, int, UProperty)
isPOSIX_xdigit(BinaryProperty const&, int, UProperty)
isRegionalIndicator(BinaryProperty const&, int, UProperty)
isSPrepAcceptable(void*, char const*, char const*, UDataInfo const*)
isValidOlsonID(char const*)
is_IS
iso2022
iso88591
isualorderleft=
it_CH
it_IT
itespace3"
itespace_
ithstackerC
ithtail
itialpunctuation
itialpunctuationY
itic
itiona
itivee
itlecased
itlecaseletter'
itlecaseletter1
itlecasemapping
iu_Cans
iu_Cans_CA
iu_Latn
iu_Latn_CA
ivateuse
ivateuseCa,cMdGeK
iw_IL
ixed=
ixnumericA
iyaqnumbers
j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#j#
j4n>r
j<nNr
j<rhs
jDot
j\va\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\va\vg\vg\vg\vg\vg\vg\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\va\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\va\vg\vg\vg\vg\vg\vg\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\va\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vd\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vg\vj\vj\vj\vj\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vm\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\vs\v
j\vj\vj\vj\vj\vj\vj\v
j\vj\vj\vj\vj\vj\vj\vj\v
j\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\vg\v
j\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\vg\vg\vg\vg\v
j\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vj\vg\vg\vg\va\vg\vg\vg\vg\vg\vg\v
ja-latn-alalc97
ja-latn-hepburn-heploc
ja_JP
jalagondi
jang
jani
jips
jklmnopqr
joined?dLfRhZi
joinerS
jv_ID
k/o0r!u
k6kVsnuty
k;kVoZudy
kAny
kLnPrvu
kXltn
ka_GE
kathi
keis
kengpuachuehmong
keyMap
keyTypeData
keyTypePattern
keyValue
kgkHmRp\s
kk_KZ
kl_GL
km_KH
kn_IN
known
ko_KP
ko_KR
kok_IN
kr_NG
ks_Arab_IN
ks_Deva_IN
kta/
kuqi
ky_KG
l"l6mRp
l$r7$
l(l2m8nDv
l2t4v
l4m:rHu
l4m@sft
l8nBpLs
l:mHsTt
l;n+r
l;p=s9
l<lRoVrfu
l<oJp
l@nJpVs
lDrJs
lPmbr
lP}M]\Nk`Ka
lRtVv^x
l\fl\fV\rS\rR
la_001
la_IT
lagsequence
langInfo
language
languageAliases
languages
lated1
lavi
layoutGetMaxValue(IntProperty const&, UProperty)
lb_LU
lb_lw=%s
lccc
lctevg
lead surrogate
left
lenient
let7
leth
letter number
letter#
lettersandmonths
lexcontextQ
libicuuc.so
libv8_libcpp.so
likely
likelySubtags
line separator
lines
ljapanesestarterk
llaneous
lle}
llic1
lo_LA
load converter %s from package %s
loadParentsExceptRoot(UResourceDataEntry*&, char*, int, signed char, char*, UErrorCode*)
loadednormalizer2impl.cpp
locale=
localeDisplayPattern
locale_available_cleanup()
locale_cleanup()
locale_getKeywordsStart_71
locale_get_default_71
locale_set_default_71
localebuilder.cpp
localematcher.cpp
localeprioritylist.cpp
locavailable.cpp
locbased.cpp
locdispnames.cpp
locdistance.cpp
locdspnm.cpp
locid.cpp
loclikely.cpp
loclikelysubtags.cpp
locmap.cpp
locmap_af
locmap_am
locmap_ar
locmap_arn
locmap_as
locmap_az
locmap_ba
locmap_be
locmap_bg
locmap_bin
locmap_bn
locmap_bo
locmap_br
locmap_ca
locmap_chr
locmap_ckb
locmap_co
locmap_cs
locmap_cy
locmap_da
locmap_de
locmap_dv
locmap_el
locmap_en
locmap_en_US_POSIX
locmap_es
locmap_et
locmap_eu
locmap_fa
locmap_fa_AF
locmap_ff
locmap_fi
locmap_fil
locmap_fo
locmap_fr
locmap_fuv
locmap_fy
locmap_ga
locmap_gd
locmap_gl
locmap_gn
locmap_gsw
locmap_gu
locmap_ha
locmap_haw
locmap_he
locmap_hi
locmap_hr
locmap_hsb
locmap_hu
locmap_hy
locmap_ibb
locmap_id
locmap_ig
locmap_ii
locmap_is
locmap_it
locmap_iu
locmap_iw
locmap_ja
locmap_ka
locmap_kk
locmap_kl
locmap_km
locmap_kn
locmap_ko
locmap_kok
locmap_kr
locmap_ks
locmap_ky
locmap_la
locmap_lb
locmap_lo
locmap_lt
locmap_lv
locmap_mi
locmap_mk
locmap_ml
locmap_mn
locmap_mni
locmap_moh
locmap_mr
locmap_ms
locmap_mt
locmap_my
locmap_ne
locmap_nl
locmap_no
locmap_nso
locmap_oc
locmap_om
locmap_or_IN
locmap_pa
locmap_pap
locmap_pl
locmap_ps
locmap_pt
locmap_qu
locmap_quc
locmap_qut
locmap_rm
locmap_ro
locmap_root
locmap_ru
locmap_rw
locmap_sa
locmap_sah
locmap_sd
locmap_se
locmap_si
locmap_sk
locmap_sl
locmap_so
locmap_sq
locmap_st
locmap_sv
locmap_sw
locmap_syr
locmap_ta
locmap_te
locmap_tg
locmap_th
locmap_ti
locmap_tk
locmap_tn
locmap_tr
locmap_ts
locmap_tt
locmap_tzm
locmap_ug
locmap_uk
locmap_ur
locmap_uz
locmap_ve
locmap_vi
locmap_wo
locmap_xh
locmap_yi
locmap_yo
locmap_zh
locmap_zu
locresdata.cpp
locutil.cpp
logu
loose
lose% 
lowercase letter
lowercaseAsciiFromEbcdic
lphabeticsymbols
lphanum
lsandpictographs
lsr.cpp
lsrs
lstm
lstmbe.cpp
lt_LT
luguK
lusterbreak
lv_LV
lvariant
m$uA
m.n6s
m.nJt
m0n:y"
m8qFu
m:slt
m@rXu
mAo(t1u%`
mNnTs
mQm3o(pir5
m_m:nHszv
maic
makeTokenMap(UDataSwapper const*, short*, unsigned short, unsigned char*, UErrorCode*)
many
mapping
marbutat
mask
match
math symbol
matical
maticaloperators
mbedding7
mbedding=
mber
mbiguous#&
mbol
mbols
memcmp
memcpy
memmove
memset
meric
meric'
meric+
meric-
mericG
messagepattern.cpp
metaZones
metadata
mi_NZ
minoan
mk_MK
ml_IN
mmonseparator-
mn_CN
mn_Cyrl
mn_MN
mn_Mong
mn_Mong_CN
mn_Mong_MN
mni_IN
model
modf
modifier letter
modifier symbol
mofo+
moh_CA
mon!
mpex3a.c
mple
mr_IN
ms_BN
ms_MY
mt_MT
mukhiC
mumnp
my_MM
myrene
n%s't)u
n,n4r^sbt
n.n,r>tVu!
n4o8p>t
n8n2r\sly
n9nFoNsEu
n<sFt
nBoFt
nHpvt
nHrdu
nWnRo^s
nabazarsquare
nagari5
nalpunctuation
nalpunctuation[
nalsemkath5
nan-x-zh-min
navoicing1
nb nn
nb_NO
ncat(char*, unsigned int, ...)
nclosingmark
nclosingmark/
nctuation1
ndcoptic1
nded
ndeda
ndependentg
ndformatcontrols
ndfullforms
ndfullwidthforms
ndpictographsext
ndred
ndsubs
ndu%
ne_IN
ne_NP
nebreak
nefeedCa@bpc
neiform
neralcategory
nertk
nertm
nerto
nertq
nese
neseparator
neseparator;cDd
nextStateToUnicodeJP
nfcinert
nfdinert
nfkc
nfkc_cf
nfkcinert
nfkdinert
ngaliA
ngciti
ngglyph
nglequote?
ngmark
ngmark1
ngulsyllabletype
nian'
nician
nifiedideographs
nitialpostfixed3
njoinerM
nknown!
nl_BE
nl_NL
nmarY
nn_NO
no-bok
no-nyn
no_NO
no_NO_NY
non spacing mark
non-virtual thunk to icu_71::UnicodeFilter::matches(icu_71::Replaceable const&, int&, int, signed char)
non-virtual thunk to icu_71::UnicodeFilter::~UnicodeFilter()
non-virtual thunk to icu_71::UnicodeSet::addMatchSetTo(icu_71::UnicodeSet&) const
non-virtual thunk to icu_71::UnicodeSet::matches(icu_71::Replaceable const&, int&, int, signed char)
non-virtual thunk to icu_71::UnicodeSet::matchesIndexValue(unsigned char) const
non-virtual thunk to icu_71::UnicodeSet::toPattern(icu_71::UnicodeString&, signed char) const
non-virtual thunk to icu_71::UnicodeSet::~UnicodeSet()
noncharacter
noopCurrent(UCharIterator*)
noopGetIndex(UCharIterator*, UCharIteratorOrigin)
noopGetState(UCharIterator const*)
noopHasNext(UCharIterator*)
noopIterator
noopMove(UCharIterator*, int, UCharIteratorOrigin)
noopSetState(UCharIterator*, unsigned int, UErrorCode*)
noowb
norablecodepoint+*
norm2_nfc_data_extraData
norm2_nfc_data_indexes
norm2_nfc_data_smallFCD
norm2_nfc_data_trie
norm2_nfc_data_trieData
norm2_nfc_data_trieIndex
normalizeSecondAndAppend(UNormalizer2 const*, char16_t*, int, int, char16_t const*, int, signed char, UErrorCode*)
normalize_esq_chars_2022
normalizer2.cpp
normalizer2impl.cpp
normlzr.cpp
nsions
nso_ZA
nsonant*
nspacingmark
nspacingmark-
nspacingmarkC
nstarterE
ntha
ntillationmark)
ntingrod
ntrol#
ntrol%
number
numbers
numerals
numeralsymbols
numlet/B
nvisiblestackerG
nvsQs>t\w
nwriting
nynorsk
o!\vr9v\fv3x*z
o$qA
o(oWp4u
o,uPy
o2u&
o9o2t
o>rL
oFoHrtt
oRovp
oc_FR
ockelements
ode1name
odifier
odifier?\tnJn4oDs`u
odifierG
odifiers
odifiersequence
odifyingletterK
oeoJr\tdv
offsetTOCEntryCount(UDataMemory const*)
offsetTOCLookupFn(UDataMemory const*, char const*, int*, UErrorCode*)
offsetsFromUTF8
ographic
oincausing#
oinerIa
oininggroup!
oitic
okee-
okee`
olded
olding
olianW
olianhieroglyphs
olitic
om_ET
omansiyaqnumbers
ombo
omofo
ompat
ompatibilityjamo
omponent
omponents
ompositiontype
oncatenationmark
one!
oneletters
oneticextensions
onic
onical#
onjoining!(
ontinue=.
ontinue?
ontinuea
ontrolIf
open algorithmic converter type %d
open converter %s from package %s
open64
openCommonData(char const*, int, UErrorCode*)
opic7
oqodr
or_IN
orhiragana
ormatA
ormatcontrols
orms
orsymbolsw
ortharabian
ose%
osep
osepunctuation
osepunctuationK
oshthi
ositionexclusion3
otated!
otated#\rn
otationOh{hPi
otationmarkS
other
other letter
other number
other punctuation
other symbol
oticons
otinagri
otsyllabary
ottedhehK
ottom"
ottom2
out of memory swapping %u unames.icu tokens\n
outputHexBytes(long, int, char*, int*, int)::gHexChars
outputUString(char16_t const*, int, char*, int*, int, int)
oweljamo%"
owercased
owercasemapping
ows}
oyan
p0t6u
p:uny
pAlloc
pAp:sXt
pBp:sZt
pContext
pFree
pRealloc
pTraceDataFunc
pTraceEntryFunc
pTraceExitFunc
pa_Arab_PK
pa_IN
pa_PK
paceY
pace_
pairedChars
pap_029
pap_AN
paradigms
paragraph separator
parator
parseConverterOptions(char const*, UConverterNamePieces*, UConverterLoadArgs*, UErrorCode*)
parseTagString(char const*, char*, int*, char*, int*, char*, int*, UErrorCode*)
parsepos.cpp
partitions
pat%
pattern
patternprops.cpp
patterns
pcpVr
pdirectional
pe1f
pen#$
pendedc
per5aFcRedfrl
per\
perators
percaseletter#
percaseletter%
perialaramaic
phabetic%
phen;
phen=
phrase
pictographic
pl_PL
plement
plement%
ployan
pluralmap.cpp
pointerTOCEntryCount(UDataMemory const*)
pointerTOCLookupFn(UDataMemory const*, char const*, int*, UErrorCode*)
pool
posix
posix/
posixrules
ppercased
ppercasemapping
pqrstuvwxyz{|}~
presALink
presBLink
pright%
pright' 
private use area
private-
processPropertySeq(UBiDi*, LevState*, unsigned char, int, int)
propname.cpp
propsTrie
propsTrie_index
propsVectors
propsVectorsTrie
propsVectorsTrie_index
propsvec.cpp
ps_AF
pt_BR
pt_PT
ptsandsubscriptss
punycode.cpp
putil.cpp
putil_cleanup()
q\nq\nq\nq\nq\nq\nq\nq\nq\nq\nq\nn\nn\nn\nq\nq\nq\n
qa\g
qs6t
qsort
qu_BO
qu_EC
qu_PE
quc_CO
quc_Latn_GT
qut_GT
quz_BO
quz_EC
quz_PE
r(v0w
r5rDsdu
r8tFu&
r@r6s^wzx
r_rFs
rable?
radicals
ragraphseparator
ragraphseparator/
ragraphseparator=
raightwaw
railingjamo'
rama3
ransparent+c#d@jVl&
rashtra
rasmian
rati?
rbbi.cpp
rbbi_cache.cpp
rbbi_cleanup_71
rbbidata.cpp
rbbinode.cpp
rbbirb.cpp
rbbiscan.cpp
rbbisetb.cpp
rbbistbl.cpp
rbbitblb.cpp
rcle'
rdbreak
rdjoiner]
reak
reak7
recated-
reek
regionAliases
regionToPartitions
register_tm_clones
reltable._ZN6icu_7113PluralMapBase15getCategoryNameENS0_8CategoryE
reltable.usprep_openByType_71
rencysymbolsu
renthesisi
repFuncs
repTextAccess(UText*, long, signed char)
repTextClone(UText*, UText const*, signed char, UErrorCode*)
repTextClose(UText*)
repTextCopy(UText*, long, long, long, signed char, UErrorCode*)
repTextExtract(UText*, long, long, char16_t*, int, UErrorCode*)
repTextLength(UText*)
repTextReplace(UText*, long, long, char16_t const*, int, UErrorCode*)
replaceableIterator
replaceableIteratorCurrent(UCharIterator*)
replaceableIteratorNext(UCharIterator*)
replaceableIteratorPrevious(UCharIterator*)
replacement
res-open
res_countArrayItems_71
res_findResource_71
res_getAlias_71
res_getArrayItem_71
res_getBinaryNoTrace_71
res_getIntVectorNoTrace_71
res_getPublicType_71
res_getResource_71
res_getStringNoTrace_71
res_getTableItemByIndex_71
res_getTableItemByKey_71
res_index
res_init(ResourceData*, unsigned char*, void const*, int, UErrorCode*)
res_load_71
res_read_71
res_unload_71
resbMutex
resbund.cpp
resbund_cnv.cpp
resc
resentation
resolveBaseDirection(char16_t const*, unsigned int, unsigned char*, unsigned char*)
resolveExplicitLevels(UBiDi*, UErrorCode*)
resolveImplicitLevels(UBiDi*, int, int, unsigned char, unsigned char)
resource.cpp
restrace.cpp
rewind
rfc3491
rfc3530cs
rfc3530csci
rfc3530mixp
rfc3722
rfc3920node
rfc3920res
rfc4011
rfc4013
rfc4505
rfc4518
rfc4518ci
riacwawo
riationselectori
rican
rics
right
right/
riginalsyllabicsb
ritan
rlegacycomputing
rlyd
rm_CH
rmat
rmat%
rmat'
rmatA
rmgi<l
ro_MD
ro_RO
rokes
rol?
root
root-en-es-pt-zh-ja-ko-de-fr-it-ar+he+fa+ru-nl-pl-th-tr-
ropean
rorDsNtby
roshthi
roup
row5
rrencysymbol
rrencysymbolS 
rriagereturn5
rrogate
rrogateE
rrogateS
rrow)\rn
rrows
rsiyeh
rststrongisolateGaNb
rtAD
rtha
ru_MD
ru_RU
rue#\vk[o#o<rLv
ruleiter.cpp
rw_RW
s,t0w
s4xByHz
s8t*
sIsHuxw
sa_IN
sah_RU
schriter.cpp
script
scriptExtensions
scriptGetMaxValue(IntProperty const&, UProperty)
sd_Arab
sd_Arab_PK
sd_Deva_IN
sd_IN
sd_PK
se_FI
se_NO
se_SE
searchCurrencyName(CurrencyNameStruct const*, int, char16_t const*, int, int*, int*, int*)
searchForTZFile(char const*, DefaultTZInfo*)
sedletter=
see-x-i-mingo
segspaceM
segstart
selectForMask(UConverterSelector const*, unsigned int*, UErrorCode*)
sentence
separator
separator9cSkUmQ
serv.cpp
service_cleanup()
servlk.cpp
servlkf.cpp
servls.cpp
servnotf.cpp
servrbf.cpp
servslkf.cpp
setCommonICUData(UDataMemory*, signed char, UErrorCode*)
setTrailingWSStart(UBiDi*)
sgn-be-fr
sgn-be-nl
sgn-br
sgn-ch-de
sgn-co
sgn-de
sgn-dk
sgn-es
sgn-fr
sgn-gb
sgn-gr
sgn-ie
sgn-it
sgn-jp
sgn-mx
sgn-ni
sgn-nl
sgn-no
sgn-pt
sgn-se
sgn-us
sgn-za
shallowTextClone(UText*, UText const*, UErrorCode*)
shapeTable
shapeUnicode(char16_t*, int, int, unsigned int, UErrorCode*, int, uShapeVariables)
sharedobject.cpp
shpunctuation
shpunctuationG
si_LK
sicemoji
simpleformatter.cpp
sitionalcategory
sk_SK
sl_SI
sma_NO
sma_SE
smj_NO
smj_SE
smn_FI
sms:t
sms_FI
so_SO
solateI
solateK0
solateM
sompeng
space separator
sq_AL
sr_Cyrl
sr_Cyrl_BA
sr_Cyrl_CS
sr_Cyrl_ME
sr_Cyrl_RS
sr_Latn
sr_Latn_BA
sr_Latn_CS
sr_Latn_ME
sr_Latn_RS
sr_RS
ssymbols
st_ZA
stan
start punctuation
stasianwidth
static_unicode_sets.cpp
std::Cr::__call_once(unsigned long volatile&, void*, void (*)(void*))
std::Cr::condition_variable::notify_all()
std::Cr::condition_variable::wait(std::Cr::unique_lock<std::Cr::mutex>&)
std::Cr::condition_variable::~condition_variable()
std::Cr::mutex::lock()
std::Cr::mutex::unlock()
stfixnumericK
stos
strcat
strcmp
strict
string
stringIterator
stringIteratorCurrent(UCharIterator*)
stringIteratorGetIndex(UCharIterator*, UCharIteratorOrigin)
stringIteratorGetState(UCharIterator const*)
stringIteratorHasNext(UCharIterator*)
stringIteratorHasPrevious(UCharIterator*)
stringIteratorMove(UCharIterator*, int, UCharIteratorOrigin)
stringIteratorNext(UCharIterator*)
stringIteratorPrevious(UCharIterator*)
stringIteratorSetState(UCharIterator*, unsigned int, UErrorCode*)
stringpiece.cpp
stringtriebuilder.cpp
strncat
strncmp
strncpy
strrchr
strtod
stubdata.cpp
stuvwxyz
subQuickSort(char*, int, int, int, int (*)(void const*, void const*, void const*), void const*, void*, void*)
subdivision
sup$
supplement
supplementalData
surrogates
sv_FI
sv_SE
sw_KE
sw_TZ
swaplfnl
syllable+
symbols
syr_SY
t"t8wLy
ta_IN
ta_LK
takana'
talic
talic]
tanhf
tani
tano
tansmallscript
tapplicable!&
tartc`
tarts
tashkeelMedial
tasubscript
tccc
te_IN
teimayek
tend':
tend2
tend9
terlikesymbolsy
territory
test if can open converter %s
tg_Cyrl
tg_Cyrl_TJ
th_TH
tharabian
ther!
ther!cLedg
ther!g>gJidj
thian
thic
thkuqi
thsymbolQ
ti_ER
ti_ET
tianhieroglyphs
ticalchar
ticalforms
ticalorientation
tiles
timezone
timezoneTypes
tinagri
title
titlecase letter
tk_TM
tlecasemapping
tn_BW
tn_ZA
toUpperOrTitle(int, int (*)(void*, signed char), void*, char16_t const**, int, signed char)
tonsignwriting
trCollNames
trConvNames
trFnName
trResDataNames
tr_TR
trail surrogate
treordered!
trie
trl?B
trolpictures
ts_ZA
tt_RU
tter
tternumber5
tvtLv
type
typeAlias
typeMap
typeinfo for (anonymous namespace)::AvailableLocalesSink
typeinfo for (anonymous namespace)::AvailableLocalesStringEnumeration
typeinfo for (anonymous namespace)::GetAllChildrenSink
typeinfo for (anonymous namespace)::ParseDataSink
typeinfo for icu_71::Appendable
typeinfo for icu_71::Array1D
typeinfo for icu_71::BMPSet
typeinfo for icu_71::BreakIterator
typeinfo for icu_71::BurmeseBreakEngine
typeinfo for icu_71::ByteSink
typeinfo for icu_71::BytesDictionaryMatcher
typeinfo for icu_71::BytesTrieBuilder
typeinfo for icu_71::BytesTrieBuilder::BTLinearMatchNode
typeinfo for icu_71::CacheKeyBase
typeinfo for icu_71::CanonicalIterator
typeinfo for icu_71::CharStringByteSink
typeinfo for icu_71::CharacterIterator
typeinfo for icu_71::CheckedArrayByteSink
typeinfo for icu_71::CjkBreakEngine
typeinfo for icu_71::CodePointsVectorizer
typeinfo for icu_71::ComposeNormalizer2
typeinfo for icu_71::ConstArray1D
typeinfo for icu_71::ConstArray2D
typeinfo for icu_71::DateInterval
typeinfo for icu_71::DecomposeNormalizer2
typeinfo for icu_71::DictionaryBreakEngine
typeinfo for icu_71::DictionaryMatcher
typeinfo for icu_71::ErrorCode
typeinfo for icu_71::EventListener
typeinfo for icu_71::FCDNormalizer2
typeinfo for icu_71::FilteredBreakIteratorBuilder
typeinfo for icu_71::FilteredNormalizer2
typeinfo for icu_71::ForwardCharacterIterator
typeinfo for icu_71::GraphemeClusterVectorizer
typeinfo for icu_71::ICUBreakIteratorFactory
typeinfo for icu_71::ICUBreakIteratorService
typeinfo for icu_71::ICULanguageBreakFactory
typeinfo for icu_71::ICULocaleService
typeinfo for icu_71::ICUNotifier
typeinfo for icu_71::ICUResourceBundleFactory
typeinfo for icu_71::ICUService
typeinfo for icu_71::ICUServiceFactory
typeinfo for icu_71::ICUServiceKey
typeinfo for icu_71::IDNA
typeinfo for icu_71::KeywordEnumeration
typeinfo for icu_71::KhmerBreakEngine
typeinfo for icu_71::LSTMBreakEngine
typeinfo for icu_71::LanguageBreakEngine
typeinfo for icu_71::LanguageBreakFactory
typeinfo for icu_71::LaoBreakEngine
typeinfo for icu_71::LoadedNormalizer2Impl
typeinfo for icu_71::Locale
typeinfo for icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>
typeinfo for icu_71::Locale::Iterator
typeinfo for icu_71::LocaleBuilder
typeinfo for icu_71::LocaleDisplayNames
typeinfo for icu_71::LocaleDisplayNamesImpl
typeinfo for icu_71::LocaleDisplayNamesImpl::CapitalizationContextSink
typeinfo for icu_71::LocaleKey
typeinfo for icu_71::LocaleKeyFactory
typeinfo for icu_71::LocalePriorityList::Iterator
typeinfo for icu_71::MessagePattern
typeinfo for icu_71::NoopNormalizer2
typeinfo for icu_71::Normalizer
typeinfo for icu_71::Normalizer2
typeinfo for icu_71::Normalizer2Impl
typeinfo for icu_71::Normalizer2WithImpl
typeinfo for icu_71::ParsePosition
typeinfo for icu_71::RBBIRuleBuilder
typeinfo for icu_71::RBBIRuleScanner
typeinfo for icu_71::RBBISymbolTable
typeinfo for icu_71::ReadArray1D
typeinfo for icu_71::ReadArray2D
typeinfo for icu_71::Replaceable
typeinfo for icu_71::ResourceBundle
typeinfo for icu_71::ResourceDataValue
typeinfo for icu_71::ResourceSink
typeinfo for icu_71::ResourceValue
typeinfo for icu_71::RuleBasedBreakIterator
typeinfo for icu_71::RuleBasedBreakIterator::BreakCache
typeinfo for icu_71::ServiceEnumeration
typeinfo for icu_71::ServiceListener
typeinfo for icu_71::SharedObject
typeinfo for icu_71::SimpleFactory
typeinfo for icu_71::SimpleFilteredBreakIteratorBuilder
typeinfo for icu_71::SimpleFilteredSentenceBreakData
typeinfo for icu_71::SimpleFilteredSentenceBreakIterator
typeinfo for icu_71::SimpleLocaleKeyFactory
typeinfo for icu_71::StringCharacterIterator
typeinfo for icu_71::StringEnumeration
typeinfo for icu_71::StringTrieBuilder
typeinfo for icu_71::StringTrieBuilder::BranchHeadNode
typeinfo for icu_71::StringTrieBuilder::BranchNode
typeinfo for icu_71::StringTrieBuilder::FinalValueNode
typeinfo for icu_71::StringTrieBuilder::IntermediateValueNode
typeinfo for icu_71::StringTrieBuilder::LinearMatchNode
typeinfo for icu_71::StringTrieBuilder::ListBranchNode
typeinfo for icu_71::StringTrieBuilder::Node
typeinfo for icu_71::StringTrieBuilder::SplitBranchNode
typeinfo for icu_71::StringTrieBuilder::ValueNode
typeinfo for icu_71::SymbolTable
typeinfo for icu_71::ThaiBreakEngine
typeinfo for icu_71::UCharCharacterIterator
typeinfo for icu_71::UCharsDictionaryMatcher
typeinfo for icu_71::UCharsTrieBuilder
typeinfo for icu_71::UCharsTrieBuilder::UCTLinearMatchNode
typeinfo for icu_71::UMemory
typeinfo for icu_71::UObject
typeinfo for icu_71::UStack
typeinfo for icu_71::UStringEnumeration
typeinfo for icu_71::UStringSet
typeinfo for icu_71::UTS46
typeinfo for icu_71::UVector
typeinfo for icu_71::UVector32
typeinfo for icu_71::UVector64
typeinfo for icu_71::UnhandledEngine
typeinfo for icu_71::UnicodeFilter
typeinfo for icu_71::UnicodeFunctor
typeinfo for icu_71::UnicodeKeywordEnumeration
typeinfo for icu_71::UnicodeMatcher
typeinfo for icu_71::UnicodeSet
typeinfo for icu_71::UnicodeSetIterator
typeinfo for icu_71::UnicodeString
typeinfo for icu_71::UnicodeStringAppendable
typeinfo for icu_71::UnifiedCache
typeinfo for icu_71::UnifiedCacheBase
typeinfo for icu_71::Vectorizer
typeinfo for icu_71::WholeStringBreakIterator
typeinfo name for (anonymous namespace)::AvailableLocalesSink
typeinfo name for (anonymous namespace)::AvailableLocalesStringEnumeration
typeinfo name for (anonymous namespace)::GetAllChildrenSink
typeinfo name for (anonymous namespace)::ParseDataSink
typeinfo name for icu_71::Appendable
typeinfo name for icu_71::Array1D
typeinfo name for icu_71::BMPSet
typeinfo name for icu_71::BreakIterator
typeinfo name for icu_71::BurmeseBreakEngine
typeinfo name for icu_71::ByteSink
typeinfo name for icu_71::BytesDictionaryMatcher
typeinfo name for icu_71::BytesTrieBuilder
typeinfo name for icu_71::BytesTrieBuilder::BTLinearMatchNode
typeinfo name for icu_71::CacheKeyBase
typeinfo name for icu_71::CanonicalIterator
typeinfo name for icu_71::CharStringByteSink
typeinfo name for icu_71::CharacterIterator
typeinfo name for icu_71::CheckedArrayByteSink
typeinfo name for icu_71::CjkBreakEngine
typeinfo name for icu_71::CodePointsVectorizer
typeinfo name for icu_71::ComposeNormalizer2
typeinfo name for icu_71::ConstArray1D
typeinfo name for icu_71::ConstArray2D
typeinfo name for icu_71::DateInterval
typeinfo name for icu_71::DecomposeNormalizer2
typeinfo name for icu_71::DictionaryBreakEngine
typeinfo name for icu_71::DictionaryMatcher
typeinfo name for icu_71::ErrorCode
typeinfo name for icu_71::EventListener
typeinfo name for icu_71::FCDNormalizer2
typeinfo name for icu_71::FilteredBreakIteratorBuilder
typeinfo name for icu_71::FilteredNormalizer2
typeinfo name for icu_71::ForwardCharacterIterator
typeinfo name for icu_71::GraphemeClusterVectorizer
typeinfo name for icu_71::ICUBreakIteratorFactory
typeinfo name for icu_71::ICUBreakIteratorService
typeinfo name for icu_71::ICULanguageBreakFactory
typeinfo name for icu_71::ICULocaleService
typeinfo name for icu_71::ICUNotifier
typeinfo name for icu_71::ICUResourceBundleFactory
typeinfo name for icu_71::ICUService
typeinfo name for icu_71::ICUServiceFactory
typeinfo name for icu_71::ICUServiceKey
typeinfo name for icu_71::IDNA
typeinfo name for icu_71::KeywordEnumeration
typeinfo name for icu_71::KhmerBreakEngine
typeinfo name for icu_71::LSTMBreakEngine
typeinfo name for icu_71::LanguageBreakEngine
typeinfo name for icu_71::LanguageBreakFactory
typeinfo name for icu_71::LaoBreakEngine
typeinfo name for icu_71::LoadedNormalizer2Impl
typeinfo name for icu_71::Locale
typeinfo name for icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>
typeinfo name for icu_71::Locale::Iterator
typeinfo name for icu_71::LocaleBuilder
typeinfo name for icu_71::LocaleDisplayNames
typeinfo name for icu_71::LocaleDisplayNamesImpl
typeinfo name for icu_71::LocaleDisplayNamesImpl::CapitalizationContextSink
typeinfo name for icu_71::LocaleKey
typeinfo name for icu_71::LocaleKeyFactory
typeinfo name for icu_71::LocalePriorityList::Iterator
typeinfo name for icu_71::MessagePattern
typeinfo name for icu_71::NoopNormalizer2
typeinfo name for icu_71::Normalizer
typeinfo name for icu_71::Normalizer2
typeinfo name for icu_71::Normalizer2Impl
typeinfo name for icu_71::Normalizer2WithImpl
typeinfo name for icu_71::ParsePosition
typeinfo name for icu_71::RBBIRuleBuilder
typeinfo name for icu_71::RBBIRuleScanner
typeinfo name for icu_71::RBBISymbolTable
typeinfo name for icu_71::ReadArray1D
typeinfo name for icu_71::ReadArray2D
typeinfo name for icu_71::Replaceable
typeinfo name for icu_71::ResourceBundle
typeinfo name for icu_71::ResourceDataValue
typeinfo name for icu_71::ResourceSink
typeinfo name for icu_71::ResourceValue
typeinfo name for icu_71::RuleBasedBreakIterator
typeinfo name for icu_71::RuleBasedBreakIterator::BreakCache
typeinfo name for icu_71::ServiceEnumeration
typeinfo name for icu_71::ServiceListener
typeinfo name for icu_71::SharedObject
typeinfo name for icu_71::SimpleFactory
typeinfo name for icu_71::SimpleFilteredBreakIteratorBuilder
typeinfo name for icu_71::SimpleFilteredSentenceBreakData
typeinfo name for icu_71::SimpleFilteredSentenceBreakIterator
typeinfo name for icu_71::SimpleLocaleKeyFactory
typeinfo name for icu_71::StringCharacterIterator
typeinfo name for icu_71::StringEnumeration
typeinfo name for icu_71::StringTrieBuilder
typeinfo name for icu_71::StringTrieBuilder::BranchHeadNode
typeinfo name for icu_71::StringTrieBuilder::BranchNode
typeinfo name for icu_71::StringTrieBuilder::FinalValueNode
typeinfo name for icu_71::StringTrieBuilder::IntermediateValueNode
typeinfo name for icu_71::StringTrieBuilder::LinearMatchNode
typeinfo name for icu_71::StringTrieBuilder::ListBranchNode
typeinfo name for icu_71::StringTrieBuilder::Node
typeinfo name for icu_71::StringTrieBuilder::SplitBranchNode
typeinfo name for icu_71::StringTrieBuilder::ValueNode
typeinfo name for icu_71::SymbolTable
typeinfo name for icu_71::ThaiBreakEngine
typeinfo name for icu_71::UCharCharacterIterator
typeinfo name for icu_71::UCharsDictionaryMatcher
typeinfo name for icu_71::UCharsTrieBuilder
typeinfo name for icu_71::UCharsTrieBuilder::UCTLinearMatchNode
typeinfo name for icu_71::UMemory
typeinfo name for icu_71::UObject
typeinfo name for icu_71::UStack
typeinfo name for icu_71::UStringEnumeration
typeinfo name for icu_71::UStringSet
typeinfo name for icu_71::UTS46
typeinfo name for icu_71::UVector
typeinfo name for icu_71::UVector32
typeinfo name for icu_71::UVector64
typeinfo name for icu_71::UnhandledEngine
typeinfo name for icu_71::UnicodeFilter
typeinfo name for icu_71::UnicodeFunctor
typeinfo name for icu_71::UnicodeKeywordEnumeration
typeinfo name for icu_71::UnicodeMatcher
typeinfo name for icu_71::UnicodeSet
typeinfo name for icu_71::UnicodeSetIterator
typeinfo name for icu_71::UnicodeString
typeinfo name for icu_71::UnicodeStringAppendable
typeinfo name for icu_71::UnifiedCache
typeinfo name for icu_71::UnifiedCacheBase
typeinfo name for icu_71::Vectorizer
typeinfo name for icu_71::WholeStringBreakIterator
tzm_Arab_MA
tzm_Latn
tzm_Latn_DZ
tzm_Tfng_MA
tzname
u_UCharsToChars_71
u_asciiToUpper_71
u_austrcpy_71
u_austrncpy_71
u_caseInsensitivePrefixMatch_71
u_catclose_71
u_catgets_71
u_catopen_71
u_charAge_71
u_charDigitValue_71
u_charDirection_71
u_charFromName_71
u_charMirror_71
u_charName_71
u_charType_71
u_charsToUChars_71
u_cleanup
u_cleanup_71
u_countChar32_71
u_digit_71
u_enumCharNames_71
u_enumCharTypes_71
u_errorName_71
u_flushDefaultConverter_71
u_foldCase_71
u_forDigit_71
u_getBidiPairedBracket_71
u_getBinaryPropertySet_71
u_getCombiningClass_71
u_getDataDirectory_71
u_getDataVersion_71
u_getDefaultConverter_71
u_getFC_NFKC_Closure_71
u_getISOComment_71
u_getIntPropertyMap_71
u_getIntPropertyMaxValue_71
u_getIntPropertyMinValue_71
u_getIntPropertyValue_71
u_getMainProperties_71
u_getNumericValue_71
u_getPropertyEnum_71
u_getPropertyName_71
u_getPropertyValueEnum_71
u_getPropertyValueName_71
u_getTimeZoneFilesDirectory_71
u_getUnicodeProperties_71
u_getUnicodeVersion_71
u_getVersion_71
u_hasBinaryProperty_71
u_init
u_init_71
u_isIDIgnorable_71
u_isIDPart_71
u_isIDStart_71
u_isISOControl_71
u_isJavaIDPart_71
u_isJavaIDStart_71
u_isJavaSpaceChar_71
u_isMirrored_71
u_isUAlphabetic_71
u_isULowercase_71
u_isUUppercase_71
u_isUWhiteSpace_71
u_isWhitespace_71
u_isalnumPOSIX_71
u_isalnum_71
u_isalpha_71
u_isbase_71
u_isblank_71
u_iscntrl_71
u_isdefined_71
u_isdigit_71
u_isgraphPOSIX_71
u_isgraph_71
u_islower_71
u_isprintPOSIX_71
u_isprint_71
u_ispunct_71
u_isspace_71
u_istitle_71
u_isupper_71
u_isxdigit_71
u_memcasecmp_71
u_memchr32_71
u_memchr_71
u_memcmpCodePointOrder_71
u_memcmp_71
u_memcpy_71
u_memmove_71
u_memrchr32_71
u_memrchr_71
u_memset_71
u_releaseDefaultConverter_71
u_setAtomicIncDecFunctions_71
u_setDataDirectory_71
u_setMemoryFunctions_71
u_setMutexFunctions_71
u_setTimeZoneFilesDirectory_71
u_shapeArabic_71
u_strCaseCompare_71
u_strCompareIter_71
u_strCompare_71
u_strFindFirst_71
u_strFindLast_71
u_strFoldCase_71
u_strFromJavaModifiedUTF8WithSub_71
u_strFromPunycode_71
u_strFromUTF32WithSub_71
u_strFromUTF32_71
u_strFromUTF8Lenient_71
u_strFromUTF8WithSub_71
u_strFromUTF8_71
u_strFromWCS_71
u_strHasMoreChar32Than_71
u_strToJavaModifiedUTF8_71
u_strToLower_71
u_strToPunycode_71
u_strToTitle_71
u_strToUTF32WithSub_71
u_strToUTF32_71
u_strToUTF8WithSub_71
u_strToUTF8_71
u_strToUpper_71
u_strToWCS_71
u_strcasecmp_71
u_strcat_71
u_strchr32_71
u_strchr_71
u_strcmpCodePointOrder_71
u_strcmpFold_71
u_strcmp_71
u_strcpy_71
u_strcspn_71
u_stringHasBinaryProperty_71
u_strlen_71
u_strncasecmp_71
u_strncat_71
u_strncmpCodePointOrder_71
u_strncmp_71
u_strncpy_71
u_strpbrk_71
u_strrchr32_71
u_strrchr_71
u_strrstr_71
u_strspn_71
u_strstr_71
u_strtok_r_71
u_terminateChars_71
u_terminateUChar32s_71
u_terminateUChars_71
u_terminateWChars_71
u_tolower_71
u_totitle_71
u_toupper_71
u_uastrcpy_71
u_uastrncpy_71
u_unescapeAt_71
u_unescape_71
u_versionFromString_71
u_versionFromUString_71
u_versionToString_71
ualjoining%
uanjing
uarrsort.cpp
uation
ubidi.cpp
ubidi_addPropertyStarts_71
ubidi_close_71
ubidi_countParagraphs_71
ubidi_countRuns_71
ubidi_getBaseDirection_71
ubidi_getClassCallback_71
ubidi_getClass_71
ubidi_getCustomizedClass_71
ubidi_getDirection_71
ubidi_getJoiningGroup_71
ubidi_getJoiningType_71
ubidi_getLength_71
ubidi_getLevelAt_71
ubidi_getLevels_71
ubidi_getLogicalIndex_71
ubidi_getLogicalMap_71
ubidi_getLogicalRun_71
ubidi_getMaxValue_71
ubidi_getMemory_71
ubidi_getPairedBracketType_71
ubidi_getParaLevelAtIndex_71
ubidi_getParaLevel_71
ubidi_getParagraphByIndex_71
ubidi_getParagraph_71
ubidi_getProcessedLength_71
ubidi_getReorderingMode_71
ubidi_getReorderingOptions_71
ubidi_getResultLength_71
ubidi_getRuns_71
ubidi_getText_71
ubidi_getVisualIndex_71
ubidi_getVisualMap_71
ubidi_getVisualRun_71
ubidi_invertMap_71
ubidi_isBidiControl_71
ubidi_isInverse_71
ubidi_isJoinControl_71
ubidi_isMirrored_71
ubidi_isOrderParagraphsLTR_71
ubidi_openSized_71
ubidi_open_71
ubidi_orderParagraphsLTR_71
ubidi_props.cpp
ubidi_props_indexes
ubidi_props_jgArray
ubidi_props_jgArray2
ubidi_props_mirrors
ubidi_props_singleton
ubidi_props_trieIndex
ubidi_reorderLogical_71
ubidi_reorderVisual_71
ubidi_setClassCallback_71
ubidi_setContext_71
ubidi_setInverse_71
ubidi_setLine_71
ubidi_setPara_71
ubidi_setReorderingMode_71
ubidi_setReorderingOptions_71
ubidi_writeReordered_71
ubidi_writeReverse_71
ubidiln.cpp
ubiditransform.cpp
ubiditransform_close_71
ubiditransform_open_71
ubiditransform_transform_71
ubidiwrt.cpp
uble
ublequoteA
ublock_getCode_71
ubrk.cpp
ubrk_clone_71
ubrk_close_71
ubrk_countAvailable_71
ubrk_current_71
ubrk_first_71
ubrk_following_71
ubrk_getAvailable_71
ubrk_getBinaryRules_71
ubrk_getLocaleByType_71
ubrk_getRuleStatusVec_71
ubrk_getRuleStatus_71
ubrk_isBoundary_71
ubrk_last_71
ubrk_next_71
ubrk_openBinaryRules_71
ubrk_openRules_71
ubrk_open_71
ubrk_preceding_71
ubrk_previous_71
ubrk_refreshUText_71
ubrk_safeClone_71
ubrk_setText_71
ubrk_setUText_71
ubrk_swap(): RBBI Data header is invalid.\n
ubrk_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized\n
ubrk_swap(): too few bytes (%d after ICU Data header) for break data.\n
ubrk_swap_71
ucache_compareKeys_71
ucache_deleteKey_71
ucache_hashKeys_71
ucase.cpp
ucase_addCaseClosure_71
ucase_addPropertyStarts_71
ucase_addStringCaseClosure_71
ucase_fold_71
ucase_getCaseLocale_71
ucase_getSingleton_71
ucase_getTrie_71
ucase_getTypeOrIgnorable_71
ucase_getType_71
ucase_hasBinaryProperty_71
ucase_isCaseSensitive_71
ucase_isSoftDotted_71
ucase_props_exceptions
ucase_props_indexes
ucase_props_singleton
ucase_props_trieIndex
ucase_props_unfold
ucase_toFullFolding_71
ucase_toFullLower_71
ucase_toFullTitle_71
ucase_toFullUpper_71
ucase_tolower_71
ucase_totitle_71
ucase_toupper_71
ucasemap.cpp
ucasemap_close_71
ucasemap_getBreakIterator_71
ucasemap_getLocale_71
ucasemap_getOptions_71
ucasemap_internalUTF8Fold(int, unsigned int, icu_71::BreakIterator*, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
ucasemap_internalUTF8ToLower(int, unsigned int, icu_71::BreakIterator*, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
ucasemap_internalUTF8ToTitle_71
ucasemap_internalUTF8ToUpper(int, unsigned int, icu_71::BreakIterator*, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
ucasemap_mapUTF8(int, unsigned int, icu_71::BreakIterator*, char const*, int, void (*)(int, unsigned int, icu_71::BreakIterator*, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&), icu_71::ByteSink&, icu_71::Edits*, UErrorCode&)
ucasemap_mapUTF8(int, unsigned int, icu_71::BreakIterator*, char*, int, char const*, int, void (*)(int, unsigned int, icu_71::BreakIterator*, unsigned char const*, int, icu_71::ByteSink&, icu_71::Edits*, UErrorCode&), icu_71::Edits*, UErrorCode&)
ucasemap_open_71
ucasemap_setBreakIterator_71
ucasemap_setLocale_71
ucasemap_setOptions_71
ucasemap_titlecase_brkiter.cpp
ucasemap_toTitle_71
ucasemap_utf8FoldCase_71
ucasemap_utf8ToLower_71
ucasemap_utf8ToTitle_71
ucasemap_utf8ToUpper_71
ucat.cpp
uchar.cpp
uchar_addPropertyStarts_71
uchar_swapNames(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as unames.icu\n
uchar_swapNames(): too few bytes (%d after header) for unames.icu algorithmic range %u\n
uchar_swapNames(): too few bytes (%d after header) for unames.icu\n
uchar_swapNames(): unknown type %u of algorithmic range %u\n
uchar_swapNames(prefix string of algorithmic range %u) failed\n
uchar_swapNames(token strings) failed\n
uchar_swapNames_71
ucharstrenum_close(UEnumeration*)
ucharstrenum_count(UEnumeration*, UErrorCode*)
ucharstrenum_next(UEnumeration*, int*, UErrorCode*)
ucharstrenum_reset(UEnumeration*, UErrorCode*)
ucharstrenum_unext(UEnumeration*, int*, UErrorCode*)
ucharstrie.cpp
ucharstriebuilder.cpp
ucharstrieiterator.cpp
uchriter.cpp
ucln_cleanupOne_71
ucln_cmn.cpp
ucln_common_registerCleanup_71
ucln_registerCleanup_71
ucmndata.cpp
ucnv.cpp
ucnv2022.cpp
ucnv_ASCIIFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)
ucnv_DBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)
ucnv_DBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)::nul
ucnv_Latin1FromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)
ucnv_MBCSFromUnicodeWithOffsets_71
ucnv_MBCSGetFallback(UConverterMBCSTable*, unsigned int)
ucnv_MBCSGetFilteredUnicodeSetForUnicode_71
ucnv_MBCSGetName(UConverter const*)
ucnv_MBCSGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)
ucnv_MBCSGetStarters(UConverter const*, signed char*, UErrorCode*)
ucnv_MBCSGetType_71
ucnv_MBCSGetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)
ucnv_MBCSLoad(UConverterSharedData*, UConverterLoadArgs*, unsigned char const*, UErrorCode*)
ucnv_MBCSOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)
ucnv_MBCSSimpleGetNextUChar_71
ucnv_MBCSToUnicodeWithOffsets_71
ucnv_MBCSUnload(UConverterSharedData*)
ucnv_MBCSWriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)
ucnv_SBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)
ucnv_SBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)::nul
ucnv_UTF8FromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)
ucnv_bld.cpp
ucnv_bld_countAvailableConverters_71
ucnv_bld_getAvailableConverter_71
ucnv_canCreateConverter_71
ucnv_cb.cpp
ucnv_cbFromUWriteBytes_71
ucnv_cbFromUWriteSub_71
ucnv_cbFromUWriteUChars_71
ucnv_cbToUWriteSub_71
ucnv_cbToUWriteSub_71::kSubstituteChar
ucnv_cbToUWriteSub_71::kSubstituteChar1
ucnv_cbToUWriteUChars_71
ucnv_cleanup()
ucnv_clone
ucnv_clone_71
ucnv_close
ucnv_close_71
ucnv_cnv.cpp
ucnv_compareNames_71
ucnv_convertAlgorithmic(signed char, UConverterType, UConverter*, char*, int, char const*, int, UErrorCode*)
ucnv_convertEx_71
ucnv_convert_71
ucnv_countAliases_71
ucnv_countAvailable_71
ucnv_countStandards_71
ucnv_createAlgorithmicConverter_71
ucnv_createConverterFromPackage_71
ucnv_createConverterFromSharedData_71
ucnv_createConverter_71
ucnv_ct.cpp
ucnv_deleteSharedConverterData(UConverterSharedData*)
ucnv_detectUnicodeSignature_71
ucnv_enableCleanup_71
ucnv_err.cpp
ucnv_ext.cpp
ucnv_extContinueMatchFromU_71
ucnv_extContinueMatchToU_71
ucnv_extGetUnicodeSetString(UConverterSharedData const*, int const*, USetAdder const*, UConverterUnicodeSet, int, int, char16_t*, int, int, UErrorCode*)
ucnv_extGetUnicodeSet_71
ucnv_extInitialMatchFromU_71
ucnv_extInitialMatchToU_71
ucnv_extMatchFromU(int const*, int, char16_t const*, int, char16_t const*, int, unsigned int*, signed char, signed char)
ucnv_extMatchToU(int const*, signed char, char const*, int, char const*, int, unsigned int*, signed char, signed char)
ucnv_extSimpleMatchFromU_71
ucnv_extSimpleMatchToU_71
ucnv_fixFileSeparator_71
ucnv_flushCache
ucnv_flushCache() exits with %d converters remaining
ucnv_flushCache_71
ucnv_fromAlgorithmic_71
ucnv_fromUChars_71
ucnv_fromUCountPending_71
ucnv_fromUWriteBytes_71
ucnv_fromUnicode_71
ucnv_fromUnicode_UTF8_71
ucnv_fromUnicode_UTF8_OFFSETS_LOGIC_71
ucnv_getAlias_71
ucnv_getAliases_71
ucnv_getAmbiguous(UConverter const*)
ucnv_getAvailableName_71
ucnv_getCCSID_71
ucnv_getCanonicalName_71
ucnv_getDefaultName_71
ucnv_getDisplayName_71
ucnv_getFromUCallBack_71
ucnv_getInvalidChars_71
ucnv_getInvalidUChars_71
ucnv_getMaxCharSize_71
ucnv_getMinCharSize_71
ucnv_getName_71
ucnv_getNextUChar_71
ucnv_getNextUChar_UTF8(UConverterToUnicodeArgs*, UErrorCode*)
ucnv_getNonSurrogateUnicodeSet_71
ucnv_getPlatform_71
ucnv_getStandardName_71
ucnv_getStandard_71
ucnv_getStarters_71
ucnv_getSubstChars_71
ucnv_getToUCallBack_71
ucnv_getType_71
ucnv_getUnicodeSet_71
ucnv_incrementRefCount_71
ucnv_internalConvert(UConverter*, UConverter*, char*, int, char const*, int, UErrorCode*)
ucnv_io.cpp
ucnv_io_cleanup()
ucnv_io_closeUEnumeration(UEnumeration*)
ucnv_io_countAllConverters(UEnumeration*, UErrorCode*)
ucnv_io_countKnownConverters_71
ucnv_io_countStandardAliases(UEnumeration*, UErrorCode*)
ucnv_io_getConverterName_71
ucnv_io_nextAllConverters(UEnumeration*, int*, UErrorCode*)
ucnv_io_nextStandardAliases(UEnumeration*, int*, UErrorCode*)
ucnv_io_resetAllConverters(UEnumeration*, UErrorCode*)
ucnv_io_resetStandardAliases(UEnumeration*, UErrorCode*)
ucnv_io_stripASCIIForCompare_71
ucnv_io_stripEBCDICForCompare_71
ucnv_isAmbiguous_71
ucnv_isFixedWidth_71
ucnv_lmb.cpp
ucnv_load
ucnv_loadSharedData_71
ucnv_load_71
ucnv_open
ucnv_openAlgorithmic
ucnv_openAllNames_71
ucnv_openCCSID_71
ucnv_openPackage
ucnv_openPackage_71
ucnv_openStandardNames_71
ucnv_openU_71
ucnv_open_71
ucnv_outputOverflowFromUnicode(UConverter*, char**, char const*, int**, UErrorCode*)
ucnv_outputOverflowToUnicode(UConverter*, char16_t**, char16_t const*, int**, UErrorCode*)
ucnv_resetFromUnicode_71
ucnv_resetToUnicode_71
ucnv_reset_71
ucnv_safeClone_71
ucnv_set.cpp
ucnv_setDefaultName_71
ucnv_setFallback_71
ucnv_setFromUCallBack_71
ucnv_setSubstChars_71
ucnv_setSubstString_71
ucnv_setToUCallBack_71
ucnv_shareConverterData(UConverterSharedData*)
ucnv_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as an ICU .cnv conversion table\n
ucnv_swap(): error swapping converter name\n
ucnv_swap(): too few bytes (%d after header) for an ICU .cnv conversion table\n
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table with extension data\n
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table\n
ucnv_swap(): unknown conversionType=%d!=UCNV_MBCS\n
ucnv_swap(): unsupported MBCS output type 0x%x\n
ucnv_swap(): unsupported _MBCSHeader.version %d.%d\n
ucnv_swap(): unsupported combination of makeconv --small with SBCS\n
ucnv_swapAliases().swapInvChars(charset names) failed\n
ucnv_swapAliases().uprv_sortArray(%u items) failed\n
ucnv_swapAliases(): data format %02x.%02x.%02x.%02x (format version %02x) is not an alias table\n
ucnv_swapAliases(): table of contents contains unsupported number of sections (%u sections)\n
ucnv_swapAliases(): too few bytes (%d after header) for an alias table\n
ucnv_swapAliases(): unable to allocate memory for sorting tables (max length: %u)\n
ucnv_swapAliases_71
ucnv_swap_71
ucnv_toAlgorithmic_71
ucnv_toUChars_71
ucnv_toUCountPending_71
ucnv_toUWriteCodePoint_71
ucnv_toUWriteUChars_71
ucnv_toUnicode_71
ucnv_toUnicode_UTF8(UConverterToUnicodeArgs*, UErrorCode*)
ucnv_toUnicode_UTF8_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)
ucnv_u16.cpp
ucnv_u32.cpp
ucnv_u7.cpp
ucnv_u8.cpp
ucnv_unload
ucnv_unloadSharedDataIfReady_71
ucnv_unload_71
ucnv_usesFallback_71
ucnvbocu.cpp
ucnvdisp.cpp
ucnvhz.cpp
ucnvisci.cpp
ucnvlat1.cpp
ucnvmbcs.cpp
ucnvscsu.cpp
ucnvsel.cpp
ucnvsel_close_71
ucnvsel_close_selector_iterator(UEnumeration*)
ucnvsel_count_encodings(UEnumeration*, UErrorCode*)
ucnvsel_next_encoding(UEnumeration*, int*, UErrorCode*)
ucnvsel_openFromSerialized_71
ucnvsel_open_71
ucnvsel_reset_iterator(UEnumeration*, UErrorCode*)
ucnvsel_selectForString_71
ucnvsel_selectForUTF8_71
ucnvsel_serialize_71
ucnvsel_swap(): data format %02x.%02x.%02x.%02x is not recognized as UConverterSelector data\n
ucnvsel_swap(): format version %02x is not supported\n
ucnvsel_swap(): too few bytes (%d after header) for UConverterSelector data\n
ucnvsel_swap(): too few bytes (%d after header) for all of UConverterSelector data\n
ucnvsel_swap(UDataSwapper const*, void const*, int, void*, UErrorCode*)
ucol_close
ucol_getLocale
ucol_getSortKey
ucol_looksLikeCollationBinary_71
ucol_nextSortKeyPart
ucol_open
ucol_openFromShortString
ucol_strcoll
ucol_strcollIter
ucol_strcollUTF8
ucol_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as collation data\n
ucol_swap(formatVersion=3): endianness %d or charset %d does not match the swapper\n
ucol_swap(formatVersion=3): magic 0x%08x or format version %02x.%02x is not a collation binary\n
ucol_swap(formatVersion=3): too few bytes (%d after header) for collation data\n
ucol_swap(formatVersion=4): too few bytes (%d after header) for collation data\n
ucol_swap(formatVersion=4): unknown data at IX_RESERVED10_OFFSET\n
ucol_swap(formatVersion=4): unknown data at IX_RESERVED18_OFFSET\n
ucol_swap(formatVersion=4): unknown data at IX_RESERVED8_OFFSET\n
ucol_swapInverseUCA(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not an inverse UCA collation file\n
ucol_swapInverseUCA(): too few bytes (%d after header) for inverse UCA collation data\n
ucol_swapInverseUCA_71
ucol_swap_71
ucol_swp.cpp
ucpmap_getRange_71
ucpmap_get_71
ucptrie.cpp
ucptrie_close_71
ucptrie_getRange_71
ucptrie_getType_71
ucptrie_getValueWidth_71
ucptrie_get_71
ucptrie_internalGetRange_71
ucptrie_internalSmallIndex_71
ucptrie_internalSmallU8Index_71
ucptrie_internalU8PrevIndex_71
ucptrie_openFromBinary_71
ucptrie_swap_71
ucptrie_toBinary_71
ucstrFuncs
ucstrTextAccess(UText*, long, signed char)
ucstrTextClone(UText*, UText const*, signed char, UErrorCode*)
ucstrTextClose(UText*)
ucstrTextExtract(UText*, long, long, char16_t*, int, UErrorCode*)
ucstrTextLength(UText*)
ucurr.cpp
ucurr_closeCurrencyList(UEnumeration*)
ucurr_countCurrencies_71
ucurr_countCurrencyList(UEnumeration*, UErrorCode*)
ucurr_forLocaleAndDate_71
ucurr_forLocale_71
ucurr_getDefaultFractionDigitsForUsage_71
ucurr_getDefaultFractionDigits_71
ucurr_getKeywordValuesForLocale_71
ucurr_getName_71
ucurr_getNumericCode_71
ucurr_getPluralName_71
ucurr_getRoundingIncrementForUsage_71
ucurr_getRoundingIncrement_71
ucurr_isAvailable_71
ucurr_nextCurrencyList(UEnumeration*, int*, UErrorCode*)
ucurr_openISOCurrencies_71
ucurr_register_71
ucurr_resetCurrencyList(UEnumeration*, UErrorCode*)
ucurr_unregister_71
udata.cpp
udata_cacheDataItem(char const*, UDataMemory*, UErrorCode*)
udata_checkCommonData_71
udata_cleanup()
udata_closeSwapper_71
udata_close_71
udata_getHashTable(UErrorCode&)
udata_getHeaderSize_71
udata_getInfoSize_71
udata_getInfo_71
udata_getLength_71
udata_getMemory_71
udata_getRawMemory_71
udata_openChoice_71
udata_openSwapperForInputData_71
udata_openSwapper_71
udata_open_71
udata_printError_71
udata_readInt16_71
udata_readInt32_71
udata_setAppData_71
udata_setCommonData_71
udata_setFileAccess_71
udata_swapDataHeader(): header size mismatch - headerSize %d infoSize %d length %d\n
udata_swapDataHeader(): initial bytes do not look like ICU data\n
udata_swapDataHeader_71
udata_swapInvStringBlock_71
udatamem.cpp
udataswp.cpp
udict_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as dictionary data\n
udict_swap(): too few bytes (%d after header) for all of dictionary data\n
udict_swap(): too few bytes (%d after header) for dictionary data\n
udict_swap(): unknown trie type!\n
udict_swap_71
ueafterzwjA
ueafterzwjI
uemoji
uenum.cpp
uenum_close_71
uenum_count_71
uenum_nextDefault_71
uenum_next_71
uenum_openCharStringsEnumeration_71
uenum_openFromStringEnumeration_71
uenum_openUCharStringsEnumeration_71
uenum_reset_71
uenum_unextDefault_71
uenum_unext_71
ug_Arab_CN
ug_CN
uhash.cpp
uhash_close_71
uhash_compareCaselessUnicodeString_71
uhash_compareChars_71
uhash_compareIChars_71
uhash_compareLong_71
uhash_compareUChars_71
uhash_compareUnicodeString_71
uhash_containsKey_71
uhash_count_71
uhash_deleteHashtable_71
uhash_equals_71
uhash_find_71
uhash_get_71
uhash_getiAndFound_71
uhash_geti_71
uhash_hashCaselessUnicodeString_71
uhash_hashChars_71
uhash_hashIChars_71
uhash_hashLong_71
uhash_hashUChars_71
uhash_hashUnicodeString_71
uhash_icontainsKey_71
uhash_iget_71
uhash_igetiAndFound_71
uhash_igeti_71
uhash_initSize_71
uhash_init_71
uhash_iput_71
uhash_iputiAllowZero_71
uhash_iputi_71
uhash_iremove_71
uhash_iremovei_71
uhash_nextElement_71
uhash_openSize_71
uhash_open_71
uhash_put_71
uhash_putiAllowZero_71
uhash_puti_71
uhash_removeAll_71
uhash_removeElement_71
uhash_remove_71
uhash_removei_71
uhash_setKeyComparator_71
uhash_setKeyDeleter_71
uhash_setKeyHasher_71
uhash_setResizePolicy_71
uhash_setValueComparator_71
uhash_setValueDeleter_71
uhash_us.cpp
uidna.cpp
uidna_IDNToASCII_71
uidna_IDNToUnicode_71
uidna_close_71
uidna_compare_71
uidna_labelToASCII_71
uidna_labelToASCII_UTF8_71
uidna_labelToUnicodeUTF8_71
uidna_labelToUnicode_71
uidna_nameToASCII_71
uidna_nameToASCII_UTF8_71
uidna_nameToUnicodeUTF8_71
uidna_nameToUnicode_71
uidna_openUTS46_71
uidna_toASCII_71
uidna_toUnicode_71
uinit.cpp
uinvchar.cpp
uiter.cpp
uiter_current32_71
uiter_getState_71
uiter_next32_71
uiter_previous32_71
uiter_setCharacterIterator_71
uiter_setReplaceable_71
uiter_setState_71
uiter_setString_71
uiter_setUTF16BE_71
uiter_setUTF8_71
uk_UA
ukhiA
ulayout
uldn_close_71
uldn_getContext_71
uldn_getDialectHandling_71
uldn_getLocale_71
uldn_keyDisplayName_71
uldn_keyValueDisplayName_71
uldn_languageDisplayName_71
uldn_localeDisplayName_71
uldn_openForContext_71
uldn_open_71
uldn_regionDisplayName_71
uldn_scriptCodeDisplayName_71
uldn_scriptDisplayName_71
uldn_variantDisplayName_71
ulist.cpp
ulist_addItemBeginList_71
ulist_addItemEndList_71
ulist_close_keyword_values_iterator_71
ulist_containsString_71
ulist_count_keyword_values_71
ulist_createEmptyList_71
ulist_deleteList_71
ulist_getListFromEnum_71
ulist_getListSize_71
ulist_getNext_71
ulist_next_keyword_value_71
ulist_removeString_71
ulist_resetList_71
ulist_reset_keyword_values_iterator_71
ullcomp
ullwidth'$
uloc.cpp
uloc_acceptLanguageFromHTTP_71
uloc_acceptLanguage_71
uloc_addLikelySubtags_71
uloc_canonicalize_71
uloc_countAvailable_71
uloc_forLanguageTag_71
uloc_getAvailable_71
uloc_getBaseName_71
uloc_getCharacterOrientation_71
uloc_getCountry_71
uloc_getCurrentCountryID_71
uloc_getCurrentLanguageID_71
uloc_getDefault_71
uloc_getDisplayCountry_71
uloc_getDisplayKeywordValue_71
uloc_getDisplayKeyword_71
uloc_getDisplayLanguage_71
uloc_getDisplayName_71
uloc_getDisplayName_71::defaultPattern
uloc_getDisplayName_71::defaultSeparator
uloc_getDisplayName_71::sub0
uloc_getDisplayName_71::sub1
uloc_getDisplayScript_71
uloc_getDisplayVariant_71
uloc_getISO3Country_71
uloc_getISO3Language_71
uloc_getISOCountries_71
uloc_getISOLanguages_71
uloc_getKeywordValue_71
uloc_getLCID_71
uloc_getLanguage_71
uloc_getLineOrientation_71
uloc_getLocaleForLCID_71
uloc_getName_71
uloc_getParent_71
uloc_getScript_71
uloc_getTableStringWithFallback_71
uloc_getVariant_71
uloc_isRightToLeft_71
uloc_key_type_cleanup()
uloc_keytype.cpp
uloc_kw_closeKeywords(UEnumeration*)
uloc_kw_countKeywords(UEnumeration*, UErrorCode*)
uloc_kw_nextKeyword(UEnumeration*, int*, UErrorCode*)
uloc_kw_resetKeywords(UEnumeration*, UErrorCode*)
uloc_minimizeSubtags_71
uloc_openAvailableByType_71
uloc_openKeywordList_71
uloc_openKeywords_71
uloc_setDefault_71
uloc_setKeywordValue_71
uloc_tag.cpp
uloc_toLanguageTag_71
uloc_toLegacyKey_71
uloc_toLegacyType_71
uloc_toUnicodeLocaleKey_71
uloc_toUnicodeLocaleType_71
ulocimp_addLikelySubtags_71
ulocimp_canonicalize_71
ulocimp_forLanguageTag_71
ulocimp_getBaseName_71
ulocimp_getCountry_71(char const*, char const**, UErrorCode&)
ulocimp_getKeywordValue_71
ulocimp_getKeywords_71
ulocimp_getKnownCanonicalizedLocaleForTest_71
ulocimp_getLanguage_71(char const*, char const**, UErrorCode&)
ulocimp_getName_71
ulocimp_getRegionForSupplementalData_71
ulocimp_getScript_71(char const*, char const**, UErrorCode&)
ulocimp_isCanonicalizedLocaleForTest_71
ulocimp_minimizeSubtags_71
ulocimp_toBcpKey_71
ulocimp_toBcpType_71
ulocimp_toLanguageTag_71
ulocimp_toLegacyKey_71
ulocimp_toLegacyType_71
ultag_getTKeyStart_71
ultag_isExtensionSubtags_71
ultag_isLanguageSubtag_71
ultag_isPrivateuseValueSubtags_71
ultag_isRegionSubtag_71
ultag_isScriptSubtag_71
ultag_isTransformedExtensionSubtags_71
ultag_isUnicodeExtensionSubtags_71
ultag_isUnicodeLocaleAttribute_71
ultag_isUnicodeLocaleAttributes_71
ultag_isUnicodeLocaleKey_71
ultag_isUnicodeLocaleType_71
ultag_isVariantSubtags_71
umapfile.cpp
umath.cpp
umber
umber%
umber+
umber7
umberforms
umbers
umtx_lock_71
umtx_unlock_71
umutablecptrie.cpp
umutablecptrie_buildImmutable_71
umutablecptrie_clone_71
umutablecptrie_close_71
umutablecptrie_fromUCPMap_71
umutablecptrie_fromUCPTrie_71
umutablecptrie_getRange_71
umutablecptrie_get_71
umutablecptrie_open_71
umutablecptrie_setRange_71
umutablecptrie_set_71
umutex.cpp
unames
unames.cpp
unames/makeTokenMap() finds variant character 0x%02x used (input charset family %d)\n
unassigned
unctuation
unctuationO
und-u-
und-x-
und-x-i-enochian
und_
undaryneutralE
ungarian
uni32InitOnce
uni32Singleton
unifiedcache.cpp
unifiedcache_cleanup()
unifilt.cpp
unifunct.cpp
uniset.cpp
uniset_closure.cpp
uniset_getUnicode32Instance_71
uniset_props.cpp
unisetspan.cpp
unistr.cpp
unistrFuncs
unistrTextAccess(UText*, long, signed char)
unistrTextClone(UText*, UText const*, signed char, UErrorCode*)
unistrTextClose(UText*)
unistrTextCopy(UText*, long, long, long, signed char, UErrorCode*)
unistrTextExtract(UText*, long, long, char16_t*, int, UErrorCode*)
unistrTextLength(UText*)
unistrTextReplace(UText*, long, long, char16_t const*, int, UErrorCode*)
unistr_case.cpp
unistr_case_locale.cpp
unistr_cnv.cpp
unistr_props.cpp
unistr_titlecase_brkiter.cpp
unload converter %s shared data %p
unorm.cpp
unorm2_append_71
unorm2_close_71
unorm2_composePair_71
unorm2_getCombiningClass_71
unorm2_getDecomposition_71
unorm2_getInstance_71
unorm2_getNFCInstance_71
unorm2_getNFDInstance_71
unorm2_getNFKCCasefoldInstance_71
unorm2_getNFKCInstance_71
unorm2_getNFKDInstance_71
unorm2_getRawDecomposition_71
unorm2_hasBoundaryAfter_71
unorm2_hasBoundaryBefore_71
unorm2_isInert_71
unorm2_isNormalized_71
unorm2_normalizeSecondAndAppend_71
unorm2_normalize_71
unorm2_openFiltered_71
unorm2_quickCheck_71
unorm2_spanQuickCheckYes_71
unorm2_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as Normalizer2 data\n
unorm2_swap(): too few bytes (%d after header) for Normalizer2 data\n
unorm2_swap(): too few bytes (%d after header) for all of Normalizer2 data\n
unorm2_swap_71
unorm_compare_71
unorm_concatenate_71
unorm_getFCD16_71
unorm_getQuickCheck_71
unorm_isNormalizedWithOptions_71
unorm_isNormalized_71
unorm_iterate(UCharIterator*, signed char, char16_t*, int, UNormalizationMode, int, signed char, signed char*, UErrorCode*)
unorm_next_71
unorm_normalize_71
unorm_previous_71
unorm_quickCheckWithOptions_71
unorm_quickCheck_71
unormcmp.cpp
uobject.cpp
updateSrc(UBiDiTransform*, char16_t const*, unsigned int, unsigned int, UErrorCode*)
uppercase letter
upplement
uprops.cpp
uprops_addPropertyStarts_71
uprops_getSource_71
upropsvec_addPropertyStarts_71
uprv_add32_overflow_71
uprv_aestrncpy_71
uprv_asciiFromEbcdic() string[%d] contains a variant character in position %d\n
uprv_asciiFromEbcdic_71
uprv_asciitolower_71
uprv_calloc_71
uprv_ceil_71
uprv_compareASCIIPropertyNames_71
uprv_compareEBCDICPropertyNames_71
uprv_compareInvAscii_71
uprv_compareInvEbcdicAsAscii_71
uprv_compareInvEbcdic_71
uprv_convertToLCIDPlatform_71
uprv_convertToLCID_71
uprv_convertToPosix_71
uprv_copyArray16(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_copyArray32(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_copyArray64(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_copyAscii_71
uprv_copyEbcdic() string[%] contains a variant character in position %d\n
uprv_copyEbcdic_71
uprv_copyFromAscii() string[%d] contains a variant character in position %d\n
uprv_deleteUObject_71
uprv_dl_close_71
uprv_dl_open_71
uprv_dlsym_func_71
uprv_eastrncpy_71
uprv_ebcdicFromAscii() string[%d] contains a variant character in position %d\n
uprv_ebcdicFromAscii_71
uprv_ebcdicToAscii_71
uprv_ebcdicToLowercaseAscii_71
uprv_ebcdictolower_71
uprv_fabs_71
uprv_floor_71
uprv_fmax_71
uprv_fmin_71
uprv_fmod_71
uprv_free_71
uprv_getCharNameCharacters_71
uprv_getDefaultLocaleID_71
uprv_getInfinity_71
uprv_getMaxCharNameLength_71
uprv_getMaxValues_71
uprv_getNaN_71
uprv_getPOSIXIDForDefaultLocale()::posixID
uprv_getRawUTCtime_71
uprv_getStaticCurrencyName_71
uprv_getUTCtime_71
uprv_int32Comparator_71
uprv_isASCIILetter_71
uprv_isInfinite_71
uprv_isInvariantString_71
uprv_isInvariantUString_71
uprv_isNaN_71
uprv_isNegativeInfinity_71
uprv_isPositiveInfinity_71
uprv_itou_71
uprv_log_71
uprv_malloc_71
uprv_mapFile_71
uprv_maxMantissa_71
uprv_max_71
uprv_maximumPtr_71
uprv_min_71
uprv_modf_71
uprv_mul32_overflow_71
uprv_parseCurrency_71
uprv_pathIsAbsolute_71
uprv_pow10_71
uprv_pow_71
uprv_readDirectUInt16(unsigned short)
uprv_readDirectUInt32(unsigned int)
uprv_readSwapUInt16(unsigned short)
uprv_readSwapUInt32(unsigned int)
uprv_realloc_71
uprv_round_71
uprv_sortArray_71
uprv_stableBinarySearch_71
uprv_strCompare_71
uprv_strdup_71
uprv_stricmp_71
uprv_strndup_71
uprv_strnicmp_71
uprv_swapArray16(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_swapArray32(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_swapArray64(UDataSwapper const*, void const*, int, void*, UErrorCode*)
uprv_syntaxError_71
uprv_timezone_71
uprv_toupper_71
uprv_trunc_71
uprv_tzname_71
uprv_tzname_71::decemberSolstice
uprv_tzname_71::juneSolstice
uprv_tzname_clear_cache_71
uprv_tzset_71
uprv_uint16Comparator_71
uprv_uint32Comparator_71
uprv_unmapFile_71
uprv_writeDirectUInt16(unsigned short*, unsigned short)
uprv_writeDirectUInt32(unsigned int*, unsigned int)
uprv_writeSwapUInt16(unsigned short*, unsigned short)
uprv_writeSwapUInt32(unsigned int*, unsigned int)
upvec_cloneArray_71
upvec_close_71
upvec_compactToUTrie2Handler_71
upvec_compactToUTrie2WithRowIndexes_71
upvec_compact_71
upvec_compareRows(void const*, void const*, void const*)
upvec_getArray_71
upvec_getRow_71
upvec_getValue_71
upvec_open_71
upvec_setValue_71
ur_IN
ur_PK
urekillerU
ures_appendResPath(UResourceBundle*, char const*, int, UErrorCode*)
ures_cleanup()
ures_closeBundle(UResourceBundle*, signed char)
ures_close_71
ures_cnv.cpp
ures_compareRows(void const*, void const*, void const*)
ures_copyResb_71
ures_countArrayItems_71
ures_findResource_71
ures_findSubResource_71
ures_getAllChildrenWithFallback_71
ures_getAllItemsWithFallback_71
ures_getBinary_71
ures_getByIndex_71
ures_getByKeyWithFallback_71
ures_getByKey_71
ures_getFunctionalEquivalent_71
ures_getIntVector_71
ures_getInt_71
ures_getKey_71
ures_getKeywordValues_71
ures_getLocaleByType_71
ures_getLocaleInternal_71
ures_getLocale_71
ures_getName_71
ures_getNextResource_71
ures_getNextString_71
ures_getSize_71
ures_getStringByIndex_71
ures_getStringByKeyWithFallback_71
ures_getStringByKey_71
ures_getStringWithAlias(UResourceBundle const*, unsigned int, int, int*, UErrorCode*)
ures_getString_71
ures_getType_71
ures_getUInt_71
ures_getUTF8StringByIndex_71
ures_getUTF8StringByKey_71
ures_getUTF8String_71
ures_getValueWithFallback_71
ures_getVersionByKey_71
ures_getVersionNumberInternal_71
ures_getVersionNumber_71
ures_getVersion_71
ures_hasNext_71
ures_initStackObject_71
ures_loc_closeLocales(UEnumeration*)
ures_loc_countLocales(UEnumeration*, UErrorCode*)
ures_loc_nextLocale(UEnumeration*, int*, UErrorCode*)
ures_loc_resetLocales(UEnumeration*, UErrorCode*)
ures_openAvailableLocales_71
ures_openDirectFillIn_71
ures_openDirect_71
ures_openFillIn_71
ures_openNoDefault_71
ures_openU_71
ures_openWithType(UResourceBundle*, char const*, char const*, UResOpenType, UErrorCode*)
ures_open_71
ures_resetIterator_71
ures_swap().swapArray16(16-bit units[%d]) failed\n
ures_swap().udata_swapInvStringBlock(keys[%d]) failed\n
ures_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not a resource bundle\n
ures_swap(): resource top %d exceeds bundle length %d\n
ures_swap(): too few bytes (%d after header) for a resource bundle\n
ures_swap(): too few indexes for a 1.1+ resource bundle\n
ures_swap(): unable to allocate memory for sorting tables (max length: %d)\n
ures_swap(): unable to allocate memory for tracking resources\n
ures_swapResource(UDataSwapper const*, unsigned int const*, unsigned int*, unsigned int, char const*, TempTable*, UErrorCode*)
ures_swapResource(array res=%08x)[%d].recurse(%08x) failed\n
ures_swapResource(root res=%08x) failed\n
ures_swapResource(table res=%08x).uprv_sortArray(%d items) failed\n
ures_swapResource(table res=%08x)[%d].recurse(%08x) failed\n
ures_swap_71
ures_toUTF8String(char16_t const*, int, char*, int*, signed char, UErrorCode*)
uresbund.cpp
uresdata.cpp
urkic
urrogates
ursive
usascii
usc_impl.cpp
uscript.cpp
uscript_breaksBetweenLetters_71
uscript_closeRun_71
uscript_getCode_71
uscript_getName_71
uscript_getSampleString_71
uscript_getSampleUnicodeString_71(UScriptCode)
uscript_getScriptExtensions_71
uscript_getScript_71
uscript_getShortName_71
uscript_getUsage_71
uscript_hasScript_71
uscript_isCased_71
uscript_isRightToLeft_71
uscript_nextRun_71
uscript_openRun_71
uscript_props.cpp
uscript_resetRun_71
uscript_setRunText_71
uset.cpp
uset_addAllCodePoints_71
uset_addAll_71
uset_addRange_71
uset_addString_71
uset_add_71
uset_applyIntPropertyValue_71
uset_applyPattern_71
uset_applyPropertyAlias_71
uset_charAt_71
uset_cleanup()
uset_clear_71
uset_cloneAsThawed_71
uset_clone_71
uset_closeOver_71
uset_close_71
uset_compact_71
uset_complementAllCodePoints_71
uset_complementAll_71
uset_complementRange_71
uset_complementString_71
uset_complement_71
uset_containsAllCodePoints_71
uset_containsAll_71
uset_containsNone_71
uset_containsRange_71
uset_containsSome_71
uset_containsString_71
uset_contains_71
uset_equals_71
uset_freeze_71
uset_getItemCount_71
uset_getItem_71
uset_getRangeCount_71
uset_getSerializedRangeCount_71
uset_getSerializedRange_71
uset_getSerializedSet_71
uset_hasStrings_71
uset_indexOf_71
uset_isEmpty_71
uset_isFrozen_71
uset_openEmpty_71
uset_openPatternOptions_71
uset_openPattern_71
uset_open_71
uset_props.cpp
uset_removeAllCodePoints_71
uset_removeAllStrings_71
uset_removeAll_71
uset_removeRange_71
uset_removeString_71
uset_remove_71
uset_resemblesPattern_71
uset_retainAllCodePoints_71
uset_retainAll_71
uset_retainString_71
uset_retain_71
uset_serialize_71
uset_serializedContains_71
uset_setSerializedToOne_71
uset_set_71
uset_size_71
uset_spanBackUTF8_71
uset_spanBack_71
uset_spanUTF8_71
uset_span_71
uset_toPattern_71
usetiter.cpp
ushape.cpp
ushaskiyehbarree
usic
usprep.cpp
usprepMutex
usprep_cleanup()
usprep_close_71
usprep_map(UStringPrepProfile const*, char16_t const*, int, char16_t*, int, int, UParseError*, UErrorCode*)
usprep_openByType_71
usprep_open_71
usprep_prepare_71
usprep_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as StringPrep .spp data\n
usprep_swap(): too few bytes (%d after header) for StringPrep .spp data\n
usprep_swap(): too few bytes (%d after header) for all of StringPrep .spp data\n
usprep_swap_71
ustack.cpp
ustr_cnv.cpp
ustr_hashCharsN_71
ustr_hashICharsN_71
ustr_hashUCharsN_71
ustr_titlecase_brkiter.cpp
ustr_wcs.cpp
ustrcase.cpp
ustrcase_getCaseLocale_71
ustrcase_getTitleBreakIterator_71
ustrcase_internalFold_71
ustrcase_internalToLower_71
ustrcase_internalToTitle_71
ustrcase_internalToUpper_71
ustrcase_locale.cpp
ustrcase_mapWithOverlap_71
ustrcase_map_71
ustrenum.cpp
ustrenum_close(UEnumeration*)
ustrenum_count(UEnumeration*, UErrorCode*)
ustrenum_next(UEnumeration*, int*, UErrorCode*)
ustrenum_reset(UEnumeration*, UErrorCode*)
ustrenum_unext(UEnumeration*, int*, UErrorCode*)
ustrfmt.cpp
ustring.cpp
ustrtrns.cpp
utext.cpp
utext_char32At_71
utext_clone_71
utext_close_71
utext_copy_71
utext_current32_71
utext_equals_71
utext_extract_71
utext_freeze_71
utext_getNativeIndex_71
utext_getPreviousNativeIndex_71
utext_hasMetaData_71
utext_isLengthExpensive_71
utext_isWritable_71
utext_moveIndex32_71
utext_nativeLength_71
utext_next32From_71
utext_next32_71
utext_openCharacterIterator_71
utext_openConstUnicodeString_71
utext_openReplaceable_71
utext_openUChars_71
utext_openUTF8_71
utext_openUnicodeString_71
utext_previous32From_71
utext_previous32_71
utext_replace_71
utext_setNativeIndex_71
utext_setup_71
utf16
utf16BEIterator
utf16BEIteratorCurrent(UCharIterator*)
utf16BEIteratorNext(UCharIterator*)
utf16BEIteratorPrevious(UCharIterator*)
utf16be
utf16le
utf16oppositeendian
utf16platformendian
utf8
utf8Funcs
utf8Iterator
utf8IteratorCurrent(UCharIterator*)
utf8IteratorGetIndex(UCharIterator*, UCharIteratorOrigin)
utf8IteratorGetState(UCharIterator const*)
utf8IteratorHasNext(UCharIterator*)
utf8IteratorHasPrevious(UCharIterator*)
utf8IteratorMove(UCharIterator*, int, UCharIteratorOrigin)
utf8IteratorNext(UCharIterator*)
utf8IteratorPrevious(UCharIterator*)
utf8IteratorSetState(UCharIterator*, unsigned int, UErrorCode*)
utf8TextAccess(UText*, long, signed char)
utf8TextClone(UText*, UText const*, signed char, UErrorCode*)
utf8TextClose(UText*)
utf8TextExtract(UText*, long, long, char16_t*, int, UErrorCode*)
utf8TextLength(UText*)
utf8TextMapIndexToUTF16(UText const*, long)
utf8TextMapOffsetToNative(UText const*)
utf8_appendCharSafeBody_71
utf8_back1SafeBody_71
utf8_countTrailBytes_71
utf8_errorValue
utf8_nextCharSafeBody_71
utf8_offsets
utf8_prevCharSafeBody_71
utf_impl.cpp
util.cpp
util_props.cpp
utrace.cpp
utrace_cleanup_71
utrace_data_71
utrace_entry_71
utrace_exit_71
utrace_format_71
utrace_functionName_71
utrace_getFunctions_71
utrace_getLevel_71
utrace_level
utrace_setFunctions_71
utrace_setLevel_71
utrace_vformat_71
utral!(
utrie.cpp
utrie2.cpp
utrie2_builder.cpp
utrie2_cloneAsThawed_71
utrie2_clone_71
utrie2_close_71
utrie2_enumForLeadSurrogate_71
utrie2_enum_71
utrie2_freeze_71
utrie2_fromUTrie_71
utrie2_get32FromLeadSurrogateCodeUnit_71
utrie2_get32_71
utrie2_internalU8NextIndex_71
utrie2_internalU8PrevIndex_71
utrie2_isFrozen_71
utrie2_openDummy_71
utrie2_openFromSerialized_71
utrie2_open_71
utrie2_serialize_71
utrie2_set32ForLeadSurrogateCodeUnit_71
utrie2_set32_71
utrie2_setRange32_71
utrie2_swap_71
utrie_clone_71
utrie_close_71
utrie_compact(UNewTrie*, signed char, UErrorCode*)
utrie_defaultGetFoldingOffset_71
utrie_enum_71
utrie_get32_71
utrie_getData_71
utrie_open_71
utrie_serialize_71
utrie_set32_71
utrie_setRange32_71
utrie_swap.cpp
utrie_swapAnyVersion_71
utrie_swap_71
utrie_unserializeDummy_71
utrie_unserialize_71
uts46
uts46.cpp
utypes.cpp
uvector.cpp
uvectr32.cpp
uvectr64.cpp
uz_Cyrl
uz_Cyrl_UZ
uz_Latn
uz_Latn_UZ
uz_UZ
v\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\v
v\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\vv\v
vagraha#
ve_ZA
ven_ZA
verride9
verride?
verstruck-
vert
vi_VN
void icu_71::(anonymous namespace)::MixedBlocks::extend<unsigned int>(unsigned int const*, int, int, int)
void icu_71::(anonymous namespace)::MixedBlocks::extend<unsigned short>(unsigned short const*, int, int, int)
void std::Cr::__call_once_proxy[abi:v16000]<std::Cr::tuple<void (&)()>>(void*)
vtable for (anonymous namespace)::AvailableLocalesSink
vtable for (anonymous namespace)::AvailableLocalesStringEnumeration
vtable for (anonymous namespace)::GetAllChildrenSink
vtable for (anonymous namespace)::ParseDataSink
vtable for icu_71::Appendable
vtable for icu_71::Array1D
vtable for icu_71::BMPSet
vtable for icu_71::BreakIterator
vtable for icu_71::BurmeseBreakEngine
vtable for icu_71::ByteSink
vtable for icu_71::BytesDictionaryMatcher
vtable for icu_71::BytesTrieBuilder
vtable for icu_71::BytesTrieBuilder::BTLinearMatchNode
vtable for icu_71::CacheKeyBase
vtable for icu_71::CanonicalIterator
vtable for icu_71::CharStringByteSink
vtable for icu_71::CharacterIterator
vtable for icu_71::CheckedArrayByteSink
vtable for icu_71::CjkBreakEngine
vtable for icu_71::CodePointsVectorizer
vtable for icu_71::ComposeNormalizer2
vtable for icu_71::ConstArray1D
vtable for icu_71::ConstArray2D
vtable for icu_71::DateInterval
vtable for icu_71::DecomposeNormalizer2
vtable for icu_71::DictionaryBreakEngine
vtable for icu_71::DictionaryMatcher
vtable for icu_71::ErrorCode
vtable for icu_71::EventListener
vtable for icu_71::FCDNormalizer2
vtable for icu_71::FilteredBreakIteratorBuilder
vtable for icu_71::FilteredNormalizer2
vtable for icu_71::ForwardCharacterIterator
vtable for icu_71::GraphemeClusterVectorizer
vtable for icu_71::ICUBreakIteratorFactory
vtable for icu_71::ICUBreakIteratorService
vtable for icu_71::ICULanguageBreakFactory
vtable for icu_71::ICULocaleService
vtable for icu_71::ICUNotifier
vtable for icu_71::ICUResourceBundleFactory
vtable for icu_71::ICUService
vtable for icu_71::ICUServiceFactory
vtable for icu_71::ICUServiceKey
vtable for icu_71::IDNA
vtable for icu_71::KeywordEnumeration
vtable for icu_71::KhmerBreakEngine
vtable for icu_71::LSTMBreakEngine
vtable for icu_71::LanguageBreakEngine
vtable for icu_71::LaoBreakEngine
vtable for icu_71::LoadedNormalizer2Impl
vtable for icu_71::Locale
vtable for icu_71::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>
vtable for icu_71::Locale::Iterator
vtable for icu_71::LocaleBuilder
vtable for icu_71::LocaleDisplayNames
vtable for icu_71::LocaleDisplayNamesImpl
vtable for icu_71::LocaleDisplayNamesImpl::CapitalizationContextSink
vtable for icu_71::LocaleKey
vtable for icu_71::LocaleKeyFactory
vtable for icu_71::LocalePriorityList::Iterator
vtable for icu_71::MessagePattern
vtable for icu_71::NoopNormalizer2
vtable for icu_71::Normalizer
vtable for icu_71::Normalizer2
vtable for icu_71::Normalizer2Impl
vtable for icu_71::ParsePosition
vtable for icu_71::RBBIRuleBuilder
vtable for icu_71::RBBIRuleScanner
vtable for icu_71::RBBISymbolTable
vtable for icu_71::Replaceable
vtable for icu_71::ResourceBundle
vtable for icu_71::ResourceDataValue
vtable for icu_71::ResourceSink
vtable for icu_71::ResourceValue
vtable for icu_71::RuleBasedBreakIterator
vtable for icu_71::RuleBasedBreakIterator::BreakCache
vtable for icu_71::ServiceEnumeration
vtable for icu_71::ServiceListener
vtable for icu_71::SharedObject
vtable for icu_71::SimpleFactory
vtable for icu_71::SimpleFilteredBreakIteratorBuilder
vtable for icu_71::SimpleFilteredSentenceBreakData
vtable for icu_71::SimpleFilteredSentenceBreakIterator
vtable for icu_71::SimpleLocaleKeyFactory
vtable for icu_71::StringCharacterIterator
vtable for icu_71::StringEnumeration
vtable for icu_71::StringTrieBuilder
vtable for icu_71::StringTrieBuilder::BranchHeadNode
vtable for icu_71::StringTrieBuilder::FinalValueNode
vtable for icu_71::StringTrieBuilder::IntermediateValueNode
vtable for icu_71::StringTrieBuilder::LinearMatchNode
vtable for icu_71::StringTrieBuilder::ListBranchNode
vtable for icu_71::StringTrieBuilder::Node
vtable for icu_71::StringTrieBuilder::SplitBranchNode
vtable for icu_71::StringTrieBuilder::ValueNode
vtable for icu_71::SymbolTable
vtable for icu_71::ThaiBreakEngine
vtable for icu_71::UCharCharacterIterator
vtable for icu_71::UCharsDictionaryMatcher
vtable for icu_71::UCharsTrieBuilder
vtable for icu_71::UCharsTrieBuilder::UCTLinearMatchNode
vtable for icu_71::UObject
vtable for icu_71::UStack
vtable for icu_71::UStringEnumeration
vtable for icu_71::UStringSet
vtable for icu_71::UTS46
vtable for icu_71::UVector
vtable for icu_71::UVector32
vtable for icu_71::UVector64
vtable for icu_71::UnhandledEngine
vtable for icu_71::UnicodeFilter
vtable for icu_71::UnicodeFunctor
vtable for icu_71::UnicodeKeywordEnumeration
vtable for icu_71::UnicodeMatcher
vtable for icu_71::UnicodeSet
vtable for icu_71::UnicodeSetIterator
vtable for icu_71::UnicodeString
vtable for icu_71::UnicodeStringAppendable
vtable for icu_71::UnifiedCache
vtable for icu_71::UnifiedCacheBase
vtable for icu_71::WholeStringBreakIterator
vzvjw
welb
wer)
wercaseletter%e(i<l%
wercaseletter)c=e(iBl)
wide
windowsZones
wintz.cpp
wjsequence
wline9f?f@gNhpk
wo_SN
wsurrogates
x!l6m<nvo
x!n`o
x!r(sPt1
xK4K5
xKyK
xh_ZA
xtend7
xtended
xtline[
yehHamzaToYeh
yghur
yi_001
yllabary
yllabiccategory
yllable)
yllablemodifierY
yllables
ymbo
ymbol
ymbolU
ymbolW
ymbols
ymbolsW
ynasticcuneiform
yntaxu
yo_NG
yprivateusearea
yptianhieroglyph
yrene
yue_HK
yue_Hant
yue_Hant_HK
yy!a0iXm
z\rw\rr
z^L~no
zantinemusic
zaonhehgoal=
zeroMem
zh-cmn
zh-cmn-hans
zh-cmn-hant
zh-gan
zh-guoyu
zh-hakka
zh-min-nan
zh-wuu
zh-xiang
zh-yue
zh@collation=stroke
zh_CN
zh_CN@collation=stroke
zh_GAN
zh_HK
zh_Hans
zh_Hans@collation=stroke
zh_Hans_CN
zh_Hans_CN@collation=stroke
zh_Hans_SG
zh_Hant
zh_Hant@collation=stroke
zh_Hant_HK
zh_Hant_MO
zh_Hant_TW
zh_Hant_TW@collation=stroke
zh_MIN_NAN
zh_MO
zh_SG
zh_TW
zh_TW@collation=stroke
zh_WUU
zh_YUE
zh__GUOYU
zh__HAKKA
zh__XIANG
zidi
zoneinfo64
zu_ZA
zzzz
{ABCDEFGHI
{abcdefghi
}JKLMNOPQR
}jklmnopqr
~stuvwxyz
