<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	csgo_mega = 
	{
		operators = 
		[
			
			{
				name = "public"
				operator = "util_null"
				operator_variables = 
				{
					mixgroup = 
					{
						data_type = "string"
						value = "Dialog"
						__customstack_keep_at_start = "1"
						_system_properties = 
						{
							display_group = "normal"
						}
					}
					volume = 
					{
						__customstack_field = "volume"
						value = "1.000000"
						__customstack_has_random = "1"
						__customstack_rand_min = "0.000000"
						__customstack_rand_max = "0.000000"
						data_type = "float"
					}
					volume_random_min = 
					{
						value = "0.000000"
						data_type = "float"
					}
					volume_random_max = 
					{
						value = "0.000000"
						data_type = "float"
					}
					pitch = 
					{
						__customstack_field = "pitch"
						value = "1.000000"
						__customstack_has_random = "1"
						__customstack_rand_min = "0.000000"
						__customstack_rand_max = "0.000000"
						data_type = "float"
					}
					pitch_random_min = 
					{
						value = "0.000000"
						data_type = "float"
					}
					pitch_random_max = 
					{
						value = "0.000000"
						data_type = "float"
					}
					vsnd_files_track_01 = 
					{
						__customstack_field = "vsnd_files_track_01"
						value = "sounds/common/null.vsnd"
						__customstack_has_random = "0"
						__customstack_rand_min = "0.000000"
						__customstack_rand_max = "0.000000"
						soundevent_data = "true"
						data_type = "vsnd"
					}
					impact_speed_input = 
					{
						__customstack_field = "impact_speed_input"
						value = "1.000000"
						__customstack_has_random = "0"
						__customstack_rand_min = "0.000000"
						__customstack_rand_max = "0.000000"
						data_type = "float"
					}
					delay = 
					{
						data_type = "float"
						value = "0"
						_system_properties = 
						{
							display_group = "normal"
						}
					}
					instance_limit = 
					{
						data_type = "float"
						value = "0"
						_system_properties = 
						{
							display_group = "normal"
						}
					}
					display_broadcast = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					broadcast_distance_override = 
					{
						data_type = "float"
						value = "0"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					enable_child_events = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					set_child_position = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					soundevent_01 = 
					{
						soundevent_data = "true"
						data_type = "sndevt"
						value = ""
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					position = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
						_system_properties = 
						{
							display_edit_type = "field_position_editor"
							property_group = "Position"
						}
					}
					position_offset = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					position_offset_relative = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					is_ui_sound = 
					{
						data_type = "bool"
						value = "false"
					}
					use_uiposition = 
					{
						data_type = "bool"
						value = "false"
					}
					uiposition = 
					{
						data_type = "float3"
						value = "[0.0, 0.0, 0.0]"
						_system_properties = 
						{
							display_edit_type = "field_position_editor"
							property_group = "Position"
						}
					}
					source_soundscape = 
					{
						data_type = "int"
						value = "-1"
						_system_properties = 
						{
							display_edit_type = "field_position_editor"
							property_group = "Position"
						}
					}
					use_occlusion_pathing = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					occlusion_path_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "1.0000 0.3000 0.0000 0.000 0.000 0.000"
							value2 = "2.0000 0.8000 0.0000 0.000 0.000 0.000"
							value3 = "4.0000 1.00000 0.0000 0.000 0.000 0.000"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_occlusion_pathing"
						}
					}
					use_world_position = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					position_relative_to_player = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					use_entity_position_if_local_player = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							property_group = "Position"
						}
					}
					vsnd_pause_with_game = 
					{
						data_type = "bool"
						value = "true"
					}
					self_destruct_time = 
					{
						data_type = "float"
						value = "-1"
						_system_properties = 
						{
							display_group = "normal"
						}
					}
					block_matching_events = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Events"
						}
					}
					block_match_entity = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Events"
						}
					}
					block_duration = 
					{
						data_type = "float"
						value = "0.010000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Events"
						}
					}
					block_distance = 
					{
						data_type = "float"
						value = "12.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Events"
						}
					}
					block_other = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Other Events"
						}
					}
					block_other_name = 
					{
						data_type = "string"
						value = ""
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Other Events"
						}
					}
					block_other_distance = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Other Events"
						}
					}
					block_other_duration = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "block:Block Other Events"
						}
					}
					distance_multiplier = 
					{
						data_type = "float"
						value = "1"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Position"
						}
					}
					attachment = 
					{
						data_type = "string_token"
						value = ""
						_system_properties = 
						{
							display_group = "locked"
						}
					}
					use_doppler = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Doppler"
						}
					}
					doppler_factor = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Doppler"
						}
					}
					doppler_factor_receding = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Doppler"
						}
					}
					reverb_wet = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					reverb_source_wet = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					override_dsp_preset = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					dsp_preset = 
					{
						data_type = "dsppreset"
						value = ""
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					dsp_bypass = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Player DSP"
						}
					}
					dsp_blend = 
					{
						data_type = "float"
						value = "-1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Player DSP"
						}
					}
					ducking_bypass = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Player DSP"
						}
					}
					randomize_position_min_radius = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Position"
						}
					}
					randomize_position_max_radius = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Position"
						}
					}
					randomize_position_hemisphere = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Position"
						}
					}
					occlusion_intensity = 
					{
						data_type = "float"
						value = "0.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					occlusion_interval = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					occlusion_frequency_scale = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					metadata = 
					{
						data_type = "string"
						soundevent_data = "true"
						value = 
						{
							value = "meta"
						}
					}
					relevant_player = 
					{
						data_type = "int"
						value = "-1"
						_system_properties = 
						{
							display_group = "advanced"
						}
					}
					distance_effect_mix = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Position"
						}
					}
					restrict_source_reverb = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Reverb"
						}
					}
					voice_fade_out_time = 
					{
						data_type = "float"
						value = "0.200000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Voice Management"
						}
					}
					voice_culling_threshold = 
					{
						data_type = "float"
						value = "0.001000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Voice Management"
						}
					}
					voice_looped_culling_update_time = 
					{
						data_type = "float"
						value = "0.500000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Voice Management"
						}
					}
					enable_retrigger = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Retrigger"
						}
					}
					retrigger_interval_min = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Retrigger"
						}
					}
					retrigger_interval_max = 
					{
						data_type = "float"
						value = "1.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Retrigger"
						}
					}
					retrigger_radius = 
					{
						data_type = "float"
						value = "1000.000000"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Retrigger"
						}
					}
					retrigger_count = 
					{
						data_type = "float"
						value = "-1"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Retrigger"
						}
					}
					distance_volume_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[150.000000,0.500000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[300.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_distance_volume_mapping_curve"
						}
					}
					use_distance_volume_mapping_curve = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					distance_unfiltered_stereo_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[150.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[300.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_distance_unfiltered_stereo_mapping_curve"
						}
					}
					use_distance_unfiltered_stereo_mapping_curve = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					fadetime_volume_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[0.500000,0.500000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[1.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_fadetime_volume_mapping_curve"
						}
					}
					use_fadetime_volume_mapping_curve = 
					{
						data_type = "bool"
						value = "true"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					time_volume_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[0.500000,0.500000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[1.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_time_volume_mapping_curve"
						}
					}
					use_time_volume_mapping_curve = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					impact_speed_input_volume_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[0.500000,0.500000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[1.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_impact_speed_input_volume_mapping_curve"
						}
					}
					use_impact_speed_input_volume_mapping_curve = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					distance_pitch_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,0.800000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[150.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[300.000000,1.200000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_distance_pitch_mapping_curve"
						}
					}
					use_distance_pitch_mapping_curve = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					time_unfiltered_stereo_mapping_curve = 
					{
						data_type = "float6"
						soundevent_data = "true"
						value = 
						{
							value1 = "[0.000000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value2 = "[2.500000,0.000000,0.000000,0.000000,2.000000,3.000000]"
							value3 = "[5.000000,1.000000,0.000000,0.000000,2.000000,3.000000]"
						}
						_system_properties = 
						{
							display_group = "advanced"
							display_edit_type = "field_curve_2d_editor"
							display_edit_flag = "public.use_time_unfiltered_stereo_mapping_curve"
						}
					}
					use_time_unfiltered_stereo_mapping_curve = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Curves"
						}
					}
					use_volume_convar = 
					{
						data_type = "bool"
						value = "false"
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
					volume_convar = 
					{
						data_type = "string"
						value = ""
						_system_properties = 
						{
							display_group = "normal"
							property_group = "Sound Events"
						}
					}
				}
			},
			
			{
				name = "mixer"
				operator = "soundmixer_get_mixgroup"
				mixgroup = "@public.mixgroup"
			},
			
			{
				name = "globals"
				operator = "get_system_globals"
				input_execute = "1"
				input_listener_index = "0"
			},
			
			{
				name = "source_info"
				operator = "game_get_source_info"
				source = "entity"
			},
			
			{
				name = "use_entity_for_block"
				operator = "ctrl_switch_float"
				input_switch = "@public.block_match_entity"
				input1 = "-1"
				input2 = "@source_info.output_entity_index"
			},
			
			{
				name = "get_entity_info"
				operator = "game_entity_info"
				input_entity_index = "@source_info.output_entity_index"
				input_default_world_position = "@public.position"
				input_default_local_position = "@globals.output_listener_front"
				attachment = "@public.attachment"
				use_world_position = "@public.use_world_position"
				use_entity_position_if_local_player = "@public.use_entity_position_if_local_player"
				use_world_position_if_dormant = "true"
				input_hold_position_on_deleted_entity = "true"
				input_add_velocity_on_deleted_entity = "false"
			},
			
			{
				name = "soundevent_limit"
				operator = "soundevent_limiter"
				execute_once = "true"
				input_execute = "@public.instance_limit"
				match_entity = "1"
				match_this_event = "1"
				input_max_events = "@public.instance_limit"
				stop_oldest = "1"
			},
			
			{
				name = "entity_is_player_add"
				operator = "math_float"
				apply = "add"
				input1 = "@get_entity_info.output_entity_is_actual_player_entity"
				input2 = "@get_entity_info.output_entity_is_player"
			},
			
			{
				name = "entity_is_player"
				operator = "math_float"
				apply = "greater_than_or_equal"
				input1 = "@entity_is_player_add.output"
				input2 = "1"
			},
			
			{
				name = "position_base"
				operator = "ctrl_switch_float3"
				input_switch = "@public.position_relative_to_player"
				input1 = "@get_entity_info.output_position"
				input2 = "@globals.output_listener_position"
			},
			
			{
				name = "position_offset_relative"
				operator = "orient_vector_to_entity"
				input_use_entity = "@public.position_offset_relative"
				input_entity_index = "@source_info.output_entity_index"
				input_vector = "@public.position_offset"
			},
			
			{
				name = "position_offset"
				operator = "math_float3"
				apply = "add"
				input1 = "@position_base.output"
				input2 = "@position_offset_relative.output"
			},
			
			{
				name = "randomize_position_input"
				input_execute = "@first_frame.output"
				operator = "math_random_float3"
				input_force_positive_z = "@public.randomize_position_hemisphere"
				input_radius_min = "@public.randomize_position_min_radius"
				input_radius_max = "@public.randomize_position_max_radius"
			},
			
			{
				name = "randomize_position"
				operator = "math_float3"
				apply = "add"
				input1 = "@position_offset.output"
				input2 = "@randomize_position_input.output"
			},
			
			{
				name = "uiposition_elements"
				input_execute = "@public.use_uiposition"
				operator = "util_elements_float3"
				input = "@public.uiposition"
			},
			
			{
				name = "uiposition_left"
				input_execute = "@public.use_uiposition"
				operator = "math_scale_float3"
				input1 = "@globals.output_listener_left"
				input2 = "@uiposition_elements.output_0"
			},
			
			{
				name = "uiposition_forward"
				input_execute = "@public.use_uiposition"
				operator = "math_scale_float3"
				input1 = "@globals.output_listener_forward"
				input2 = "@uiposition_elements.output_1"
			},
			
			{
				name = "uiposition_up"
				input_execute = "@public.use_uiposition"
				operator = "math_scale_float3"
				input1 = "@globals.output_listener_up"
				input2 = "@uiposition_elements.output_2"
			},
			
			{
				name = "uiposition_calc_step"
				input_execute = "@public.use_uiposition"
				operator = "math_float3"
				apply = "add"
				input1 = "@uiposition_left.output"
				input2 = "@uiposition_forward.output"
			},
			
			{
				name = "uiposition_calc"
				input_execute = "@public.use_uiposition"
				operator = "math_float3"
				apply = "add"
				input1 = "@uiposition_calc_step.output"
				input2 = "@uiposition_up.output"
			},
			
			{
				name = "final_position"
				operator = "math_float3"
				apply = "add"
				input1 = "@randomize_position.output"
				input2 = "@uiposition_calc.output"
			},
			
			{
				name = "distance_to_source"
				operator = "calc_distance"
				input_position1 = "@final_position.output"
				input_position2 = "@globals.output_listener_position"
			},
			
			{
				name = "multiplied_distance"
				operator = "math_float"
				apply = "mult"
				input1 = "@distance_to_source.output"
				input2 = "@public.distance_multiplier"
			},
			
			{
				name = "soundevent_block_other"
				operator = "soundevent_block"
				execute_once = "true"
				input_execute = "@public.block_other"
				input_duration = "@public.block_other_duration"
				input_distance = "@public.block_other_distance"
				match_substring = "true"
				match_event_name = "@public.block_other_name"
			},
			
			{
				name = "test_soundevent_block"
				operator = "soundevent_block_test"
				execute_once = "true"
				input_execute = "@public.block_matching_events"
				input_entity_index = "@use_entity_for_block.output"
				input_position = "@final_position.output"
				match_this_event = "1"
			},
			
			{
				name = "set_soundevent_block"
				operator = "soundevent_block"
				execute_once = "true"
				input_execute = "1.000000"
				input_duration = "@public.block_duration"
				input_entity_index = "@use_entity_for_block.output"
				input_position = "@final_position.output"
				input_distance = "@public.block_distance"
				match_this_event = "1"
				is_untimed = "0"
			},
			
			{
				name = "get_event_info"
				operator = "soundevent_get_info"
			},
			
			{
				name = "expired_time_raw"
				operator = "math_float"
				apply = "sub"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "@public.self_destruct_time"
			},
			
			{
				name = "use_expired_time"
				operator = "math_float"
				apply = "greater_than_or_equal"
				input1 = "@public.self_destruct_time"
				input2 = "0"
			},
			
			{
				name = "expired_time"
				operator = "ctrl_switch_float"
				input_switch = "@use_expired_time.output"
				input1 = "-1"
				input2 = "@expired_time_raw.output"
			},
			
			{
				name = "event_stopped"
				operator = "math_float"
				apply = "max"
				input1 = "@get_event_info.output_stopped"
				input2 = "@expired_time.output"
			},
			
			{
				name = "fade_time"
				operator = "math_float"
				apply = "max"
				input1 = "@expired_time.output"
				input2 = "@get_event_info.output_stop_elapsed_time"
			},
			
			{
				name = "frame_count"
				operator = "math_float"
				apply = "add"
				input1 = "@frame_count.output"
				input2 = "1"
				output = "0"
			},
			
			{
				name = "first_frame"
				operator = "math_float"
				apply = "equal"
				input1 = "@frame_count.output"
				input2 = "1"
			},
			
			{
				name = "is_tagged_1p_sound"
				operator = "is_local_player_slot"
				input = "@public.relevant_player"
			},
			
			{
				name = "should_start_soundevent_list"
				operator = "math_float"
				apply = "and"
				input1 = "@public.enable_child_events"
				input2 = "@is_tagged_1p_sound.output"
			},
			
			{
				name = "start_soundevent_list"
				operator = "soundeventdata_start"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "soundevent_01"
				input_execute = "@should_start_soundevent_list.output"
				input_start = "@get_event_info.output_unstopped"
				pass_opvar_args = "@public.set_child_position"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
					public.source_soundscape = 
					{
						operator_arg_field = "true"
						data_type = "int"
						value = "@public.source_soundscape"
					}
				}
			},
			
			{
				name = "calc_doppler"
				input_execute = "@public.use_doppler"
				operator = "math_calc_doppler"
				input_source_position = "@final_position.output"
				input_observer_position = "@globals.output_listener_position"
				input_doppler_factor = "@public.doppler_factor"
				input_doppler_factor_receding = "@public.doppler_factor_receding"
				input_doppler_observer_scale = "0.050000"
			},
			
			{
				name = "doppler_filter"
				operator = "math_filter_float"
				input = "@calc_doppler.output"
				input_max_velocity = "1.000000"
			},
			
			{
				name = "dsp_bypass_off"
				operator = "math_float"
				apply = "invert"
				input1 = "@public.dsp_bypass"
			},
			
			{
				name = "set_builtins"
				operator = "sos_set_builtins"
				input_execute = "@dsp_bypass_off.output"
				input_voicegraph = "csgo.voice_main"
			},
			
			{
				name = "set_builtins_dsp_bypass"
				operator = "sos_set_builtins"
				input_execute = "@public.dsp_bypass"
				input_voicegraph = "csgo.dsp_bypass"
			},
			
			{
				name = "convar_use_baked_occlusion"
				operator = "convar_get"
				convar = "snd_use_baked_occlusion"
			},
			
			{
				name = "use_baked_occlusion"
				operator = "math_float"
				apply = "and"
				input1 = "@public.use_occlusion_pathing"
				input2 = "@convar_use_baked_occlusion.output"
			},
			
			{
				name = "params_steamaudio_source"
				operator = "process_steamaudio_source"
				execute_once = "true"
				input_execute = "@use_baked_occlusion.output"
				input_source_position = "@get_entity_info.output_position"
				input_listener_position = "@globals.output_listener_position"
				input_pathing_enabled = "1"
				input_pathing_eq_enabled = "0"
				input_source_offset = "0"
				output_pathing_distance_ratio = "-1"
			},
			
			{
				name = "occlusion_path_ratio"
				operator = "math_float"
				apply = "div"
				input1 = "1"
				input2 = "@params_steamaudio_source.output_pathing_distance_ratio"
			},
			
			{
				name = "occlusion_path_curve"
				operator = "math_curve_2d"
				input = "@occlusion_path_ratio.output"
				input_execute = "@use_baked_occlusion.output"
				input_scale_x = "1.000000"
				input_scale_y = "1.000000"
				public_field_name = "public.occlusion_path_curve"
				output = "-1.000000"
			},
			
			{
				name = "occlusion_execute"
				operator = "math_float"
				apply = "mult"
				input1 = "@public.occlusion_intensity"
				input2 = "@occlusion_interval_timer.output_interval_elapsed"
			},
			
			{
				name = "occlusion_interval_timer"
				operator = "util_interval_timer"
				input_interval = "@public.occlusion_interval"
				input_start = "1.000000"
				output_interval_elapsed = "1.000000"
			},
			
			{
				name = "calculate_occlusion"
				operator = "calc_occlusion_info"
				execute_once = "false"
				input_execute = "@occlusion_execute.output"
				input_source_position = "@final_position.output"
				input_listener_position = "@globals.output_listener_position"
				input_indirect_override = "@occlusion_path_curve.output"
			},
			
			{
				name = "mixer_trigger"
				operator = "soundmixer_set_trigger"
				input_trigger = "@mult_mixer_volume.output"
				input_mixgroups = "@mixer.output_mixgroups"
			},
			
			{
				name = "speakers_spatialize_rear_scale"
				operator = "convar_get"
				convar = "snd_rear_stereo_scale"
			},
			
			{
				name = "speakers_spatialize"
				operator = "calc_spatialize_speakers"
				execute_once = "false"
				input_master_volume = "1"
				input_distance = "@distance_to_source.output"
				input_radius = "15"
				input_rear_stereo_scale = "@speakers_spatialize_rear_scale.output"
				input_source_position = "@final_position.output"
				input_listener_position = "@globals.output_listener_position"
				input_listener_left = "@globals.output_listener_left"
			},
			
			{
				name = "is_retrigger_enabled"
				operator = "math_float"
				apply = "less_than"
				input1 = "@public.enable_retrigger"
				input2 = "0.500000"
			},
			
			{
				name = "should_start_vsnd"
				operator = "math_float"
				apply = "and"
				input1 = "@is_retrigger_enabled.output"
				input2 = "@is_tagged_1p_sound.output"
			},
			
			{
				name = "get_current_roomdsp_effect"
				input_execute = "1"
				operator = "soundmixer_get_current_dsp_effect"
				input_effect = "RoomDSP"
			},
			
			{
				name = "get_source_dsp_effect"
				input_execute = "1"
				operator = "soundmixer_get_source_dsp_preset"
				input_mixgroup = "@public.mixgroup"
				input_distance = "@multiplied_distance.output"
				blend_ratio = "@public.dsp_blend"
				input_listener_effect_name = "@get_current_roomdsp_effect.output_effect_name"
			},
			
			{
				name = "mult_source_event_wet"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@get_source_dsp_effect.output_mix"
				input2 = "@public.reverb_source_wet"
			},
			
			{
				name = "mult_source_wet"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@mult_source_event_wet.output"
				input2 = "@mixer.output_level"
			},
			
			{
				name = "check_restrict_source_reverb"
				input_execute = "1"
				operator = "ctrl_switch_string"
				input1 = "@get_source_dsp_effect.output"
				input2 = "reverb_0_null"
				input_switch = "@public.restrict_source_reverb"
			},
			
			{
				name = "get_dsp_mix_override"
				input_execute = "1"
				operator = "soundmixer_get_dsp_mixgroup_modifier"
				apply = "mult"
				input_effect_name = "@get_current_roomdsp_effect.output_effect_name"
				input_mixgroup = "@public.mixgroup"
				input_distance = "@multiplied_distance.output"
			},
			
			{
				name = "mult_dsp_mod"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@public.reverb_wet"
				input2 = "@get_dsp_mix_override.output"
			},
			
			{
				name = "mult_wet"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@mult_dsp_mod.output"
				input2 = "@mixer.output_dsp"
			},
			
			{
				name = "mult_occlusion_frequency_scale"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@public.occlusion_frequency_scale"
				input2 = "@calculate_occlusion.output"
			},
			
			{
				name = "if_occlusion_is_greater_than_one"
				input_execute = "1"
				operator = "math_float"
				apply = "greater_than"
				input1 = "@mult_occlusion_frequency_scale.output"
				input2 = "1.000000"
			},
			
			{
				name = "get_occlusion_intensity_value"
				input_execute = "1"
				operator = "ctrl_switch_float"
				input1 = "@public.occlusion_intensity"
				input2 = "1.000000"
				input_switch = "@if_occlusion_is_greater_than_one.output"
			},
			
			{
				name = "wet_crossfade"
				operator = "math_crossfade_float"
				input_execute = "1"
				input = "@calculate_wet.output"
				equal_power_amount = "1"
			},
			
			{
				name = "ducking_crossfade"
				operator = "math_crossfade_float"
				input_execute = "1"
				input = "@public.ducking_bypass"
				equal_power_amount = "1"
			},
			
			{
				name = "allvoices_input_level"
				operator = "math_float"
				apply = "mult"
				input1 = "@wet_crossfade.output1"
				input2 = "@ducking_crossfade.output1"
			},
			
			{
				name = "submix_allvoices_send"
				operator = "vmix_mixgraph_send"
				input_execute = "@dsp_bypass_off.output"
				input = "@allvoices_input_level.output"
				submix_name = "AllVoices"
				send_type = "named"
			},
			
			{
				name = "reverb_input_level"
				operator = "math_float"
				apply = "mult"
				input1 = "@wet_crossfade.output2"
				input2 = "@ducking_crossfade.output1"
			},
			
			{
				name = "submix_reverb_send"
				operator = "vmix_mixgraph_send"
				input_execute = "@dsp_bypass_off.output"
				input = "@reverb_input_level.output"
				submix_name = "reverb"
				send_type = "named"
			},
			
			{
				name = "ducking_input_level"
				operator = "math_float"
				apply = "mult"
				input1 = "@wet_crossfade.output1"
				input2 = "@ducking_crossfade.output2"
			},
			
			{
				name = "submix_ducking_bypass_voices_send"
				operator = "vmix_mixgraph_send"
				input_execute = "@dsp_bypass_off.output"
				input = "@ducking_input_level.output"
				submix_name = "ducking_bypass_voices"
				send_type = "named"
			},
			
			{
				name = "ducking_reverb_input_level"
				operator = "math_float"
				apply = "mult"
				input1 = "@wet_crossfade.output2"
				input2 = "@ducking_crossfade.output2"
			},
			
			{
				name = "submix_ducking_bypass_reverb_send"
				operator = "vmix_mixgraph_send"
				input_execute = "@dsp_bypass_off.output"
				input = "@ducking_reverb_input_level.output"
				submix_name = "ducking_bypass_reverb"
				send_type = "named"
			},
			
			{
				name = "submix_dsp_bypass_send"
				operator = "vmix_mixgraph_send"
				input_execute = "@public.dsp_bypass"
				input = "1"
				submix_name = "dsp_bypass"
				send_type = "named"
			},
			
			{
				name = "in_retrigger_radius"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "less_than"
				input1 = "@distance_to_source.output"
				input2 = "@public.retrigger_radius"
			},
			
			{
				name = "retrigger_finite"
				operator = "math_float"
				execute_once = "1"
				apply = "greater_than_or_equal"
				input1 = "@public.retrigger_count"
				input2 = "0"
			},
			
			{
				name = "retrigger_count_reached"
				operator = "math_float"
				apply = "greater_than_or_equal"
				input1 = "@retrigger_count.output"
				input2 = "@public.retrigger_count"
			},
			
			{
				name = "retrigger_count_stop"
				operator = "math_float"
				apply = "mult"
				input1 = "@retrigger_count_reached.output"
				input2 = "@retrigger_finite.output"
			},
			
			{
				name = "out_of_retrigger_radius"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "less_than_or_equal"
				input1 = "@public.retrigger_radius"
				input2 = "0.000000"
			},
			
			{
				name = "does_not_retrigger_sound"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "add"
				input1 = "@out_of_retrigger_radius.output"
				input2 = "@retrigger_count_stop.output"
			},
			
			{
				name = "time_since_last_trigger"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "sub"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "@last_trigger_time.output"
			},
			
			{
				name = "retrigger_interval_execute"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "add"
				input1 = "@retrigger_interval_is_zero.output"
				input2 = "@retrigger_sound.output"
			},
			
			{
				name = "retrigger_interval_random"
				operator = "math_random_float"
				input_execute = "@retrigger_interval_execute.output"
				input_min = "@public.retrigger_interval_min"
				input_max = "@public.retrigger_interval_max"
			},
			
			{
				name = "retrigger_interval_calc"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "mult"
				input1 = "@retrigger_interval_random.output"
				input2 = "1.000000"
				__remap_input2 = "retrigger_interval"
			},
			
			{
				name = "retrigger_interval_is_zero"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "equal"
				input1 = "@retrigger_interval_random.output"
				input2 = "0.000000"
				output = "1.000000"
			},
			
			{
				name = "retrigger_sound"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "greater_than"
				input1 = "@time_since_last_trigger.output"
				input2 = "@retrigger_interval_calc.output"
			},
			
			{
				name = "retrigger_count"
				input_execute = "@retrigger_sound.output"
				operator = "math_float"
				apply = "add"
				input1 = "@retrigger_count.output"
				input2 = "1"
				output = "0"
			},
			
			{
				name = "last_trigger_time"
				operator = "math_float"
				apply = "add"
				input1 = "@get_event_info.output_elapsed_time"
				input2 = "0.000000"
				input_execute = "@retrigger_sound.output"
			},
			
			{
				name = "start_retrigger"
				operator = "soundevent_start"
				input_execute = "@in_retrigger_radius.output"
				input_start = "@retrigger_sound.output"
				input_use_parent_seed = "0"
				retrigger_current_event = "true"
				input_spawn_oneshots = "1"
				spawn_orphans = "0"
				pass_opvar_args = "true"
				input_update_opvar_args = "true"
				operator_variables = 
				{
					public.position = 
					{
						operator_arg_field = "true"
						data_type = "float3"
						value = "@public.position"
					}
					public.enable_retrigger = 
					{
						operator_arg_field = "true"
						data_type = "bool"
						value = "false"
					}
					public.source_soundscape = 
					{
						operator_arg_field = "true"
						data_type = "int"
						value = "@public.source_soundscape"
					}
				}
			},
			
			{
				name = "calc_event_finished"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "mult"
				input1 = "@does_not_retrigger_sound.output"
				input2 = "@start_vsnd.output_voice_finished"
			},
			
			{
				name = "calc_event_finished_or_stopped"
				input_execute = "@public.enable_retrigger"
				operator = "math_float"
				apply = "add"
				input1 = "@calc_event_finished.output"
				input2 = "@get_event_info.output_stopped"
			},
			
			{
				name = "event_terminator"
				input_execute = "@public.enable_retrigger"
				operator = "soundevent_control"
				input_add_dependent = "1.000000"
				input_clear_dependencies = "@calc_event_finished_or_stopped.output"
			},
			
			{
				name = "volume_random_variance"
				execute_once = "true"
				operator = "math_random_float"
				input_min = "@public.volume_random_min"
				input_max = "@public.volume_random_max"
			},
			
			{
				name = "volume_random_add"
				operator = "math_float"
				apply = "add"
				input1 = "@public.volume"
				input2 = "@volume_random_variance.output"
			},
			
			{
				name = "pitch_random_variance"
				execute_once = "true"
				operator = "math_random_float"
				input_min = "@public.pitch_random_min"
				input_max = "@public.pitch_random_max"
			},
			
			{
				name = "pitch_random_add"
				operator = "math_float"
				apply = "add"
				input1 = "@public.pitch"
				input2 = "@pitch_random_variance.output"
			},
			
			{
				name = "volume_volume_linear_mult"
				__customstack_curve_input = "volume"
				__customstack_curve_output = "volume"
				__customstack_default_output = ""
				__customstack_hidden = "1"
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@volume_random_add.output"
				input2 = "1.000000"
			},
			
			{
				name = "pitch_pitch_linear_mult"
				__customstack_curve_input = "pitch"
				__customstack_curve_output = "pitch"
				__customstack_default_output = ""
				__customstack_hidden = "1"
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@pitch_random_add.output"
				input2 = "1.000000"
			},
			
			{
				name = "get_vsnd_track_01"
				operator = "opvar_get_vsnd"
				execute_once = "true"
				check_event_data = "true"
				input_operator_name = "public"
				input_field_name = "vsnd_files_track_01"
				input_use_namespace = "false"
				array_selection_type = "random_exclusive"
				__customstack_curve_input = "vsnd_files_track_01"
				__customstack_curve_output = "track_01"
				__customstack_default_output = ""
				__customstack_vsnd = "1"
				__customstack_hidden = "1"
			},
			
			{
				name = "distance_volume_mapping_curve"
				operator = "math_curve_2d"
				input = "@multiplied_distance.output"
				input_execute = "@public.use_distance_volume_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.distance_volume_mapping_curve"
				output = "1.0"
			},
			
			{
				name = "distance_volume_mapping_curve_mult"
				__customstack_curve_name = "distance_volume_mapping_curve"
				__customstack_curve_input = "distance"
				__customstack_curve_output = "volume"
				__customstack_default_output = ""
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@distance_volume_mapping_curve.output"
				input2 = "@volume_volume_linear_mult.output"
			},
			
			{
				name = "distance_unfiltered_stereo_mapping_curve"
				operator = "math_curve_2d"
				input = "@multiplied_distance.output"
				input_execute = "@public.use_distance_unfiltered_stereo_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.distance_unfiltered_stereo_mapping_curve"
				output = "0.000000"
			},
			
			{
				name = "distance_unfiltered_stereo_mapping_curve_mult"
				__customstack_curve_name = "distance_unfiltered_stereo_mapping_curve"
				__customstack_curve_input = "distance"
				__customstack_curve_output = "unfiltered_stereo"
				__customstack_default_output = "0.000000"
				__customstack_curve_mixgraph_send = "1"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "invert_scale"
				input1 = "@distance_unfiltered_stereo_mapping_curve.output"
				input2 = "0"
			},
			
			{
				name = "fadetime_volume_mapping_curve"
				operator = "math_curve_2d"
				input = "@fade_time.output"
				input_execute = "@public.use_fadetime_volume_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.fadetime_volume_mapping_curve"
				output = "1.0"
			},
			
			{
				name = "fadetime_volume_mapping_curve_mult"
				__customstack_curve_name = "fadetime_volume_mapping_curve"
				__customstack_curve_input = "fadetime"
				__customstack_curve_output = "volume"
				__customstack_default_output = ""
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@fadetime_volume_mapping_curve.output"
				input2 = "@distance_volume_mapping_curve_mult.output"
			},
			
			{
				name = "time_volume_mapping_curve"
				operator = "math_curve_2d"
				input = "@get_event_info.output_elapsed_time"
				input_execute = "@public.use_time_volume_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.time_volume_mapping_curve"
				output = "1"
			},
			
			{
				name = "time_volume_mapping_curve_mult"
				__customstack_curve_name = "time_volume_mapping_curve"
				__customstack_curve_input = "time"
				__customstack_curve_output = "volume"
				__customstack_default_output = "1"
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@time_volume_mapping_curve.output"
				input2 = "@fadetime_volume_mapping_curve_mult.output"
			},
			
			{
				name = "impact_speed_input_volume_mapping_curve"
				operator = "math_curve_2d"
				input = "@public.impact_speed_input"
				input_execute = "@public.use_impact_speed_input_volume_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.impact_speed_input_volume_mapping_curve"
				output = "1.0"
			},
			
			{
				name = "impact_speed_input_volume_mapping_curve_mult"
				__customstack_curve_name = "impact_speed_input_volume_mapping_curve"
				__customstack_curve_input = "impact_speed_input"
				__customstack_curve_output = "volume"
				__customstack_default_output = ""
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@impact_speed_input_volume_mapping_curve.output"
				input2 = "@time_volume_mapping_curve_mult.output"
			},
			
			{
				name = "distance_pitch_mapping_curve"
				operator = "math_curve_2d"
				input = "@multiplied_distance.output"
				input_execute = "@public.use_distance_pitch_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.distance_pitch_mapping_curve"
				output = "1.0"
			},
			
			{
				name = "distance_pitch_mapping_curve_mult"
				__customstack_curve_name = "distance_pitch_mapping_curve"
				__customstack_curve_input = "distance"
				__customstack_curve_output = "pitch"
				__customstack_default_output = ""
				__customstack_curve_mixgraph_send = "0"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "mult"
				input1 = "@distance_pitch_mapping_curve.output"
				input2 = "@pitch_pitch_linear_mult.output"
			},
			
			{
				name = "time_unfiltered_stereo_mapping_curve"
				operator = "math_curve_2d"
				input = "@get_event_info.output_elapsed_time"
				input_execute = "@public.use_time_unfiltered_stereo_mapping_curve"
				input_scale_x = "1.0"
				input_scale_y = "1.0"
				public_field_name = "public.time_unfiltered_stereo_mapping_curve"
				output = "0.0"
			},
			
			{
				name = "time_unfiltered_stereo_mapping_curve_mult"
				__customstack_curve_name = "time_unfiltered_stereo_mapping_curve"
				__customstack_curve_input = "time"
				__customstack_curve_output = "unfiltered_stereo"
				__customstack_default_output = ""
				__customstack_curve_mixgraph_send = "1"
				__customstack_curve_submix_send = "0"
				__customstack_seek_speed = "-1.000000"
				operator = "math_float"
				apply = "invert_scale"
				input1 = "@time_unfiltered_stereo_mapping_curve.output"
				input2 = "@distance_unfiltered_stereo_mapping_curve_mult.output"
			},
			
			{
				name = "mult_pitch_doppler"
				operator = "math_float"
				apply = "mult"
				input1 = "@distance_pitch_mapping_curve_mult.output"
				input2 = "@doppler_filter.output"
				__remap_input1 = "pitch"
			},
			
			{
				name = "get_volume_convar"
				operator = "convar_get"
				convar = "@public.volume_convar"
				output = "1.0"
				input_execute = "@public.use_volume_convar"
				execute_once = "false"
			},
			
			{
				name = "mult_mixer_volume"
				operator = "math_accumulate12_float"
				apply = "mult"
				input1 = "@mixer.output_volume"
				input2 = "@impact_speed_input_volume_mapping_curve_mult.output"
				input3 = "@get_volume_convar.output"
				__remap_input2 = "volume"
			},
			
			{
				name = "volume_fan"
				operator = "util_float_to_speakers"
				execute_once = "false"
				input = "@mult_mixer_volume.output"
				__move_to_end = "true"
			},
			
			{
				name = "volume_fan_mult"
				operator = "math_speakers"
				apply = "mult"
				execute_once = "false"
				input1 = "@speakers_spatialize.output"
				input2 = "@volume_fan.output"
				__move_to_end = "true"
			},
			
			{
				name = "volume_fan_scale"
				operator = "math_speakers"
				apply = "mult"
				execute_once = "false"
				input2 = "@volume_fan_mult.output"
				left_front = "1.500000"
				left_rear = "1.500000"
				left_side = "1.500000"
				right_front = "1.500000"
				right_rear = "1.500000"
				right_side = "1.500000"
				center = "1.500000"
				lfe = "1.500000"
				__move_to_end = "true"
			},
			
			{
				name = "speaker_spatialize_lerp"
				operator = "convar_get"
				convar = "snd_spatialize_lerp"
				__move_to_end = "true"
			},
			
			{
				name = "speaker_spatialize_mult"
				operator = "math_float"
				apply = "mult"
				input1 = "@speaker_spatialize_lerp.output"
				input2 = "@public.distance_effect_mix"
				__move_to_end = "true"
			},
			
			{
				name = "volume_fan_mix"
				operator = "math_lerp_speakers"
				input1 = "@volume_fan.output"
				input2 = "@volume_fan_scale.output"
				input = "@speaker_spatialize_mult.output"
				__move_to_end = "true"
			},
			
			{
				name = "get_vsnd_info"
				operator = "vmix_vsnd_info"
				input_vsnd = "@get_vsnd_track_01.output"
				__move_to_end = "true"
			},
			
			{
				name = "vsnd_not_ready"
				operator = "math_float"
				apply = "sub"
				input1 = "1.000000"
				input2 = "@get_vsnd_info.output_is_valid"
				__move_to_end = "true"
			},
			
			{
				name = "looped_event_terminator"
				input_execute = "@get_vsnd_info.output_is_looped"
				operator = "soundevent_control"
				input_add_dependent = "1.000000"
				input_clear_dependencies = "@event_stopped.output"
				__move_to_end = "true"
			},
			
			{
				name = "stop_elapsed_time_less_than_fade_curve"
				operator = "math_float"
				apply = "less_than"
				input1 = "@fade_time.output"
				input2 = "@fadetime_volume_mapping_curve.output_x_max"
				__move_to_end = "true"
			},
			
			{
				name = "should_continue_playing"
				operator = "ctrl_switch_float"
				input_switch = "@public.use_fadetime_volume_mapping_curve"
				input1 = "@get_event_info.output_unstopped"
				input2 = "@stop_elapsed_time_less_than_fade_curve.output"
				__move_to_end = "true"
			},
			
			{
				name = "distance_volume_less_than_zero"
				operator = "math_float"
				apply = "less_than"
				input1 = "@distance_volume_mapping_curve.output"
				input2 = "@public.voice_culling_threshold"
				__move_to_end = "true"
			},
			
			{
				name = "distance_volume_greater_than_zero"
				operator = "math_float"
				apply = "greater_than_or_equal"
				input1 = "@distance_volume_mapping_curve.output"
				input2 = "@public.voice_culling_threshold"
				__move_to_end = "true"
			},
			
			{
				name = "should_continue_playing_with_volume_on"
				operator = "math_float"
				apply = "and"
				input1 = "@should_continue_playing.output"
				input2 = "@distance_volume_greater_than_zero.output"
				__move_to_end = "true"
			},
			
			{
				name = "culling_and_unstopped"
				operator = "math_float"
				input_execute = "@get_vsnd_info.output_is_looped"
				apply = "min"
				input1 = "@distance_volume_less_than_zero.output"
				input2 = "@should_continue_playing.output"
				__move_to_end = "true"
			},
			
			{
				name = "not_culling_and_unstopped"
				operator = "math_float"
				input_execute = "@get_vsnd_info.output_is_looped"
				apply = "min"
				input1 = "@distance_volume_greater_than_zero.output"
				input2 = "@should_continue_playing.output"
				__move_to_end = "true"
			},
			
			{
				name = "culling_think_time_switch"
				operator = "ctrl_switch_float"
				input_switch = "@culling_and_unstopped.output"
				input1 = "-1.000000"
				input2 = "@public.voice_looped_culling_update_time"
				__move_to_end = "true"
			},
			
			{
				name = "set_culling_dependency"
				operator = "soundevent_control"
				input_execute = "@culling_and_unstopped.output"
				input_add_dependent = "@culling_and_unstopped.output"
				input_wait_time = "@culling_think_time_switch.output"
				__move_to_end = "true"
			},
			
			{
				name = "switch_start_mode"
				operator = "ctrl_switch_float"
				input_switch = "@get_vsnd_info.output_is_looped"
				input1 = "@should_continue_playing_with_volume_on.output"
				input2 = "@not_culling_and_unstopped.output"
				__move_to_end = "true"
			},
			
			{
				name = "loading_override_start"
				operator = "ctrl_switch_float"
				input_switch = "@vsnd_not_ready.output"
				input1 = "@switch_start_mode.output"
				input2 = "@get_event_info.output_unstopped"
				__move_to_end = "true"
			},
			
			{
				name = "switch_fade_time"
				operator = "ctrl_switch_float"
				input_switch = "@distance_volume_less_than_zero.output"
				input1 = "@public.voice_fade_out_time"
				input2 = "0"
				__move_to_end = "true"
			},
			
			{
				name = "start_vsnd"
				operator = "vmix_voice_start"
				execute_once = "false"
				input_execute = "@should_start_vsnd.output"
				input_start1 = "1.000000"
				input_start2 = "0.000000"
				input_start3 = "0.000000"
				input_start4 = "0.000000"
				input_start5 = "0.000000"
				input_start6 = "0.000000"
				input_start7 = "0.000000"
				input_start8 = "0.000000"
				input_start = "@loading_override_start.output"
				input_should_pause = "@public.vsnd_pause_with_game"
				input_speaker_volumes = "@volume_fan_mix.output"
				input_pitch = "@mult_pitch_doppler.output"
				input_delay = "@public.delay"
				input_fade_out = "@switch_fade_time.output"
				input_track1 = "track_01"
				input_vsnd1 = "@get_vsnd_track_01.output"
			},
			
			{
				name = "send_voicegraph_source_dsp"
				input_execute = "1"
				operator = "vmix_voicegraph_name_input"
				input_name = "source_effect"
				input_dsp_preset_name = "@check_restrict_source_reverb.output"
				__move_to_end = "true"
			},
			
			{
				name = "calculate_wet"
				input_execute = "1"
				operator = "math_float"
				apply = "mult"
				input1 = "@mult_wet.output"
				input2 = "1"
				__remap_input2 = "wet"
			},
			
			{
				name = "send_voicegraph_source_reverb_wet"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "source_wet"
				input = "@mult_source_wet.output"
				__move_to_end = "true"
			},
			
			{
				name = "send_voicegraph_dsp_preset"
				input_execute = "@public.override_dsp_preset"
				operator = "vmix_mixgraph_input_dsp_preset"
				input_name = "RoomDSP"
				input_dsp_preset_name = "@public.dsp_preset"
				__move_to_end = "true"
			},
			
			{
				name = "send_eq_occlusion"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "eq_occlusion"
				input = "@mult_occlusion_frequency_scale.output"
				__move_to_end = "true"
			},
			
			{
				name = "send_eq_occlusion_mix"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "eq_occlusion_mix"
				input = "@get_occlusion_intensity_value.output"
				__move_to_end = "true"
			},
			
			{
				name = "send_distance_effect_mix"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "distance_effect_mix"
				input = "@public.distance_effect_mix"
				__move_to_end = "true"
			},
			
			{
				name = "calculate_source_listener_angle"
				operator = "math_calc_angle_from_3_vec3"
				input_execute = "1"
				input_center_position = "@globals.output_listener_position"
				input_position_01 = "@globals.output_listener_front"
				input_position_02 = "@final_position.output"
			},
			
			{
				name = "send_voicegraph_ang_y"
				input_execute = "1"
				operator = "vmix_voicegraph_input"
				input_name = "ang_y"
				input = "@calculate_source_listener_angle.output"
			},
			
			{
				name = "set_voice_position"
				input_execute = "1"
				operator = "sos_set_voice_position"
				input_position = "@final_position.output"
				__customstack_send_pos = "1"
			},
			
			{
				name = "send_voicegraph_unfiltered_stereo"
				operator = "vmix_voicegraph_input"
				input_name = "unfiltered_stereo"
				input = "@time_unfiltered_stereo_mapping_curve_mult.output"
			},
			
			{
				name = "send_voicegraph_steamaudio_relative_position"
				operator = "vmix_voicegraph_input"
				execute_once = "true"
				input_name = "steamaudio_relative_position"
				input = "0"
			},
		]
		_system_properties = 
		{
			__customstack = "1"
			display_group = "basic"
		}
		__customstack_layers = 
		{
			track_01 = "1"
		}
		__customstack_components = 
		{
			main = "1"
			RetriggerSoundEvent = "1"
		}
	}
}